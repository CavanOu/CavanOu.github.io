import {
  ShouldRender,
  __awaiter,
  __rest,
  animated,
  attachPropertiesToComponent,
  canUseDom,
  config_provider_default,
  createUpdateEffect,
  dropdown_default,
  getDefaultConfig,
  getScrollParent,
  globals,
  mask_default,
  mergeProps,
  popup_default,
  renderToContainer,
  require_MapCache,
  require_dayjs_min,
  require_isEqual,
  require_merge,
  setDefaultConfig,
  supportsPassive,
  to,
  useClickAway,
  useConfig,
  useDebounceEffect_default,
  useInViewport_default,
  useIsomorphicLayoutEffect_default,
  useLockFn_default,
  useLockScroll,
  useMemoizedFn_default,
  useMount_default,
  usePropsValue,
  useShouldRender,
  useSpring,
  useThrottleFn_default,
  useTimeout_default,
  useUnmount_default,
  useUnmountedRef_default,
  useUpdateEffect_default,
  useUpdate_default,
  withNativeProps,
  withStopPropagation
} from "./chunk-WZMEUJT6.js";
import {
  AddOutline_default,
  CheckCircleFill_default,
  CheckOutline_default,
  ClockCircleFill_default,
  CloseCircleFill_default,
  CloseOutline_default,
  DownOutline_default,
  ExclamationCircleFill_default,
  InformationCircleFill_default,
  LeftOutline_default,
  MinusOutline_default,
  QuestionCircleOutline_default,
  RightOutline_default,
  SearchOutline_default,
  SoundOutline_default,
  TextDeletionOutline_default
} from "./chunk-HOMRCUOU.js";
import {
  require_classnames
} from "./chunk-NH4XR52E.js";
import {
  require_react_dom
} from "./chunk-PPN4A5ZK.js";
import {
  _extends
} from "./chunk-GCEFSD4J.js";
import {
  require_react_is
} from "./chunk-TTSBJ5PO.js";
import {
  require_react
} from "./chunk-5CRN2NCE.js";
import {
  __commonJS,
  __objRest,
  __spreadProps,
  __spreadValues,
  __toESM
} from "./chunk-WWO6H54A.js";

// node_modules/dayjs/plugin/isoWeek.js
var require_isoWeek = __commonJS({
  "node_modules/dayjs/plugin/isoWeek.js"(exports, module) {
    !function(e, t) {
      typeof exports == "object" && typeof module != "undefined" ? module.exports = t() : typeof define == "function" && define.amd ? define(t) : (e = typeof globalThis != "undefined" ? globalThis : e || self).dayjs_plugin_isoWeek = t();
    }(exports, function() {
      "use strict";
      var e = "day";
      return function(t, i, s) {
        var a = function(t2) {
          return t2.add(4 - t2.isoWeekday(), e);
        }, d = i.prototype;
        d.isoWeekYear = function() {
          return a(this).year();
        }, d.isoWeek = function(t2) {
          if (!this.$utils().u(t2))
            return this.add(7 * (t2 - this.isoWeek()), e);
          var i2, d2, n2, o, r = a(this), u = (i2 = this.isoWeekYear(), d2 = this.$u, n2 = (d2 ? s.utc : s)().year(i2).startOf("year"), o = 4 - n2.isoWeekday(), n2.isoWeekday() > 4 && (o += 7), n2.add(o, e));
          return r.diff(u, "week") + 1;
        }, d.isoWeekday = function(e2) {
          return this.$utils().u(e2) ? this.day() || 7 : this.day(this.day() % 7 ? e2 : e2 - 7);
        };
        var n = d.startOf;
        d.startOf = function(e2, t2) {
          var i2 = this.$utils(), s2 = !!i2.u(t2) || t2;
          return i2.p(e2) === "isoweek" ? s2 ? this.date(this.date() - (this.isoWeekday() - 1)).startOf("day") : this.date(this.date() - 1 - (this.isoWeekday() - 1) + 7).endOf("day") : n.bind(this)(e2, t2);
        };
      };
    });
  }
});

// node_modules/antd-mobile/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/antd-mobile/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = 60103;
        var REACT_PORTAL_TYPE = 60106;
        var REACT_FRAGMENT_TYPE = 60107;
        var REACT_STRICT_MODE_TYPE = 60108;
        var REACT_PROFILER_TYPE = 60114;
        var REACT_PROVIDER_TYPE = 60109;
        var REACT_CONTEXT_TYPE = 60110;
        var REACT_FORWARD_REF_TYPE = 60112;
        var REACT_SUSPENSE_TYPE = 60113;
        var REACT_SUSPENSE_LIST_TYPE = 60120;
        var REACT_MEMO_TYPE = 60115;
        var REACT_LAZY_TYPE = 60116;
        var REACT_BLOCK_TYPE = 60121;
        var REACT_SERVER_BLOCK_TYPE = 60122;
        var REACT_FUNDAMENTAL_TYPE = 60117;
        var REACT_SCOPE_TYPE = 60119;
        var REACT_OPAQUE_ID_TYPE = 60128;
        var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
        var REACT_OFFSCREEN_TYPE = 60130;
        var REACT_LEGACY_HIDDEN_TYPE = 60131;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          REACT_ELEMENT_TYPE = symbolFor("react.element");
          REACT_PORTAL_TYPE = symbolFor("react.portal");
          REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
          REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
          REACT_PROFILER_TYPE = symbolFor("react.profiler");
          REACT_PROVIDER_TYPE = symbolFor("react.provider");
          REACT_CONTEXT_TYPE = symbolFor("react.context");
          REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
          REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
          REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
          REACT_MEMO_TYPE = symbolFor("react.memo");
          REACT_LAZY_TYPE = symbolFor("react.lazy");
          REACT_BLOCK_TYPE = symbolFor("react.block");
          REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
          REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
          REACT_SCOPE_TYPE = symbolFor("react.scope");
          REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
          REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
          REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
          REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
        }
        var enableScopeAPI = false;
        function isValidElementType(type4) {
          if (typeof type4 === "string" || typeof type4 === "function") {
            return true;
          }
          if (type4 === REACT_FRAGMENT_TYPE || type4 === REACT_PROFILER_TYPE || type4 === REACT_DEBUG_TRACING_MODE_TYPE || type4 === REACT_STRICT_MODE_TYPE || type4 === REACT_SUSPENSE_TYPE || type4 === REACT_SUSPENSE_LIST_TYPE || type4 === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
            return true;
          }
          if (typeof type4 === "object" && type4 !== null) {
            if (type4.$$typeof === REACT_LAZY_TYPE || type4.$$typeof === REACT_MEMO_TYPE || type4.$$typeof === REACT_PROVIDER_TYPE || type4.$$typeof === REACT_CONTEXT_TYPE || type4.$$typeof === REACT_FORWARD_REF_TYPE || type4.$$typeof === REACT_FUNDAMENTAL_TYPE || type4.$$typeof === REACT_BLOCK_TYPE || type4[0] === REACT_SERVER_BLOCK_TYPE) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object4) {
          if (typeof object4 === "object" && object4 !== null) {
            var $$typeof = object4.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type4 = object4.type;
                switch (type4) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type4;
                  default:
                    var $$typeofType = type4 && type4.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment2 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object4) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object4) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer(object4) {
          return typeOf(object4) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object4) {
          return typeOf(object4) === REACT_PROVIDER_TYPE;
        }
        function isElement2(object4) {
          return typeof object4 === "object" && object4 !== null && object4.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object4) {
          return typeOf(object4) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment4(object4) {
          return typeOf(object4) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object4) {
          return typeOf(object4) === REACT_LAZY_TYPE;
        }
        function isMemo2(object4) {
          return typeOf(object4) === REACT_MEMO_TYPE;
        }
        function isPortal(object4) {
          return typeOf(object4) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object4) {
          return typeOf(object4) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object4) {
          return typeOf(object4) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object4) {
          return typeOf(object4) === REACT_SUSPENSE_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment2;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement2;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment4;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo2;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/antd-mobile/node_modules/react-is/index.js
var require_react_is2 = __commonJS({
  "node_modules/antd-mobile/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "node_modules/lodash/memoize.js"(exports, module) {
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize2(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize2.Cache || MapCache)();
      return memoized;
    }
    memoize2.Cache = MapCache;
    module.exports = memoize2;
  }
});

// node_modules/dayjs/plugin/isoWeeksInYear.js
var require_isoWeeksInYear = __commonJS({
  "node_modules/dayjs/plugin/isoWeeksInYear.js"(exports, module) {
    !function(e, n) {
      typeof exports == "object" && typeof module != "undefined" ? module.exports = n() : typeof define == "function" && define.amd ? define(n) : (e = typeof globalThis != "undefined" ? globalThis : e || self).dayjs_plugin_isoWeeksInYear = n();
    }(exports, function() {
      "use strict";
      return function(e, n) {
        n.prototype.isoWeeksInYear = function() {
          var e2 = this.isLeapYear(), n2 = this.endOf("y").day();
          return n2 === 4 || e2 && n2 === 5 ? 53 : 52;
        };
      };
    });
  }
});

// node_modules/dayjs/plugin/isLeapYear.js
var require_isLeapYear = __commonJS({
  "node_modules/dayjs/plugin/isLeapYear.js"(exports, module) {
    !function(e, t) {
      typeof exports == "object" && typeof module != "undefined" ? module.exports = t() : typeof define == "function" && define.amd ? define(t) : (e = typeof globalThis != "undefined" ? globalThis : e || self).dayjs_plugin_isLeapYear = t();
    }(exports, function() {
      "use strict";
      return function(e, t) {
        t.prototype.isLeapYear = function() {
          return this.$y % 4 == 0 && this.$y % 100 != 0 || this.$y % 400 == 0;
        };
      };
    });
  }
});

// node_modules/staged-components/index.js
var require_staged_components = __commonJS({
  "node_modules/staged-components/index.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.staged = void 0;
    var react_1 = __importDefault(require_react());
    function processNext(next) {
      if (typeof next === "function") {
        return react_1.default.createElement(Stage, { stage: next });
      } else {
        return next;
      }
    }
    function Stage(props) {
      const next = props.stage();
      return processNext(next);
    }
    function staged3(stage) {
      return function Staged(props, ref) {
        const next = stage(props, ref);
        return processNext(next);
      };
    }
    exports.staged = staged3;
  }
});

// node_modules/@babel/runtime/helpers/interopRequireDefault.js
var require_interopRequireDefault = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }
    module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/typeof.js
var require_typeof = __commonJS({
  "node_modules/@babel/runtime/helpers/typeof.js"(exports, module) {
    function _typeof2(obj) {
      "@babel/helpers - typeof";
      return module.exports = _typeof2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof2(obj);
    }
    module.exports = _typeof2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/interopRequireWildcard.js
var require_interopRequireWildcard = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireWildcard.js"(exports, module) {
    var _typeof2 = require_typeof()["default"];
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof2(obj) !== "object" && typeof obj !== "function") {
        return {
          "default": obj
        };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    module.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/rc-util/lib/warning.js
var require_warning = __commonJS({
  "node_modules/rc-util/lib/warning.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.call = call3;
    exports.default = void 0;
    exports.note = note;
    exports.noteOnce = noteOnce;
    exports.resetWarned = resetWarned;
    exports.warning = warning4;
    exports.warningOnce = warningOnce2;
    var warned2 = {};
    function warning4(valid, message) {
      if (!valid && console !== void 0) {
        console.error("Warning: ".concat(message));
      }
    }
    function note(valid, message) {
      if (!valid && console !== void 0) {
        console.warn("Note: ".concat(message));
      }
    }
    function resetWarned() {
      warned2 = {};
    }
    function call3(method4, valid, message) {
      if (!valid && !warned2[message]) {
        method4(false, message);
        warned2[message] = true;
      }
    }
    function warningOnce2(valid, message) {
      call3(warning4, valid, message);
    }
    function noteOnce(valid, message) {
      call3(note, valid, message);
    }
    var _default = warningOnce2;
    exports.default = _default;
  }
});

// node_modules/rc-field-form/lib/FieldContext.js
var require_FieldContext = __commonJS({
  "node_modules/rc-field-form/lib/FieldContext.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _interopRequireWildcard = require_interopRequireWildcard();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.HOOK_MARK = void 0;
    var React138 = _interopRequireWildcard(require_react());
    var _warning = _interopRequireDefault(require_warning());
    var HOOK_MARK2 = "RC_FORM_INTERNAL_HOOKS";
    exports.HOOK_MARK = HOOK_MARK2;
    var warningFunc3 = function warningFunc4() {
      (0, _warning.default)(false, "Can not find FormContext. Please make sure you wrap Field under Form.");
    };
    var Context2 = React138.createContext({
      getFieldValue: warningFunc3,
      getFieldsValue: warningFunc3,
      getFieldError: warningFunc3,
      getFieldWarning: warningFunc3,
      getFieldsError: warningFunc3,
      isFieldsTouched: warningFunc3,
      isFieldTouched: warningFunc3,
      isFieldValidating: warningFunc3,
      isFieldsValidating: warningFunc3,
      resetFields: warningFunc3,
      setFields: warningFunc3,
      setFieldsValue: warningFunc3,
      validateFields: warningFunc3,
      submit: warningFunc3,
      getInternalHooks: function getInternalHooks2() {
        warningFunc3();
        return {
          dispatch: warningFunc3,
          initEntityValue: warningFunc3,
          registerField: warningFunc3,
          useSubscribe: warningFunc3,
          setInitialValues: warningFunc3,
          destroyForm: warningFunc3,
          setCallbacks: warningFunc3,
          registerWatch: warningFunc3,
          getFields: warningFunc3,
          setValidateMessages: warningFunc3,
          setPreserve: warningFunc3,
          getInitialValue: warningFunc3
        };
      }
    });
    var _default = Context2;
    exports.default = _default;
  }
});

// node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js
var require_use_sync_external_store_shim_development = __commonJS({
  "node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React138 = require_react();
        var ReactSharedInternals = React138.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format2) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format2, args);
            }
          }
        }
        function printWarning(level, format2, args) {
          {
            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            if (stack !== "") {
              format2 += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format2);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function is(x, y) {
          return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var useState38 = React138.useState, useEffect27 = React138.useEffect, useLayoutEffect = React138.useLayoutEffect, useDebugValue = React138.useDebugValue;
        var didWarnOld18Alpha = false;
        var didWarnUncachedGetSnapshot = false;
        function useSyncExternalStore2(subscribe, getSnapshot, getServerSnapshot) {
          {
            if (!didWarnOld18Alpha) {
              if (React138.startTransition !== void 0) {
                didWarnOld18Alpha = true;
                error("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.");
              }
            }
          }
          var value = getSnapshot();
          {
            if (!didWarnUncachedGetSnapshot) {
              var cachedValue = getSnapshot();
              if (!objectIs(value, cachedValue)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
              }
            }
          }
          var _useState = useState38({
            inst: {
              value,
              getSnapshot
            }
          }), inst = _useState[0].inst, forceUpdate = _useState[1];
          useLayoutEffect(function() {
            inst.value = value;
            inst.getSnapshot = getSnapshot;
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
          }, [subscribe, value, getSnapshot]);
          useEffect27(function() {
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
            var handleStoreChange = function() {
              if (checkIfSnapshotChanged(inst)) {
                forceUpdate({
                  inst
                });
              }
            };
            return subscribe(handleStoreChange);
          }, [subscribe]);
          useDebugValue(value);
          return value;
        }
        function checkIfSnapshotChanged(inst) {
          var latestGetSnapshot = inst.getSnapshot;
          var prevValue = inst.value;
          try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
          } catch (error2) {
            return true;
          }
        }
        function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {
          return getSnapshot();
        }
        var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var isServerEnvironment = !canUseDOM;
        var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore2;
        var useSyncExternalStore$2 = React138.useSyncExternalStore !== void 0 ? React138.useSyncExternalStore : shim;
        exports.useSyncExternalStore = useSyncExternalStore$2;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/use-sync-external-store/shim/index.js
var require_shim = __commonJS({
  "node_modules/use-sync-external-store/shim/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_use_sync_external_store_shim_development();
    }
  }
});

// node_modules/antd-mobile/es/global/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/global/global.css";
if (canUseDom) {
  document.addEventListener("touchstart", () => {
  }, true);
}

// node_modules/antd-mobile/es/components/action-sheet/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/action-sheet/action-sheet.css";

// node_modules/antd-mobile/es/components/action-sheet/action-sheet.js
var import_react3 = __toESM(require_react());
var import_classnames2 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/safe-area/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/safe-area/safe-area.css";

// node_modules/antd-mobile/es/components/safe-area/safe-area.js
var import_react = __toESM(require_react());
var import_classnames = __toESM(require_classnames());
var classPrefix = "adm-safe-area";
var SafeArea = (props) => {
  return withNativeProps(props, import_react.default.createElement("div", {
    className: (0, import_classnames.default)(classPrefix, `${classPrefix}-position-${props.position}`)
  }));
};

// node_modules/antd-mobile/es/components/safe-area/index.js
var safe_area_default = SafeArea;

// node_modules/antd-mobile/es/utils/render-imperatively.js
var import_react2 = __toESM(require_react());

// node_modules/antd-mobile/es/utils/render.js
var ReactDOM = __toESM(require_react_dom());
var fullClone = Object.assign({}, ReactDOM);
var {
  version,
  render: reactRender,
  unmountComponentAtNode
} = fullClone;
var createRoot;
try {
  const mainVersion = Number((version || "").split(".")[0]);
  if (mainVersion >= 18 && fullClone.createRoot) {
    createRoot = fullClone.createRoot;
  }
} catch (e) {
}
function toggleWarning(skip) {
  const {
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
  } = fullClone;
  if (__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED && typeof __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === "object") {
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.usingClientEntryPoint = skip;
  }
}
var MARK = "__antd_mobile_root__";
function legacyRender(node, container) {
  reactRender(node, container);
}
function concurrentRender(node, container) {
  toggleWarning(true);
  const root = container[MARK] || createRoot(container);
  toggleWarning(false);
  root.render(node);
  container[MARK] = root;
}
function render(node, container) {
  if (createRoot) {
    concurrentRender(node, container);
    return;
  }
  legacyRender(node, container);
}
function legacyUnmount(container) {
  return unmountComponentAtNode(container);
}
function concurrentUnmount(container) {
  return __awaiter(this, void 0, void 0, function* () {
    return Promise.resolve().then(() => {
      var _a;
      (_a = container[MARK]) === null || _a === void 0 ? void 0 : _a.unmount();
      delete container[MARK];
    });
  });
}
function unmount(container) {
  if (createRoot) {
    return concurrentUnmount(container);
  }
  return legacyUnmount(container);
}

// node_modules/antd-mobile/es/utils/render-to-body.js
function renderToBody(element) {
  const container = document.createElement("div");
  document.body.appendChild(container);
  function unmount2() {
    const unmountResult = unmount(container);
    if (unmountResult && container.parentNode) {
      container.parentNode.removeChild(container);
    }
  }
  render(element, container);
  return unmount2;
}

// node_modules/antd-mobile/es/utils/render-imperatively.js
function renderImperatively(element) {
  const Wrapper2 = import_react2.default.forwardRef((_, ref) => {
    const [visible, setVisible] = (0, import_react2.useState)(false);
    const closedRef = (0, import_react2.useRef)(false);
    const [elementToRender, setElementToRender] = (0, import_react2.useState)(element);
    const keyRef = (0, import_react2.useRef)(0);
    (0, import_react2.useEffect)(() => {
      if (!closedRef.current) {
        setVisible(true);
      } else {
        afterClose();
      }
    }, []);
    function onClose() {
      var _a, _b;
      closedRef.current = true;
      setVisible(false);
      (_b = (_a = elementToRender.props).onClose) === null || _b === void 0 ? void 0 : _b.call(_a);
    }
    function afterClose() {
      var _a, _b;
      unmount2();
      (_b = (_a = elementToRender.props).afterClose) === null || _b === void 0 ? void 0 : _b.call(_a);
    }
    (0, import_react2.useImperativeHandle)(ref, () => ({
      close: onClose,
      replace: (element2) => {
        var _a, _b;
        keyRef.current++;
        (_b = (_a = elementToRender.props).afterClose) === null || _b === void 0 ? void 0 : _b.call(_a);
        setElementToRender(element2);
      }
    }));
    return import_react2.default.cloneElement(elementToRender, Object.assign(Object.assign({}, elementToRender.props), {
      key: keyRef.current,
      visible,
      onClose,
      afterClose
    }));
  });
  const wrapperRef = import_react2.default.createRef();
  const unmount2 = renderToBody(import_react2.default.createElement(Wrapper2, {
    ref: wrapperRef
  }));
  return {
    close: () => {
      var _a;
      (_a = wrapperRef.current) === null || _a === void 0 ? void 0 : _a.close();
    },
    replace: (element2) => {
      var _a;
      (_a = wrapperRef.current) === null || _a === void 0 ? void 0 : _a.replace(element2);
    }
  };
}

// node_modules/antd-mobile/es/components/action-sheet/action-sheet.js
var classPrefix2 = `adm-action-sheet`;
var defaultProps = {
  visible: false,
  actions: [],
  cancelText: "",
  closeOnAction: false,
  closeOnMaskClick: true,
  safeArea: true
};
var ActionSheet = (p) => {
  const props = mergeProps(defaultProps, p);
  return import_react3.default.createElement(popup_default, {
    visible: props.visible,
    onMaskClick: () => {
      var _a, _b;
      (_a = props.onMaskClick) === null || _a === void 0 ? void 0 : _a.call(props);
      if (props.closeOnMaskClick) {
        (_b = props.onClose) === null || _b === void 0 ? void 0 : _b.call(props);
      }
    },
    afterClose: props.afterClose,
    className: (0, import_classnames2.default)(`${classPrefix2}-popup`, props.popupClassName),
    style: props.popupStyle,
    getContainer: props.getContainer
  }, withNativeProps(props, import_react3.default.createElement("div", {
    className: classPrefix2
  }, props.extra && import_react3.default.createElement("div", {
    className: `${classPrefix2}-extra`
  }, props.extra), import_react3.default.createElement("div", {
    className: `${classPrefix2}-button-list`
  }, props.actions.map((action, index) => import_react3.default.createElement("div", {
    key: action.key,
    className: `${classPrefix2}-button-item-wrapper`
  }, import_react3.default.createElement("a", {
    className: (0, import_classnames2.default)("adm-plain-anchor", `${classPrefix2}-button-item`, {
      [`${classPrefix2}-button-item-danger`]: action.danger,
      [`${classPrefix2}-button-item-disabled`]: action.disabled
    }),
    onClick: () => {
      var _a, _b, _c;
      (_a = action.onClick) === null || _a === void 0 ? void 0 : _a.call(action);
      (_b = props.onAction) === null || _b === void 0 ? void 0 : _b.call(props, action, index);
      if (props.closeOnAction) {
        (_c = props.onClose) === null || _c === void 0 ? void 0 : _c.call(props);
      }
    }
  }, import_react3.default.createElement("div", {
    className: `${classPrefix2}-button-item-name`
  }, action.text), action.description && import_react3.default.createElement("div", {
    className: `${classPrefix2}-button-item-description`
  }, action.description))))), props.cancelText && import_react3.default.createElement("div", {
    className: `${classPrefix2}-cancel`
  }, import_react3.default.createElement("div", {
    className: `${classPrefix2}-button-item-wrapper`
  }, import_react3.default.createElement("a", {
    className: (0, import_classnames2.default)("adm-plain-anchor", `${classPrefix2}-button-item`),
    onClick: () => {
      var _a;
      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
    }
  }, import_react3.default.createElement("div", {
    className: `${classPrefix2}-button-item-name`
  }, props.cancelText)))), props.safeArea && import_react3.default.createElement(safe_area_default, {
    position: "bottom"
  }))));
};
function showActionSheet(props) {
  return renderImperatively(import_react3.default.createElement(ActionSheet, Object.assign({}, props)));
}

// node_modules/antd-mobile/es/components/action-sheet/index.js
var action_sheet_default = attachPropertiesToComponent(ActionSheet, {
  show: showActionSheet
});

// node_modules/antd-mobile/es/components/auto-center/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/auto-center/auto-center.css";

// node_modules/antd-mobile/es/components/auto-center/auto-center.js
var import_react4 = __toESM(require_react());
var classPrefix3 = "adm-auto-center";
var AutoCenter = (props) => {
  return withNativeProps(props, import_react4.default.createElement("div", {
    className: classPrefix3
  }, import_react4.default.createElement("div", {
    className: `${classPrefix3}-content`
  }, props.children)));
};

// node_modules/antd-mobile/es/components/auto-center/index.js
var auto_center_default = AutoCenter;

// node_modules/antd-mobile/es/components/avatar/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/avatar/avatar.css";

// node_modules/antd-mobile/es/components/avatar/avatar.js
var import_react6 = __toESM(require_react());

// node_modules/antd-mobile/es/components/avatar/fallback.js
var import_react5 = __toESM(require_react());
var Fallback = (0, import_react5.memo)(() => import_react5.default.createElement("svg", {
  className: "adm-avatar-fallback",
  width: "88px",
  height: "88px",
  viewBox: "0 0 88 88",
  version: "1.1"
}, import_react5.default.createElement("title", null, "\u7F16\u7EC4 3"), import_react5.default.createElement("defs", null, import_react5.default.createElement("polygon", {
  id: "path-1",
  points: "0 0 88 0 88 88 0 88"
})), import_react5.default.createElement("g", {
  id: "\u9875\u9762-1",
  stroke: "none",
  strokeWidth: "1",
  fill: "none",
  fillRule: "evenodd"
}, import_react5.default.createElement("g", {
  id: "\u8BED\u96C0",
  transform: "translate(-495.000000, -71.000000)"
}, import_react5.default.createElement("g", {
  id: "\u7F16\u7EC4-3",
  transform: "translate(495.000000, 71.000000)"
}, import_react5.default.createElement("mask", {
  id: "mask-2",
  fill: "white"
}, import_react5.default.createElement("use", {
  xlinkHref: "#path-1"
})), import_react5.default.createElement("use", {
  id: "Mask",
  fill: "#EEEEEE",
  fillRule: "nonzero",
  xlinkHref: "#path-1"
}), import_react5.default.createElement("path", {
  d: "M44.5707528,16 L43.4292117,16 L42.9575197,16.0086403 L42.9575195,16.0086403 C36.5215787,16.2615464 31.4341803,21.5678078 31.4344832,28.0273864 L31.4344832,34.7776551 L31.4495601,35.3716788 L31.4495593,35.3716628 C31.599687,38.5368723 32.9422041,41.5269327 35.2058513,43.7376716 L38.2147759,46.6775505 L38.4086219,46.8913989 C38.7747759,47.3385365 38.9750835,47.9001589 38.9750835,48.4833848 L38.9750835,48.8938006 L38.9556989,49.1897326 L38.9556989,49.1897325 C38.8577746,49.9812662 38.3754713,50.67284 37.667703,51.036605 L18.7375269,60.7440265 L18.4101421,60.9276334 L18.4101423,60.9276333 C16.9141658,61.8418636 16.0009389,63.4714674 16,65.2283758 L16,66.070809 L16.0129231,66.3948217 C16.1766149,68.4123376 17.860922,70 19.91569,70 L68.0843101,70 L68.08431,70 C70.2460467,70 71.9988087,68.243122 72,66.0751224 L72,65.2326893 C72,63.3382982 70.9446194,61.6037466 69.2624598,60.7440295 L50.3322837,51.036608 L50.3322835,51.0366079 C49.5291218,50.6249082 49.0240448,49.7962466 49.024903,48.8916436 L49.024903,48.4812278 C49.024903,47.8029608 49.3005955,47.1527756 49.7852106,46.6775603 L52.7941352,43.7376813 L52.7941354,43.7376811 C55.204308,41.3832325 56.5636029,38.151975 56.5633606,34.7776456 L56.5633606,28.0273769 L56.5633606,28.0273774 C56.5633606,21.3848531 51.1940878,16 44.5707524,16 L44.5707528,16 Z",
  id: "\u5F62\u72B6",
  fill: "#CCCCCC",
  fillRule: "nonzero",
  mask: "url(#mask-2)"
}))))));

// node_modules/antd-mobile/es/components/avatar/avatar.js
var classPrefix4 = "adm-avatar";
var defaultProps2 = {
  fallback: import_react6.default.createElement(Fallback, null),
  fit: "cover"
};
var Avatar = (p) => {
  const props = mergeProps(defaultProps2, p);
  return withNativeProps(props, import_react6.default.createElement(image_default, {
    className: classPrefix4,
    src: props.src,
    fallback: props.fallback,
    placeholder: props.fallback,
    alt: props.alt,
    lazy: props.lazy,
    fit: props.fit,
    onClick: props.onClick,
    onError: props.onError
  }));
};

// node_modules/antd-mobile/es/components/avatar/index.js
var avatar_default = Avatar;

// node_modules/antd-mobile/es/components/badge/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/badge/badge.css";

// node_modules/antd-mobile/es/components/badge/badge.js
var import_classnames3 = __toESM(require_classnames());
var import_react7 = __toESM(require_react());
var classPrefix5 = `adm-badge`;
var dot = import_react7.default.createElement(import_react7.default.Fragment, null);
var Badge = (props) => {
  const {
    content,
    color,
    children
  } = props;
  const isDot = content === dot;
  const badgeCls = (0, import_classnames3.default)(classPrefix5, !!children && `${classPrefix5}-fixed`, isDot && `${classPrefix5}-dot`, props.bordered && `${classPrefix5}-bordered`);
  const element = content || content === 0 ? withNativeProps(props, import_react7.default.createElement("div", {
    className: badgeCls,
    style: {
      "--color": color
    }
  }, !isDot && import_react7.default.createElement("div", {
    className: `${classPrefix5}-content`
  }, content))) : null;
  return children ? import_react7.default.createElement("div", {
    className: (0, import_classnames3.default)(`${classPrefix5}-wrapper`, props.wrapperClassName),
    style: props.wrapperStyle
  }, children, element) : element;
};

// node_modules/antd-mobile/es/components/badge/index.js
var badge_default = attachPropertiesToComponent(Badge, {
  dot
});

// node_modules/antd-mobile/es/components/button/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/button/button.css";

// node_modules/antd-mobile/es/components/button/button.js
var import_react9 = __toESM(require_react());
var import_classnames5 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/dot-loading/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/dot-loading/dot-loading.css";

// node_modules/antd-mobile/es/components/dot-loading/dot-loading.js
var import_react8 = __toESM(require_react());
var import_classnames4 = __toESM(require_classnames());
var classPrefix6 = `adm-dot-loading`;
var colorRecord = {
  default: "var(--adm-color-weak)",
  primary: "var(--adm-color-primary)",
  white: "var(--adm-color-white)"
};
var defaultProps3 = {
  color: "default"
};
var DotLoading = (0, import_react8.memo)((p) => {
  var _a;
  const props = mergeProps(defaultProps3, p);
  return withNativeProps(props, import_react8.default.createElement("div", {
    style: {
      color: (_a = colorRecord[props.color]) !== null && _a !== void 0 ? _a : props.color
    },
    className: (0, import_classnames4.default)("adm-loading", classPrefix6)
  }, import_react8.default.createElement("svg", {
    height: "1em",
    viewBox: "0 0 100 40",
    style: {
      verticalAlign: "-0.125em"
    }
  }, import_react8.default.createElement("g", {
    stroke: "none",
    strokeWidth: "1",
    fill: "none",
    fillRule: "evenodd"
  }, import_react8.default.createElement("g", {
    transform: "translate(-100.000000, -71.000000)"
  }, import_react8.default.createElement("g", {
    transform: "translate(95.000000, 71.000000)"
  }, import_react8.default.createElement("g", {
    transform: "translate(5.000000, 0.000000)"
  }, [0, 1, 2].map((i) => import_react8.default.createElement("rect", {
    key: i,
    fill: "currentColor",
    x: 20 + i * 26,
    y: "16",
    width: "8",
    height: "8",
    rx: "2"
  }, import_react8.default.createElement("animate", {
    attributeName: "y",
    from: "16",
    to: "16",
    dur: "2s",
    begin: `${i * 0.2}s`,
    repeatCount: "indefinite",
    values: "16; 6; 26; 16; 16",
    keyTimes: "0; 0.1; 0.3; 0.4; 1"
  }))))))))));
});

// node_modules/antd-mobile/es/components/dot-loading/index.js
var dot_loading_default = DotLoading;

// node_modules/antd-mobile/es/utils/validate.js
function isPromise(obj) {
  return !!obj && typeof obj === "object" && typeof obj.then === "function";
}
function isIOS() {
  return canUseDom ? /ios|iphone|ipad|ipod/.test(navigator.userAgent.toLowerCase()) : false;
}

// node_modules/antd-mobile/es/components/button/button.js
var classPrefix7 = `adm-button`;
var defaultProps4 = {
  color: "default",
  fill: "solid",
  block: false,
  loading: false,
  loadingIcon: import_react9.default.createElement(dot_loading_default, {
    color: "currentColor"
  }),
  type: "button",
  shape: "default",
  size: "middle"
};
var Button = (0, import_react9.forwardRef)((p, ref) => {
  const props = mergeProps(defaultProps4, p);
  const [innerLoading, setInnerLoading] = (0, import_react9.useState)(false);
  const nativeButtonRef = (0, import_react9.useRef)(null);
  const loading = props.loading === "auto" ? innerLoading : props.loading;
  const disabled = props.disabled || loading;
  (0, import_react9.useImperativeHandle)(ref, () => ({
    get nativeElement() {
      return nativeButtonRef.current;
    }
  }));
  const handleClick = (e) => __awaiter(void 0, void 0, void 0, function* () {
    if (!props.onClick)
      return;
    const promise = props.onClick(e);
    if (isPromise(promise)) {
      try {
        setInnerLoading(true);
        yield promise;
        setInnerLoading(false);
      } catch (e2) {
        setInnerLoading(false);
        throw e2;
      }
    }
  });
  return withNativeProps(props, import_react9.default.createElement("button", {
    ref: nativeButtonRef,
    type: props.type,
    onClick: handleClick,
    className: (0, import_classnames5.default)(classPrefix7, props.color ? `${classPrefix7}-${props.color}` : null, {
      [`${classPrefix7}-block`]: props.block,
      [`${classPrefix7}-disabled`]: disabled,
      [`${classPrefix7}-fill-outline`]: props.fill === "outline",
      [`${classPrefix7}-fill-none`]: props.fill === "none",
      [`${classPrefix7}-mini`]: props.size === "mini",
      [`${classPrefix7}-small`]: props.size === "small",
      [`${classPrefix7}-large`]: props.size === "large",
      [`${classPrefix7}-loading`]: loading
    }, `${classPrefix7}-shape-${props.shape}`),
    disabled,
    onMouseDown: props.onMouseDown,
    onMouseUp: props.onMouseUp,
    onTouchStart: props.onTouchStart,
    onTouchEnd: props.onTouchEnd
  }, loading ? import_react9.default.createElement("div", {
    className: `${classPrefix7}-loading-wrapper`
  }, props.loadingIcon, props.loadingText) : props.children));
});

// node_modules/antd-mobile/es/components/button/index.js
var button_default = Button;

// node_modules/antd-mobile/es/components/calendar/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/calendar/calendar.css";

// node_modules/antd-mobile/es/components/calendar/calendar.js
var import_react12 = __toESM(require_react());
var import_dayjs = __toESM(require_dayjs_min());
var import_classnames6 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/calendar/arrow-left.js
var import_react10 = __toESM(require_react());
var ArrowLeft = () => {
  return import_react10.default.createElement("svg", {
    height: "1em",
    viewBox: "0 0 44 44"
  }, import_react10.default.createElement("g", {
    stroke: "none",
    strokeWidth: "1",
    fill: "none",
    fillRule: "evenodd"
  }, import_react10.default.createElement("g", {
    transform: "translate(-100.000000, -22.000000)"
  }, import_react10.default.createElement("g", {
    transform: "translate(100.000000, 22.000000)"
  }, import_react10.default.createElement("rect", {
    x: "0",
    y: "0",
    width: "44",
    height: "44"
  }), import_react10.default.createElement("g", {
    transform: "translate(12.000000, 4.000000)",
    fill: "currentColor",
    fillRule: "nonzero"
  }, import_react10.default.createElement("path", {
    d: "M19.4833058,2.71985611 L3.53051139,17.0699744 C3.0173831,17.5315665 2.97522952,18.3220903 3.43630803,18.8357433 L3.43630796,18.8357432 C3.46601289,18.8688164 3.49745845,18.9002801 3.53051133,18.9300007 L19.4833057,33.2801611 C20.1234001,33.8559077 20.1759552,34.8420707 19.6007967,35.4827774 C19.0256382,36.1235263 18.0404824,36.1761351 17.400388,35.6003885 L1.44759367,21.2502703 L1.4475933,21.25027 C1.33208743,21.1463692 1.22220259,21.036372 1.11840792,20.920748 C-0.49302969,19.1256817 -0.345639536,16.3628317 1.4475933,14.7497465 L17.4003877,0.399628282 C18.0404821,-0.176160428 19.0256378,-0.123509422 19.6007963,0.517239417 C20.1759548,1.1579461 20.1233997,2.14410915 19.4833053,2.7198557 L19.4833058,2.71985611 Z"
  }))))));
};

// node_modules/antd-mobile/es/components/calendar/arrow-left-double.js
var import_react11 = __toESM(require_react());
var ArrowLeftDouble = () => {
  return import_react11.default.createElement("svg", {
    height: "1em",
    viewBox: "0 0 44 44"
  }, import_react11.default.createElement("g", {
    stroke: "none",
    strokeWidth: "1",
    fill: "none",
    fillRule: "evenodd"
  }, import_react11.default.createElement("g", {
    transform: "translate(-24.000000, -22.000000)"
  }, import_react11.default.createElement("g", {
    transform: "translate(24.000000, 22.000000)"
  }, import_react11.default.createElement("rect", {
    x: "0",
    y: "0",
    width: "44",
    height: "44"
  }), import_react11.default.createElement("g", {
    transform: "translate(7.000000, 4.000000)",
    fill: "currentColor",
    fillRule: "nonzero"
  }, import_react11.default.createElement("path", {
    d: "M19.4833058,2.71985611 L3.53051139,17.0699744 C3.0173831,17.5315665 2.97522952,18.3220903 3.43630803,18.8357433 L3.43630796,18.8357432 C3.46601289,18.8688164 3.49745845,18.9002801 3.53051133,18.9300007 L19.4833057,33.2801611 C20.1234001,33.8559077 20.1759552,34.8420707 19.6007967,35.4827774 C19.0256382,36.1235263 18.0404824,36.1761351 17.400388,35.6003885 L1.44759367,21.2502703 L1.4475933,21.25027 C1.33208743,21.1463692 1.22220259,21.036372 1.11840792,20.920748 C-0.49302969,19.1256817 -0.345639536,16.3628317 1.4475933,14.7497465 L17.4003877,0.399628282 C18.0404821,-0.176160428 19.0256378,-0.123509422 19.6007963,0.517239417 C20.1759548,1.1579461 20.1233997,2.14410915 19.4833053,2.7198557 L19.4833058,2.71985611 Z"
  }), import_react11.default.createElement("path", {
    d: "M19.5305114,17.0699744 C19.0173831,17.5315665 18.9752295,18.3220903 19.436308,18.8357433 C19.4660129,18.8688164 19.4974585,18.9002801 19.5305113,18.9300007 L29.4833057,27.2801611 C30.1234001,27.8559077 30.1759552,28.8420707 29.6007967,29.4827774 C29.0256382,30.1235263 28.0404824,30.1761351 27.400388,29.6003885 L17.4475937,21.2502703 C17.3320874,21.1463692 17.2222026,21.036372 17.1184079,20.920748 C15.5069703,19.1256817 15.6543605,16.3628317 17.4475933,14.7497465 L27.4003877,6.39962828 C28.0404821,5.82383957 29.0256378,5.87649058 29.6007963,6.51723942 C30.1759548,7.1579461 30.1233997,8.14410915 29.4833053,8.7198557 L19.5305114,17.0699744 Z"
  }))))));
};

// node_modules/antd-mobile/es/components/calendar/calendar.js
var import_isoWeek = __toESM(require_isoWeek());

// node_modules/antd-mobile/es/components/calendar/convert.js
function convertValueToRange(selectionMode, value) {
  if (selectionMode === void 0) {
    return null;
  }
  if (value === null) {
    return null;
  }
  if (Array.isArray(value)) {
    return value;
  }
  return [value, value];
}

// node_modules/antd-mobile/es/components/calendar/calendar.js
import_dayjs.default.extend(import_isoWeek.default);
var classPrefix8 = "adm-calendar";
var defaultProps5 = {
  weekStartsOn: "Sunday",
  defaultValue: null,
  allowClear: true,
  prevMonthButton: import_react12.default.createElement(ArrowLeft, null),
  prevYearButton: import_react12.default.createElement(ArrowLeftDouble, null),
  nextMonthButton: import_react12.default.createElement(ArrowLeft, null),
  nextYearButton: import_react12.default.createElement(ArrowLeftDouble, null)
};
var Calendar = (0, import_react12.forwardRef)((p, ref) => {
  const today = (0, import_dayjs.default)();
  const props = mergeProps(defaultProps5, p);
  const {
    locale
  } = useConfig();
  const markItems = [...locale.Calendar.markItems];
  if (props.weekStartsOn === "Sunday") {
    const item = markItems.pop();
    if (item)
      markItems.unshift(item);
  }
  const [dateRange, setDateRange] = usePropsValue({
    value: props.value === void 0 ? void 0 : convertValueToRange(props.selectionMode, props.value),
    defaultValue: convertValueToRange(props.selectionMode, props.defaultValue),
    onChange: (v) => {
      var _a, _b;
      if (props.selectionMode === "single") {
        (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, v ? v[0] : null);
      } else if (props.selectionMode === "range") {
        (_b = props.onChange) === null || _b === void 0 ? void 0 : _b.call(props, v);
      }
    }
  });
  const [intermediate, setIntermediate] = (0, import_react12.useState)(false);
  const [current, setCurrent] = (0, import_react12.useState)(() => (0, import_dayjs.default)(dateRange ? dateRange[0] : today).date(1));
  useUpdateEffect_default(() => {
    var _a;
    (_a = props.onPageChange) === null || _a === void 0 ? void 0 : _a.call(props, current.year(), current.month() + 1);
  }, [current]);
  (0, import_react12.useImperativeHandle)(ref, () => ({
    jumpTo: (pageOrPageGenerator) => {
      let page;
      if (typeof pageOrPageGenerator === "function") {
        page = pageOrPageGenerator({
          year: current.year(),
          month: current.month() + 1
        });
      } else {
        page = pageOrPageGenerator;
      }
      setCurrent((0, import_dayjs.default)().year(page.year).month(page.month - 1).date(1));
    },
    jumpToToday: () => {
      setCurrent((0, import_dayjs.default)().date(1));
    }
  }));
  const header = import_react12.default.createElement("div", {
    className: `${classPrefix8}-header`
  }, import_react12.default.createElement("a", {
    className: `${classPrefix8}-arrow-button ${classPrefix8}-arrow-button-year`,
    onClick: () => {
      setCurrent(current.subtract(1, "year"));
    }
  }, props.prevYearButton), import_react12.default.createElement("a", {
    className: `${classPrefix8}-arrow-button ${classPrefix8}-arrow-button-month`,
    onClick: () => {
      setCurrent(current.subtract(1, "month"));
    }
  }, props.prevMonthButton), import_react12.default.createElement("div", {
    className: `${classPrefix8}-title`
  }, locale.Calendar.renderYearAndMonth(current.year(), current.month() + 1)), import_react12.default.createElement("a", {
    className: (0, import_classnames6.default)(`${classPrefix8}-arrow-button`, `${classPrefix8}-arrow-button-right`, `${classPrefix8}-arrow-button-right-month`),
    onClick: () => {
      setCurrent(current.add(1, "month"));
    }
  }, props.nextMonthButton), import_react12.default.createElement("a", {
    className: (0, import_classnames6.default)(`${classPrefix8}-arrow-button`, `${classPrefix8}-arrow-button-right`, `${classPrefix8}-arrow-button-right-year`),
    onClick: () => {
      setCurrent(current.add(1, "year"));
    }
  }, props.nextYearButton));
  const maxDay = (0, import_react12.useMemo)(() => props.max && (0, import_dayjs.default)(props.max), [props.max]);
  const minDay = (0, import_react12.useMemo)(() => props.min && (0, import_dayjs.default)(props.min), [props.min]);
  function renderCells() {
    var _a;
    const cells = [];
    let iterator = current.subtract(current.isoWeekday(), "day");
    if (props.weekStartsOn === "Monday") {
      iterator = iterator.add(1, "day");
    }
    while (cells.length < 6 * 7) {
      const d = iterator;
      let isSelect = false;
      let isBegin = false;
      let isEnd = false;
      if (dateRange) {
        const [begin, end] = dateRange;
        isBegin = d.isSame(begin, "day");
        isEnd = d.isSame(end, "day");
        isSelect = isBegin || isEnd || d.isAfter(begin, "day") && d.isBefore(end, "day");
      }
      const inThisMonth = d.month() === current.month();
      const disabled = props.shouldDisableDate ? props.shouldDisableDate(d.toDate()) : maxDay && d.isAfter(maxDay, "day") || minDay && d.isBefore(minDay, "day");
      cells.push(import_react12.default.createElement("div", {
        key: d.valueOf(),
        className: (0, import_classnames6.default)(`${classPrefix8}-cell`, (disabled || !inThisMonth) && `${classPrefix8}-cell-disabled`, inThisMonth && {
          [`${classPrefix8}-cell-today`]: d.isSame(today, "day"),
          [`${classPrefix8}-cell-selected`]: isSelect,
          [`${classPrefix8}-cell-selected-begin`]: isBegin,
          [`${classPrefix8}-cell-selected-end`]: isEnd
        }),
        onClick: () => {
          if (!props.selectionMode)
            return;
          if (disabled)
            return;
          const date4 = d.toDate();
          if (!inThisMonth) {
            setCurrent(d.clone().date(1));
          }
          function shouldClear() {
            if (!props.allowClear)
              return false;
            if (!dateRange)
              return false;
            const [begin, end] = dateRange;
            return d.isSame(begin, "date") && d.isSame(end, "day");
          }
          if (props.selectionMode === "single") {
            if (props.allowClear && shouldClear()) {
              setDateRange(null);
              return;
            }
            setDateRange([date4, date4]);
          } else if (props.selectionMode === "range") {
            if (!dateRange) {
              setDateRange([date4, date4]);
              setIntermediate(true);
              return;
            }
            if (shouldClear()) {
              setDateRange(null);
              setIntermediate(false);
              return;
            }
            if (intermediate) {
              const another = dateRange[0];
              setDateRange(another > date4 ? [date4, another] : [another, date4]);
              setIntermediate(false);
            } else {
              setDateRange([date4, date4]);
              setIntermediate(true);
            }
          }
        }
      }, import_react12.default.createElement("div", {
        className: `${classPrefix8}-cell-top`
      }, d.date()), import_react12.default.createElement("div", {
        className: `${classPrefix8}-cell-bottom`
      }, (_a = props.renderLabel) === null || _a === void 0 ? void 0 : _a.call(props, d.toDate()))));
      iterator = iterator.add(1, "day");
    }
    return cells;
  }
  const body = import_react12.default.createElement("div", {
    className: `${classPrefix8}-cells`
  }, renderCells());
  const mark = import_react12.default.createElement("div", {
    className: `${classPrefix8}-mark`
  }, markItems.map((item) => import_react12.default.createElement("div", {
    key: item,
    className: `${classPrefix8}-mark-cell`
  }, item)));
  return withNativeProps(props, import_react12.default.createElement("div", {
    className: classPrefix8
  }, header, mark, body));
});

// node_modules/antd-mobile/es/components/calendar/index.js
var calendar_default = Calendar;

// node_modules/antd-mobile/es/components/capsule-tabs/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/capsule-tabs/capsule-tabs.css";

// node_modules/antd-mobile/es/components/capsule-tabs/capsule-tabs.js
var import_react16 = __toESM(require_react());
var import_classnames8 = __toESM(require_classnames());

// node_modules/antd-mobile/es/utils/use-resize-effect.js
function useResizeEffect(effect, targetRef) {
  const fn = useMemoizedFn_default(effect);
  useIsomorphicLayoutEffect_default(() => {
    const target = targetRef.current;
    if (!target)
      return;
    if (window.ResizeObserver) {
      const observer = new ResizeObserver(() => {
        fn(target);
      });
      observer.observe(target);
      return () => {
        observer.disconnect();
      };
    } else {
      fn(target);
    }
  }, [targetRef]);
}

// node_modules/antd-mobile/es/utils/use-mutation-effect.js
var import_react13 = __toESM(require_react());
function useMutationEffect(effect, targetRef, options) {
  const fn = useMemoizedFn_default(effect);
  (0, import_react13.useEffect)(() => {
    const observer = new MutationObserver(() => {
      fn();
    });
    if (!targetRef.current)
      return;
    observer.observe(targetRef.current, options);
    return () => {
      observer.disconnect();
    };
  }, [targetRef]);
}

// node_modules/antd-mobile/es/utils/bound.js
function bound(position, min3, max3) {
  let ret = position;
  if (min3 !== void 0) {
    ret = Math.max(position, min3);
  }
  if (max3 !== void 0) {
    ret = Math.min(ret, max3);
  }
  return ret;
}

// node_modules/antd-mobile/es/utils/use-isomorphic-update-layout-effect.js
var useIsomorphicUpdateLayoutEffect = createUpdateEffect(useIsomorphicLayoutEffect_default);

// node_modules/antd-mobile/es/utils/use-tab-list-scroll.js
var useTabListScroll = (targetRef, activeIndex) => {
  const [{
    scrollLeft
  }, api] = useSpring(() => ({
    scrollLeft: 0,
    config: {
      tension: 300,
      clamp: true
    }
  }));
  function animate(immediate = false) {
    const container = targetRef.current;
    if (!container)
      return;
    if (activeIndex === void 0)
      return;
    const activeTabWrapper = container.children.item(activeIndex);
    const activeTab = activeTabWrapper.children.item(0);
    const activeTabLeft = activeTab.offsetLeft;
    const activeTabWidth = activeTab.offsetWidth;
    const containerWidth = container.offsetWidth;
    const containerScrollWidth = container.scrollWidth;
    const containerScrollLeft = container.scrollLeft;
    const maxScrollDistance = containerScrollWidth - containerWidth;
    if (maxScrollDistance <= 0)
      return;
    const nextScrollLeft = bound(activeTabLeft - (containerWidth - activeTabWidth) / 2, 0, containerScrollWidth - containerWidth);
    api.start({
      scrollLeft: nextScrollLeft,
      from: {
        scrollLeft: containerScrollLeft
      },
      immediate
    });
  }
  useIsomorphicLayoutEffect_default(() => {
    animate(true);
  }, []);
  useIsomorphicUpdateLayoutEffect(() => {
    animate();
  }, [activeIndex]);
  useMutationEffect(() => {
    animate(true);
  }, targetRef, {
    subtree: true,
    childList: true,
    characterData: true
  });
  return {
    scrollLeft,
    animate
  };
};

// node_modules/antd-mobile/es/components/scroll-mask/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/scroll-mask/scroll-mask.css";

// node_modules/antd-mobile/es/components/scroll-mask/scroll-mask.js
var import_react14 = __toESM(require_react());
var import_classnames7 = __toESM(require_classnames());
var classPrefix9 = `adm-scroll-mask`;
var ScrollMask = (props) => {
  const maskRef = (0, import_react14.useRef)(null);
  const [{
    leftMaskOpacity,
    rightMaskOpacity
  }, api] = useSpring(() => ({
    leftMaskOpacity: 0,
    rightMaskOpacity: 0,
    config: {
      clamp: true
    }
  }));
  const {
    run: updateMask
  } = useThrottleFn_default((immediate = false) => {
    const mask = maskRef.current;
    if (!mask)
      return;
    const scrollEl = props.scrollTrackRef.current;
    if (!scrollEl)
      return;
    const scrollLeft = scrollEl.scrollLeft;
    const showLeftMask = scrollLeft > 0;
    const showRightMask = scrollLeft + scrollEl.offsetWidth < scrollEl.scrollWidth;
    api.start({
      leftMaskOpacity: showLeftMask ? 1 : 0,
      rightMaskOpacity: showRightMask ? 1 : 0,
      immediate
    });
  }, {
    wait: 100,
    trailing: true,
    leading: true
  });
  (0, import_react14.useEffect)(() => {
    updateMask(true);
  }, []);
  (0, import_react14.useEffect)(() => {
    const scrollEl = props.scrollTrackRef.current;
    if (!scrollEl)
      return;
    scrollEl.addEventListener("scroll", updateMask);
    return () => scrollEl.removeEventListener("scroll", updateMask);
  }, []);
  return import_react14.default.createElement(import_react14.default.Fragment, null, import_react14.default.createElement(animated.div, {
    ref: maskRef,
    className: (0, import_classnames7.default)(classPrefix9, `${classPrefix9}-left`),
    style: {
      opacity: leftMaskOpacity
    }
  }), import_react14.default.createElement(animated.div, {
    className: (0, import_classnames7.default)(classPrefix9, `${classPrefix9}-right`),
    style: {
      opacity: rightMaskOpacity
    }
  }));
};

// node_modules/antd-mobile/es/components/scroll-mask/index.js
var scroll_mask_default = ScrollMask;

// node_modules/antd-mobile/es/utils/traverse-react-node.js
var import_react15 = __toESM(require_react());
var import_react_is = __toESM(require_react_is2());
function traverseReactNode(children, fn) {
  let i = 0;
  function handle(target) {
    import_react15.default.Children.forEach(target, (child) => {
      if (!(0, import_react_is.isFragment)(child)) {
        fn(child, i);
        i += 1;
      } else {
        handle(child.props.children);
      }
    });
  }
  handle(children);
}

// node_modules/antd-mobile/es/components/capsule-tabs/capsule-tabs.js
var classPrefix10 = `adm-capsule-tabs`;
var CapsuleTab = () => {
  return null;
};
var CapsuleTabs = (props) => {
  var _a;
  const tabListContainerRef = (0, import_react16.useRef)(null);
  const rootRef = (0, import_react16.useRef)(null);
  const keyToIndexRecord = {};
  let firstActiveKey = null;
  const panes = [];
  traverseReactNode(props.children, (child, index) => {
    if (!import_react16.default.isValidElement(child))
      return;
    const key = child.key;
    if (typeof key !== "string")
      return;
    if (index === 0) {
      firstActiveKey = key;
    }
    const length = panes.push(child);
    keyToIndexRecord[key] = length - 1;
  });
  const [activeKey, setActiveKey] = usePropsValue({
    value: props.activeKey,
    defaultValue: (_a = props.defaultActiveKey) !== null && _a !== void 0 ? _a : firstActiveKey,
    onChange: (v) => {
      var _a2;
      if (v === null)
        return;
      (_a2 = props.onChange) === null || _a2 === void 0 ? void 0 : _a2.call(props, v);
    }
  });
  const {
    scrollLeft,
    animate
  } = useTabListScroll(tabListContainerRef, keyToIndexRecord[activeKey]);
  useResizeEffect(() => {
    animate(true);
  }, rootRef);
  return withNativeProps(props, import_react16.default.createElement("div", {
    className: classPrefix10,
    ref: rootRef
  }, import_react16.default.createElement("div", {
    className: `${classPrefix10}-header`
  }, import_react16.default.createElement(scroll_mask_default, {
    scrollTrackRef: tabListContainerRef
  }), import_react16.default.createElement(animated.div, {
    className: `${classPrefix10}-tab-list`,
    ref: tabListContainerRef,
    scrollLeft
  }, panes.map((pane) => withNativeProps(pane.props, import_react16.default.createElement("div", {
    key: pane.key,
    className: `${classPrefix10}-tab-wrapper`
  }, import_react16.default.createElement("div", {
    onClick: () => {
      const {
        key
      } = pane;
      if (pane.props.disabled)
        return;
      if (key === void 0 || key === null) {
        return;
      }
      setActiveKey(key.toString());
    },
    className: (0, import_classnames8.default)(`${classPrefix10}-tab`, {
      [`${classPrefix10}-tab-active`]: pane.key === activeKey,
      [`${classPrefix10}-tab-disabled`]: pane.props.disabled
    })
  }, pane.props.title)))))), panes.map((pane) => {
    if (pane.props.children === void 0) {
      return null;
    }
    const active = pane.key === activeKey;
    return import_react16.default.createElement(ShouldRender, {
      key: pane.key,
      active,
      forceRender: pane.props.forceRender,
      destroyOnClose: pane.props.destroyOnClose
    }, import_react16.default.createElement("div", {
      className: `${classPrefix10}-content`,
      style: {
        display: active ? "block" : "none"
      }
    }, pane.props.children));
  })));
};

// node_modules/antd-mobile/es/components/capsule-tabs/index.js
var capsule_tabs_default = attachPropertiesToComponent(CapsuleTabs, {
  Tab: CapsuleTab
});

// node_modules/antd-mobile/es/components/card/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/card/card.css";

// node_modules/antd-mobile/es/components/card/card.js
var import_react17 = __toESM(require_react());
var import_classnames9 = __toESM(require_classnames());
var classPrefix11 = `adm-card`;
var Card = (props) => {
  const renderHeader = () => {
    if (!(props.title || props.extra)) {
      return null;
    }
    return import_react17.default.createElement("div", {
      className: (0, import_classnames9.default)(`${classPrefix11}-header`, props.headerClassName),
      style: props.headerStyle,
      onClick: props.onHeaderClick
    }, import_react17.default.createElement("div", {
      className: `${classPrefix11}-header-title`
    }, props.title), props.extra);
  };
  const renderBody = () => {
    if (!props.children) {
      return null;
    }
    return import_react17.default.createElement("div", {
      className: (0, import_classnames9.default)(`${classPrefix11}-body`, props.bodyClassName),
      style: props.bodyStyle,
      onClick: props.onBodyClick
    }, props.children);
  };
  return withNativeProps(props, import_react17.default.createElement("div", {
    className: classPrefix11,
    onClick: props.onClick
  }, renderHeader(), renderBody()));
};

// node_modules/antd-mobile/es/components/card/index.js
var card_default = Card;

// node_modules/antd-mobile/es/components/cascade-picker/cascade-picker.js
var import_react26 = __toESM(require_react());

// node_modules/antd-mobile/es/components/picker/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/picker/picker.css";

// node_modules/antd-mobile/es/components/picker/picker.js
var import_react23 = __toESM(require_react());
var import_classnames10 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/picker-view/picker-view.js
var import_react22 = __toESM(require_react());

// node_modules/antd-mobile/es/components/picker-view/wheel.js
var import_react19 = __toESM(require_react());

// node_modules/@use-gesture/core/dist/maths-b2a210f4.esm.js
function clamp(v, min3, max3) {
  return Math.max(min3, Math.min(v, max3));
}
var V = {
  toVector(v, fallback) {
    if (v === void 0)
      v = fallback;
    return Array.isArray(v) ? v : [v, v];
  },
  add(v1, v2) {
    return [v1[0] + v2[0], v1[1] + v2[1]];
  },
  sub(v1, v2) {
    return [v1[0] - v2[0], v1[1] - v2[1]];
  },
  addTo(v1, v2) {
    v1[0] += v2[0];
    v1[1] += v2[1];
  },
  subTo(v1, v2) {
    v1[0] -= v2[0];
    v1[1] -= v2[1];
  }
};
function rubberband(distance, dimension, constant) {
  if (dimension === 0 || Math.abs(dimension) === Infinity)
    return Math.pow(distance, constant * 5);
  return distance * dimension * constant / (dimension + constant * distance);
}
function rubberbandIfOutOfBounds(position, min3, max3, constant = 0.15) {
  if (constant === 0)
    return clamp(position, min3, max3);
  if (position < min3)
    return -rubberband(min3 - position, max3 - min3, constant) + min3;
  if (position > max3)
    return +rubberband(position - max3, max3 - min3, constant) + max3;
  return position;
}
function computeRubberband(bounds, [Vx, Vy], [Rx, Ry]) {
  const [[X0, X1], [Y0, Y1]] = bounds;
  return [rubberbandIfOutOfBounds(Vx, X0, X1, Rx), rubberbandIfOutOfBounds(Vy, Y0, Y1, Ry)];
}

// node_modules/@use-gesture/core/dist/actions-1416bf77.esm.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function ownKeys(object4, enumerableOnly) {
  var keys = Object.keys(object4);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object4);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object4, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
var EVENT_TYPE_MAP = {
  pointer: {
    start: "down",
    change: "move",
    end: "up"
  },
  mouse: {
    start: "down",
    change: "move",
    end: "up"
  },
  touch: {
    start: "start",
    change: "move",
    end: "end"
  },
  gesture: {
    start: "start",
    change: "change",
    end: "end"
  }
};
function capitalize(string3) {
  if (!string3)
    return "";
  return string3[0].toUpperCase() + string3.slice(1);
}
var actionsWithoutCaptureSupported = ["enter", "leave"];
function hasCapture(capture = false, actionKey) {
  return capture && !actionsWithoutCaptureSupported.includes(actionKey);
}
function toHandlerProp(device, action = "", capture = false) {
  const deviceProps = EVENT_TYPE_MAP[device];
  const actionKey = deviceProps ? deviceProps[action] || action : action;
  return "on" + capitalize(device) + capitalize(actionKey) + (hasCapture(capture, actionKey) ? "Capture" : "");
}
var pointerCaptureEvents = ["gotpointercapture", "lostpointercapture"];
function parseProp(prop) {
  let eventKey = prop.substring(2).toLowerCase();
  const passive = !!~eventKey.indexOf("passive");
  if (passive)
    eventKey = eventKey.replace("passive", "");
  const captureKey = pointerCaptureEvents.includes(eventKey) ? "capturecapture" : "capture";
  const capture = !!~eventKey.indexOf(captureKey);
  if (capture)
    eventKey = eventKey.replace("capture", "");
  return {
    device: eventKey,
    capture,
    passive
  };
}
function toDomEventType(device, action = "") {
  const deviceProps = EVENT_TYPE_MAP[device];
  const actionKey = deviceProps ? deviceProps[action] || action : action;
  return device + actionKey;
}
function isTouch(event) {
  return "touches" in event;
}
function getPointerType(event) {
  if (isTouch(event))
    return "touch";
  if ("pointerType" in event)
    return event.pointerType;
  return "mouse";
}
function getCurrentTargetTouchList(event) {
  return Array.from(event.touches).filter((e) => {
    var _event$currentTarget, _event$currentTarget$;
    return e.target === event.currentTarget || ((_event$currentTarget = event.currentTarget) === null || _event$currentTarget === void 0 ? void 0 : (_event$currentTarget$ = _event$currentTarget.contains) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.call(_event$currentTarget, e.target));
  });
}
function getTouchList(event) {
  return event.type === "touchend" || event.type === "touchcancel" ? event.changedTouches : event.targetTouches;
}
function getValueEvent(event) {
  return isTouch(event) ? getTouchList(event)[0] : event;
}
function distanceAngle(P1, P2) {
  const dx = P2.clientX - P1.clientX;
  const dy = P2.clientY - P1.clientY;
  const cx = (P2.clientX + P1.clientX) / 2;
  const cy = (P2.clientY + P1.clientY) / 2;
  const distance = Math.hypot(dx, dy);
  const angle = -(Math.atan2(dx, dy) * 180) / Math.PI;
  const origin = [cx, cy];
  return {
    angle,
    distance,
    origin
  };
}
function touchIds(event) {
  return getCurrentTargetTouchList(event).map((touch) => touch.identifier);
}
function touchDistanceAngle(event, ids) {
  const [P1, P2] = Array.from(event.touches).filter((touch) => ids.includes(touch.identifier));
  return distanceAngle(P1, P2);
}
function pointerId(event) {
  const valueEvent = getValueEvent(event);
  return isTouch(event) ? valueEvent.identifier : valueEvent.pointerId;
}
function pointerValues(event) {
  const valueEvent = getValueEvent(event);
  return [valueEvent.clientX, valueEvent.clientY];
}
var LINE_HEIGHT = 40;
var PAGE_HEIGHT = 800;
function wheelValues(event) {
  let {
    deltaX,
    deltaY,
    deltaMode
  } = event;
  if (deltaMode === 1) {
    deltaX *= LINE_HEIGHT;
    deltaY *= LINE_HEIGHT;
  } else if (deltaMode === 2) {
    deltaX *= PAGE_HEIGHT;
    deltaY *= PAGE_HEIGHT;
  }
  return [deltaX, deltaY];
}
function getEventDetails(event) {
  const payload = {};
  if ("buttons" in event)
    payload.buttons = event.buttons;
  if ("shiftKey" in event) {
    const {
      shiftKey,
      altKey,
      metaKey,
      ctrlKey
    } = event;
    Object.assign(payload, {
      shiftKey,
      altKey,
      metaKey,
      ctrlKey
    });
  }
  return payload;
}
function call(v, ...args) {
  if (typeof v === "function") {
    return v(...args);
  } else {
    return v;
  }
}
function noop() {
}
function chain(...fns) {
  if (fns.length === 0)
    return noop;
  if (fns.length === 1)
    return fns[0];
  return function() {
    let result;
    for (const fn of fns) {
      result = fn.apply(this, arguments) || result;
    }
    return result;
  };
}
function assignDefault(value, fallback) {
  return Object.assign({}, fallback, value || {});
}
var BEFORE_LAST_KINEMATICS_DELAY = 32;
var Engine = class {
  constructor(ctrl, args, key) {
    this.ctrl = ctrl;
    this.args = args;
    this.key = key;
    if (!this.state) {
      this.state = {};
      this.computeValues([0, 0]);
      this.computeInitial();
      if (this.init)
        this.init();
      this.reset();
    }
  }
  get state() {
    return this.ctrl.state[this.key];
  }
  set state(state) {
    this.ctrl.state[this.key] = state;
  }
  get shared() {
    return this.ctrl.state.shared;
  }
  get eventStore() {
    return this.ctrl.gestureEventStores[this.key];
  }
  get timeoutStore() {
    return this.ctrl.gestureTimeoutStores[this.key];
  }
  get config() {
    return this.ctrl.config[this.key];
  }
  get sharedConfig() {
    return this.ctrl.config.shared;
  }
  get handler() {
    return this.ctrl.handlers[this.key];
  }
  reset() {
    const {
      state,
      shared,
      ingKey,
      args
    } = this;
    shared[ingKey] = state._active = state.active = state._blocked = state._force = false;
    state._step = [false, false];
    state.intentional = false;
    state._movement = [0, 0];
    state._distance = [0, 0];
    state._direction = [0, 0];
    state._delta = [0, 0];
    state._bounds = [[-Infinity, Infinity], [-Infinity, Infinity]];
    state.args = args;
    state.axis = void 0;
    state.memo = void 0;
    state.elapsedTime = 0;
    state.direction = [0, 0];
    state.distance = [0, 0];
    state.overflow = [0, 0];
    state._movementBound = [false, false];
    state.velocity = [0, 0];
    state.movement = [0, 0];
    state.delta = [0, 0];
    state.timeStamp = 0;
  }
  start(event) {
    const state = this.state;
    const config2 = this.config;
    if (!state._active) {
      this.reset();
      this.computeInitial();
      state._active = true;
      state.target = event.target;
      state.currentTarget = event.currentTarget;
      state.lastOffset = config2.from ? call(config2.from, state) : state.offset;
      state.offset = state.lastOffset;
    }
    state.startTime = state.timeStamp = event.timeStamp;
  }
  computeValues(values) {
    const state = this.state;
    state._values = values;
    state.values = this.config.transform(values);
  }
  computeInitial() {
    const state = this.state;
    state._initial = state._values;
    state.initial = state.values;
  }
  compute(event) {
    const {
      state,
      config: config2,
      shared
    } = this;
    state.args = this.args;
    let dt = 0;
    if (event) {
      state.event = event;
      if (config2.preventDefault && event.cancelable)
        state.event.preventDefault();
      state.type = event.type;
      shared.touches = this.ctrl.pointerIds.size || this.ctrl.touchIds.size;
      shared.locked = !!document.pointerLockElement;
      Object.assign(shared, getEventDetails(event));
      shared.down = shared.pressed = shared.buttons % 2 === 1 || shared.touches > 0;
      dt = event.timeStamp - state.timeStamp;
      state.timeStamp = event.timeStamp;
      state.elapsedTime = state.timeStamp - state.startTime;
    }
    if (state._active) {
      const _absoluteDelta = state._delta.map(Math.abs);
      V.addTo(state._distance, _absoluteDelta);
    }
    if (this.axisIntent)
      this.axisIntent(event);
    const [_m0, _m1] = state._movement;
    const [t0, t1] = config2.threshold;
    const {
      _step,
      values
    } = state;
    if (config2.hasCustomTransform) {
      if (_step[0] === false)
        _step[0] = Math.abs(_m0) >= t0 && values[0];
      if (_step[1] === false)
        _step[1] = Math.abs(_m1) >= t1 && values[1];
    } else {
      if (_step[0] === false)
        _step[0] = Math.abs(_m0) >= t0 && Math.sign(_m0) * t0;
      if (_step[1] === false)
        _step[1] = Math.abs(_m1) >= t1 && Math.sign(_m1) * t1;
    }
    state.intentional = _step[0] !== false || _step[1] !== false;
    if (!state.intentional)
      return;
    const movement = [0, 0];
    if (config2.hasCustomTransform) {
      const [v0, v1] = values;
      movement[0] = _step[0] !== false ? v0 - _step[0] : 0;
      movement[1] = _step[1] !== false ? v1 - _step[1] : 0;
    } else {
      movement[0] = _step[0] !== false ? _m0 - _step[0] : 0;
      movement[1] = _step[1] !== false ? _m1 - _step[1] : 0;
    }
    if (this.restrictToAxis && !state._blocked)
      this.restrictToAxis(movement);
    const previousOffset = state.offset;
    const gestureIsActive = state._active && !state._blocked || state.active;
    if (gestureIsActive) {
      state.first = state._active && !state.active;
      state.last = !state._active && state.active;
      state.active = shared[this.ingKey] = state._active;
      if (event) {
        if (state.first) {
          if ("bounds" in config2)
            state._bounds = call(config2.bounds, state);
          if (this.setup)
            this.setup();
        }
        state.movement = movement;
        this.computeOffset();
      }
    }
    const [ox, oy] = state.offset;
    const [[x0, x1], [y0, y1]] = state._bounds;
    state.overflow = [ox < x0 ? -1 : ox > x1 ? 1 : 0, oy < y0 ? -1 : oy > y1 ? 1 : 0];
    state._movementBound[0] = state.overflow[0] ? state._movementBound[0] === false ? state._movement[0] : state._movementBound[0] : false;
    state._movementBound[1] = state.overflow[1] ? state._movementBound[1] === false ? state._movement[1] : state._movementBound[1] : false;
    const rubberband3 = state._active ? config2.rubberband || [0, 0] : [0, 0];
    state.offset = computeRubberband(state._bounds, state.offset, rubberband3);
    state.delta = V.sub(state.offset, previousOffset);
    this.computeMovement();
    if (gestureIsActive && (!state.last || dt > BEFORE_LAST_KINEMATICS_DELAY)) {
      state.delta = V.sub(state.offset, previousOffset);
      const absoluteDelta = state.delta.map(Math.abs);
      V.addTo(state.distance, absoluteDelta);
      state.direction = state.delta.map(Math.sign);
      state._direction = state._delta.map(Math.sign);
      if (!state.first && dt > 0) {
        state.velocity = [absoluteDelta[0] / dt, absoluteDelta[1] / dt];
      }
    }
  }
  emit() {
    const state = this.state;
    const shared = this.shared;
    const config2 = this.config;
    if (!state._active)
      this.clean();
    if ((state._blocked || !state.intentional) && !state._force && !config2.triggerAllEvents)
      return;
    const memo16 = this.handler(_objectSpread2(_objectSpread2(_objectSpread2({}, shared), state), {}, {
      [this.aliasKey]: state.values
    }));
    if (memo16 !== void 0)
      state.memo = memo16;
  }
  clean() {
    this.eventStore.clean();
    this.timeoutStore.clean();
  }
};
function selectAxis([dx, dy], threshold) {
  const absDx = Math.abs(dx);
  const absDy = Math.abs(dy);
  if (absDx > absDy && absDx > threshold) {
    return "x";
  }
  if (absDy > absDx && absDy > threshold) {
    return "y";
  }
  return void 0;
}
var CoordinatesEngine = class extends Engine {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "aliasKey", "xy");
  }
  reset() {
    super.reset();
    this.state.axis = void 0;
  }
  init() {
    this.state.offset = [0, 0];
    this.state.lastOffset = [0, 0];
  }
  computeOffset() {
    this.state.offset = V.add(this.state.lastOffset, this.state.movement);
  }
  computeMovement() {
    this.state.movement = V.sub(this.state.offset, this.state.lastOffset);
  }
  axisIntent(event) {
    const state = this.state;
    const config2 = this.config;
    if (!state.axis && event) {
      const threshold = typeof config2.axisThreshold === "object" ? config2.axisThreshold[getPointerType(event)] : config2.axisThreshold;
      state.axis = selectAxis(state._movement, threshold);
    }
    state._blocked = (config2.lockDirection || !!config2.axis) && !state.axis || !!config2.axis && config2.axis !== state.axis;
  }
  restrictToAxis(v) {
    if (this.config.axis || this.config.lockDirection) {
      switch (this.state.axis) {
        case "x":
          v[1] = 0;
          break;
        case "y":
          v[0] = 0;
          break;
      }
    }
  }
};
var identity = (v) => v;
var DEFAULT_RUBBERBAND = 0.15;
var commonConfigResolver = {
  enabled(value = true) {
    return value;
  },
  eventOptions(value, _k, config2) {
    return _objectSpread2(_objectSpread2({}, config2.shared.eventOptions), value);
  },
  preventDefault(value = false) {
    return value;
  },
  triggerAllEvents(value = false) {
    return value;
  },
  rubberband(value = 0) {
    switch (value) {
      case true:
        return [DEFAULT_RUBBERBAND, DEFAULT_RUBBERBAND];
      case false:
        return [0, 0];
      default:
        return V.toVector(value);
    }
  },
  from(value) {
    if (typeof value === "function")
      return value;
    if (value != null)
      return V.toVector(value);
  },
  transform(value, _k, config2) {
    const transform = value || config2.shared.transform;
    this.hasCustomTransform = !!transform;
    if (true) {
      const originalTransform = transform || identity;
      return (v) => {
        const r = originalTransform(v);
        if (!isFinite(r[0]) || !isFinite(r[1])) {
          console.warn(`[@use-gesture]: config.transform() must produce a valid result, but it was: [${r[0]},${[1]}]`);
        }
        return r;
      };
    }
    return transform || identity;
  },
  threshold(value) {
    return V.toVector(value, 0);
  }
};
if (true) {
  Object.assign(commonConfigResolver, {
    domTarget(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`domTarget\` option has been renamed to \`target\`.`);
      }
      return NaN;
    },
    lockDirection(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`lockDirection\` option has been merged with \`axis\`. Use it as in \`{ axis: 'lock' }\``);
      }
      return NaN;
    },
    initial(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`initial\` option has been renamed to \`from\`.`);
      }
      return NaN;
    }
  });
}
var DEFAULT_AXIS_THRESHOLD = 0;
var coordinatesConfigResolver = _objectSpread2(_objectSpread2({}, commonConfigResolver), {}, {
  axis(_v, _k, {
    axis
  }) {
    this.lockDirection = axis === "lock";
    if (!this.lockDirection)
      return axis;
  },
  axisThreshold(value = DEFAULT_AXIS_THRESHOLD) {
    return value;
  },
  bounds(value = {}) {
    if (typeof value === "function") {
      return (state) => coordinatesConfigResolver.bounds(value(state));
    }
    if ("current" in value) {
      return () => value.current;
    }
    if (typeof HTMLElement === "function" && value instanceof HTMLElement) {
      return value;
    }
    const {
      left = -Infinity,
      right = Infinity,
      top = -Infinity,
      bottom = Infinity
    } = value;
    return [[left, right], [top, bottom]];
  }
});
var DISPLACEMENT = 10;
var KEYS_DELTA_MAP = {
  ArrowRight: (factor = 1) => [DISPLACEMENT * factor, 0],
  ArrowLeft: (factor = 1) => [-DISPLACEMENT * factor, 0],
  ArrowUp: (factor = 1) => [0, -DISPLACEMENT * factor],
  ArrowDown: (factor = 1) => [0, DISPLACEMENT * factor]
};
var DragEngine = class extends CoordinatesEngine {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "ingKey", "dragging");
  }
  reset() {
    super.reset();
    const state = this.state;
    state._pointerId = void 0;
    state._pointerActive = false;
    state._keyboardActive = false;
    state._preventScroll = false;
    state._delayed = false;
    state.swipe = [0, 0];
    state.tap = false;
    state.canceled = false;
    state.cancel = this.cancel.bind(this);
  }
  setup() {
    const state = this.state;
    if (state._bounds instanceof HTMLElement) {
      const boundRect = state._bounds.getBoundingClientRect();
      const targetRect = state.currentTarget.getBoundingClientRect();
      const _bounds = {
        left: boundRect.left - targetRect.left + state.offset[0],
        right: boundRect.right - targetRect.right + state.offset[0],
        top: boundRect.top - targetRect.top + state.offset[1],
        bottom: boundRect.bottom - targetRect.bottom + state.offset[1]
      };
      state._bounds = coordinatesConfigResolver.bounds(_bounds);
    }
  }
  cancel() {
    const state = this.state;
    if (state.canceled)
      return;
    state.canceled = true;
    state._active = false;
    setTimeout(() => {
      this.compute();
      this.emit();
    }, 0);
  }
  setActive() {
    this.state._active = this.state._pointerActive || this.state._keyboardActive;
  }
  clean() {
    this.pointerClean();
    this.state._pointerActive = false;
    this.state._keyboardActive = false;
    super.clean();
  }
  pointerDown(event) {
    const config2 = this.config;
    const state = this.state;
    if (event.buttons != null && (Array.isArray(config2.pointerButtons) ? !config2.pointerButtons.includes(event.buttons) : config2.pointerButtons !== -1 && config2.pointerButtons !== event.buttons))
      return;
    const ctrlIds = this.ctrl.setEventIds(event);
    if (config2.pointerCapture) {
      event.target.setPointerCapture(event.pointerId);
    }
    if (ctrlIds && ctrlIds.size > 1 && state._pointerActive)
      return;
    this.start(event);
    this.setupPointer(event);
    state._pointerId = pointerId(event);
    state._pointerActive = true;
    this.computeValues(pointerValues(event));
    this.computeInitial();
    if (config2.preventScrollAxis && getPointerType(event) !== "mouse") {
      state._active = false;
      this.setupScrollPrevention(event);
    } else if (config2.delay > 0) {
      this.setupDelayTrigger(event);
      if (config2.triggerAllEvents) {
        this.compute(event);
        this.emit();
      }
    } else {
      this.startPointerDrag(event);
    }
  }
  startPointerDrag(event) {
    const state = this.state;
    state._active = true;
    state._preventScroll = true;
    state._delayed = false;
    this.compute(event);
    this.emit();
  }
  pointerMove(event) {
    const state = this.state;
    const config2 = this.config;
    if (!state._pointerActive)
      return;
    if (state.type === event.type && event.timeStamp === state.timeStamp)
      return;
    const id = pointerId(event);
    if (state._pointerId !== void 0 && id !== state._pointerId)
      return;
    const _values = pointerValues(event);
    if (document.pointerLockElement === event.target) {
      state._delta = [event.movementX, event.movementY];
    } else {
      state._delta = V.sub(_values, state._values);
      this.computeValues(_values);
    }
    V.addTo(state._movement, state._delta);
    this.compute(event);
    if (state._delayed && state.intentional) {
      this.timeoutStore.remove("dragDelay");
      state.active = false;
      this.startPointerDrag(event);
      return;
    }
    if (config2.preventScrollAxis && !state._preventScroll) {
      if (state.axis) {
        if (state.axis === config2.preventScrollAxis || config2.preventScrollAxis === "xy") {
          state._active = false;
          this.clean();
          return;
        } else {
          this.timeoutStore.remove("startPointerDrag");
          this.startPointerDrag(event);
          return;
        }
      } else {
        return;
      }
    }
    this.emit();
  }
  pointerUp(event) {
    this.ctrl.setEventIds(event);
    try {
      if (this.config.pointerCapture && event.target.hasPointerCapture(event.pointerId)) {
        ;
        event.target.releasePointerCapture(event.pointerId);
      }
    } catch (_unused) {
      if (true) {
        console.warn(`[@use-gesture]: If you see this message, it's likely that you're using an outdated version of \`@react-three/fiber\`. 

Please upgrade to the latest version.`);
      }
    }
    const state = this.state;
    const config2 = this.config;
    if (!state._active || !state._pointerActive)
      return;
    const id = pointerId(event);
    if (state._pointerId !== void 0 && id !== state._pointerId)
      return;
    this.state._pointerActive = false;
    this.setActive();
    this.compute(event);
    const [dx, dy] = state._distance;
    state.tap = dx <= config2.tapsThreshold && dy <= config2.tapsThreshold;
    if (state.tap && config2.filterTaps) {
      state._force = true;
    } else {
      const [dirx, diry] = state.direction;
      const [vx, vy] = state.velocity;
      const [mx, my] = state.movement;
      const [svx, svy] = config2.swipe.velocity;
      const [sx, sy] = config2.swipe.distance;
      const sdt = config2.swipe.duration;
      if (state.elapsedTime < sdt) {
        if (Math.abs(vx) > svx && Math.abs(mx) > sx)
          state.swipe[0] = dirx;
        if (Math.abs(vy) > svy && Math.abs(my) > sy)
          state.swipe[1] = diry;
      }
    }
    this.emit();
  }
  pointerClick(event) {
    if (!this.state.tap) {
      event.preventDefault();
      event.stopPropagation();
    }
  }
  setupPointer(event) {
    const config2 = this.config;
    const device = config2.device;
    if (true) {
      try {
        if (device === "pointer" && config2.preventScrollDelay === void 0) {
          const currentTarget = "uv" in event ? event.sourceEvent.currentTarget : event.currentTarget;
          const style = window.getComputedStyle(currentTarget);
          if (style.touchAction === "auto") {
            console.warn(`[@use-gesture]: The drag target has its \`touch-action\` style property set to \`auto\`. It is recommended to add \`touch-action: 'none'\` so that the drag gesture behaves correctly on touch-enabled devices. For more information read this: https://use-gesture.netlify.app/docs/extras/#touch-action.

This message will only show in development mode. It won't appear in production. If this is intended, you can ignore it.`, currentTarget);
          }
        }
      } catch (_unused2) {
      }
    }
    if (config2.pointerLock) {
      event.currentTarget.requestPointerLock();
    }
    if (!config2.pointerCapture) {
      this.eventStore.add(this.sharedConfig.window, device, "change", this.pointerMove.bind(this));
      this.eventStore.add(this.sharedConfig.window, device, "end", this.pointerUp.bind(this));
      this.eventStore.add(this.sharedConfig.window, device, "cancel", this.pointerUp.bind(this));
    }
  }
  pointerClean() {
    if (this.config.pointerLock && document.pointerLockElement === this.state.currentTarget) {
      document.exitPointerLock();
    }
  }
  preventScroll(event) {
    if (this.state._preventScroll && event.cancelable) {
      event.preventDefault();
    }
  }
  setupScrollPrevention(event) {
    this.state._preventScroll = false;
    persistEvent(event);
    const remove = this.eventStore.add(this.sharedConfig.window, "touch", "change", this.preventScroll.bind(this), {
      passive: false
    });
    this.eventStore.add(this.sharedConfig.window, "touch", "end", remove);
    this.eventStore.add(this.sharedConfig.window, "touch", "cancel", remove);
    this.timeoutStore.add("startPointerDrag", this.startPointerDrag.bind(this), this.config.preventScrollDelay, event);
  }
  setupDelayTrigger(event) {
    this.state._delayed = true;
    this.timeoutStore.add("dragDelay", () => {
      this.state._step = [0, 0];
      this.startPointerDrag(event);
    }, this.config.delay);
  }
  keyDown(event) {
    const deltaFn = KEYS_DELTA_MAP[event.key];
    if (deltaFn) {
      const state = this.state;
      const factor = event.shiftKey ? 10 : event.altKey ? 0.1 : 1;
      this.start(event);
      state._delta = deltaFn(factor);
      state._keyboardActive = true;
      V.addTo(state._movement, state._delta);
      this.compute(event);
      this.emit();
    }
  }
  keyUp(event) {
    if (!(event.key in KEYS_DELTA_MAP))
      return;
    this.state._keyboardActive = false;
    this.setActive();
    this.compute(event);
    this.emit();
  }
  bind(bindFunction) {
    const device = this.config.device;
    bindFunction(device, "start", this.pointerDown.bind(this));
    if (this.config.pointerCapture) {
      bindFunction(device, "change", this.pointerMove.bind(this));
      bindFunction(device, "end", this.pointerUp.bind(this));
      bindFunction(device, "cancel", this.pointerUp.bind(this));
      bindFunction("lostPointerCapture", "", this.pointerUp.bind(this));
    }
    bindFunction("key", "down", this.keyDown.bind(this));
    bindFunction("key", "up", this.keyUp.bind(this));
    if (this.config.filterTaps) {
      bindFunction("click", "", this.pointerClick.bind(this), {
        capture: true,
        passive: false
      });
    }
  }
};
function persistEvent(event) {
  "persist" in event && typeof event.persist === "function" && event.persist();
}
var isBrowser = typeof window !== "undefined" && window.document && window.document.createElement;
function supportsTouchEvents() {
  return isBrowser && "ontouchstart" in window;
}
function isTouchScreen() {
  return supportsTouchEvents() || isBrowser && window.navigator.maxTouchPoints > 1;
}
function supportsPointerEvents() {
  return isBrowser && "onpointerdown" in window;
}
function supportsPointerLock() {
  return isBrowser && "exitPointerLock" in window.document;
}
function supportsGestureEvents() {
  try {
    return "constructor" in GestureEvent;
  } catch (e) {
    return false;
  }
}
var SUPPORT = {
  isBrowser,
  gesture: supportsGestureEvents(),
  touch: isTouchScreen(),
  touchscreen: isTouchScreen(),
  pointer: supportsPointerEvents(),
  pointerLock: supportsPointerLock()
};
var DEFAULT_PREVENT_SCROLL_DELAY = 250;
var DEFAULT_DRAG_DELAY = 180;
var DEFAULT_SWIPE_VELOCITY = 0.5;
var DEFAULT_SWIPE_DISTANCE = 50;
var DEFAULT_SWIPE_DURATION = 250;
var DEFAULT_DRAG_AXIS_THRESHOLD = {
  mouse: 0,
  touch: 0,
  pen: 8
};
var dragConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {
  device(_v, _k, {
    pointer: {
      touch = false,
      lock = false,
      mouse = false
    } = {}
  }) {
    this.pointerLock = lock && SUPPORT.pointerLock;
    if (SUPPORT.touch && touch)
      return "touch";
    if (this.pointerLock)
      return "mouse";
    if (SUPPORT.pointer && !mouse)
      return "pointer";
    if (SUPPORT.touch)
      return "touch";
    return "mouse";
  },
  preventScrollAxis(value, _k, {
    preventScroll
  }) {
    this.preventScrollDelay = typeof preventScroll === "number" ? preventScroll : preventScroll || preventScroll === void 0 && value ? DEFAULT_PREVENT_SCROLL_DELAY : void 0;
    if (!SUPPORT.touchscreen || preventScroll === false)
      return void 0;
    return value ? value : preventScroll !== void 0 ? "y" : void 0;
  },
  pointerCapture(_v, _k, {
    pointer: {
      capture = true,
      buttons = 1
    } = {}
  }) {
    this.pointerButtons = buttons;
    return !this.pointerLock && this.device === "pointer" && capture;
  },
  threshold(value, _k, {
    filterTaps = false,
    tapsThreshold = 3,
    axis = void 0
  }) {
    const threshold = V.toVector(value, filterTaps ? tapsThreshold : axis ? 1 : 0);
    this.filterTaps = filterTaps;
    this.tapsThreshold = tapsThreshold;
    return threshold;
  },
  swipe({
    velocity = DEFAULT_SWIPE_VELOCITY,
    distance = DEFAULT_SWIPE_DISTANCE,
    duration = DEFAULT_SWIPE_DURATION
  } = {}) {
    return {
      velocity: this.transform(V.toVector(velocity)),
      distance: this.transform(V.toVector(distance)),
      duration
    };
  },
  delay(value = 0) {
    switch (value) {
      case true:
        return DEFAULT_DRAG_DELAY;
      case false:
        return 0;
      default:
        return value;
    }
  },
  axisThreshold(value) {
    if (!value)
      return DEFAULT_DRAG_AXIS_THRESHOLD;
    return _objectSpread2(_objectSpread2({}, DEFAULT_DRAG_AXIS_THRESHOLD), value);
  }
});
if (true) {
  Object.assign(dragConfigResolver, {
    useTouch(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`useTouch\` option has been renamed to \`pointer.touch\`. Use it as in \`{ pointer: { touch: true } }\`.`);
      }
      return NaN;
    },
    experimental_preventWindowScrollY(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`experimental_preventWindowScrollY\` option has been renamed to \`preventScroll\`.`);
      }
      return NaN;
    },
    swipeVelocity(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`swipeVelocity\` option has been renamed to \`swipe.velocity\`. Use it as in \`{ swipe: { velocity: 0.5 } }\`.`);
      }
      return NaN;
    },
    swipeDistance(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`swipeDistance\` option has been renamed to \`swipe.distance\`. Use it as in \`{ swipe: { distance: 50 } }\`.`);
      }
      return NaN;
    },
    swipeDuration(value) {
      if (value !== void 0) {
        throw Error(`[@use-gesture]: \`swipeDuration\` option has been renamed to \`swipe.duration\`. Use it as in \`{ swipe: { duration: 250 } }\`.`);
      }
      return NaN;
    }
  });
}
var SCALE_ANGLE_RATIO_INTENT_DEG = 30;
var PINCH_WHEEL_RATIO = 100;
var PinchEngine = class extends Engine {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "ingKey", "pinching");
    _defineProperty(this, "aliasKey", "da");
  }
  init() {
    this.state.offset = [1, 0];
    this.state.lastOffset = [1, 0];
    this.state._pointerEvents = /* @__PURE__ */ new Map();
  }
  reset() {
    super.reset();
    const state = this.state;
    state._touchIds = [];
    state.canceled = false;
    state.cancel = this.cancel.bind(this);
    state.turns = 0;
  }
  computeOffset() {
    const {
      type: type4,
      movement,
      lastOffset
    } = this.state;
    if (type4 === "wheel") {
      this.state.offset = V.add(movement, lastOffset);
    } else {
      this.state.offset = [(1 + movement[0]) * lastOffset[0], movement[1] + lastOffset[1]];
    }
  }
  computeMovement() {
    const {
      offset: offset2,
      lastOffset
    } = this.state;
    this.state.movement = [offset2[0] / lastOffset[0], offset2[1] - lastOffset[1]];
  }
  axisIntent() {
    const state = this.state;
    const [_m0, _m1] = state._movement;
    if (!state.axis) {
      const axisMovementDifference = Math.abs(_m0) * SCALE_ANGLE_RATIO_INTENT_DEG - Math.abs(_m1);
      if (axisMovementDifference < 0)
        state.axis = "angle";
      else if (axisMovementDifference > 0)
        state.axis = "scale";
    }
  }
  restrictToAxis(v) {
    if (this.config.lockDirection) {
      if (this.state.axis === "scale")
        v[1] = 0;
      else if (this.state.axis === "angle")
        v[0] = 0;
    }
  }
  cancel() {
    const state = this.state;
    if (state.canceled)
      return;
    setTimeout(() => {
      state.canceled = true;
      state._active = false;
      this.compute();
      this.emit();
    }, 0);
  }
  touchStart(event) {
    this.ctrl.setEventIds(event);
    const state = this.state;
    const ctrlTouchIds = this.ctrl.touchIds;
    if (state._active) {
      if (state._touchIds.every((id) => ctrlTouchIds.has(id)))
        return;
    }
    if (ctrlTouchIds.size < 2)
      return;
    this.start(event);
    state._touchIds = Array.from(ctrlTouchIds).slice(0, 2);
    const payload = touchDistanceAngle(event, state._touchIds);
    this.pinchStart(event, payload);
  }
  pointerStart(event) {
    if (event.buttons != null && event.buttons % 2 !== 1)
      return;
    this.ctrl.setEventIds(event);
    event.target.setPointerCapture(event.pointerId);
    const state = this.state;
    const _pointerEvents = state._pointerEvents;
    const ctrlPointerIds = this.ctrl.pointerIds;
    if (state._active) {
      if (Array.from(_pointerEvents.keys()).every((id) => ctrlPointerIds.has(id)))
        return;
    }
    if (_pointerEvents.size < 2) {
      _pointerEvents.set(event.pointerId, event);
    }
    if (state._pointerEvents.size < 2)
      return;
    this.start(event);
    const payload = distanceAngle(...Array.from(_pointerEvents.values()));
    this.pinchStart(event, payload);
  }
  pinchStart(event, payload) {
    const state = this.state;
    state.origin = payload.origin;
    this.computeValues([payload.distance, payload.angle]);
    this.computeInitial();
    this.compute(event);
    this.emit();
  }
  touchMove(event) {
    if (!this.state._active)
      return;
    const payload = touchDistanceAngle(event, this.state._touchIds);
    this.pinchMove(event, payload);
  }
  pointerMove(event) {
    const _pointerEvents = this.state._pointerEvents;
    if (_pointerEvents.has(event.pointerId)) {
      _pointerEvents.set(event.pointerId, event);
    }
    if (!this.state._active)
      return;
    const payload = distanceAngle(...Array.from(_pointerEvents.values()));
    this.pinchMove(event, payload);
  }
  pinchMove(event, payload) {
    const state = this.state;
    const prev_a = state._values[1];
    const delta_a = payload.angle - prev_a;
    let delta_turns = 0;
    if (Math.abs(delta_a) > 270)
      delta_turns += Math.sign(delta_a);
    this.computeValues([payload.distance, payload.angle - 360 * delta_turns]);
    state.origin = payload.origin;
    state.turns = delta_turns;
    state._movement = [state._values[0] / state._initial[0] - 1, state._values[1] - state._initial[1]];
    this.compute(event);
    this.emit();
  }
  touchEnd(event) {
    this.ctrl.setEventIds(event);
    if (!this.state._active)
      return;
    if (this.state._touchIds.some((id) => !this.ctrl.touchIds.has(id))) {
      this.state._active = false;
      this.compute(event);
      this.emit();
    }
  }
  pointerEnd(event) {
    const state = this.state;
    this.ctrl.setEventIds(event);
    try {
      event.target.releasePointerCapture(event.pointerId);
    } catch (_unused) {
    }
    if (state._pointerEvents.has(event.pointerId)) {
      state._pointerEvents.delete(event.pointerId);
    }
    if (!state._active)
      return;
    if (state._pointerEvents.size < 2) {
      state._active = false;
      this.compute(event);
      this.emit();
    }
  }
  gestureStart(event) {
    if (event.cancelable)
      event.preventDefault();
    const state = this.state;
    if (state._active)
      return;
    this.start(event);
    this.computeValues([event.scale, event.rotation]);
    state.origin = [event.clientX, event.clientY];
    this.compute(event);
    this.emit();
  }
  gestureMove(event) {
    if (event.cancelable)
      event.preventDefault();
    if (!this.state._active)
      return;
    const state = this.state;
    this.computeValues([event.scale, event.rotation]);
    state.origin = [event.clientX, event.clientY];
    const _previousMovement = state._movement;
    state._movement = [event.scale - 1, event.rotation];
    state._delta = V.sub(state._movement, _previousMovement);
    this.compute(event);
    this.emit();
  }
  gestureEnd(event) {
    if (!this.state._active)
      return;
    this.state._active = false;
    this.compute(event);
    this.emit();
  }
  wheel(event) {
    const modifierKey = this.config.modifierKey;
    if (modifierKey && !event[modifierKey])
      return;
    if (!this.state._active)
      this.wheelStart(event);
    else
      this.wheelChange(event);
    this.timeoutStore.add("wheelEnd", this.wheelEnd.bind(this));
  }
  wheelStart(event) {
    this.start(event);
    this.wheelChange(event);
  }
  wheelChange(event) {
    const isR3f = "uv" in event;
    if (!isR3f) {
      if (event.cancelable) {
        event.preventDefault();
      }
      if (!event.defaultPrevented) {
        console.warn(`[@use-gesture]: To properly support zoom on trackpads, try using the \`target\` option.

This message will only appear in development mode.`);
      }
    }
    const state = this.state;
    state._delta = [-wheelValues(event)[1] / PINCH_WHEEL_RATIO * state.offset[0], 0];
    V.addTo(state._movement, state._delta);
    this.state.origin = [event.clientX, event.clientY];
    this.compute(event);
    this.emit();
  }
  wheelEnd() {
    if (!this.state._active)
      return;
    this.state._active = false;
    this.compute();
    this.emit();
  }
  bind(bindFunction) {
    const device = this.config.device;
    if (!!device) {
      bindFunction(device, "start", this[device + "Start"].bind(this));
      bindFunction(device, "change", this[device + "Move"].bind(this));
      bindFunction(device, "end", this[device + "End"].bind(this));
      bindFunction(device, "cancel", this[device + "End"].bind(this));
    } else {
      bindFunction("wheel", "", this.wheel.bind(this), {
        passive: false
      });
    }
  }
};
var pinchConfigResolver = _objectSpread2(_objectSpread2({}, commonConfigResolver), {}, {
  device(_v, _k, {
    shared,
    pointer: {
      touch = false
    } = {}
  }) {
    const sharedConfig = shared;
    if (sharedConfig.target && !SUPPORT.touch && SUPPORT.gesture)
      return "gesture";
    if (SUPPORT.touch && touch)
      return "touch";
    if (SUPPORT.touchscreen) {
      if (SUPPORT.pointer)
        return "pointer";
      if (SUPPORT.touch)
        return "touch";
    }
  },
  bounds(_v, _k, {
    scaleBounds = {},
    angleBounds = {}
  }) {
    const _scaleBounds = (state) => {
      const D = assignDefault(call(scaleBounds, state), {
        min: -Infinity,
        max: Infinity
      });
      return [D.min, D.max];
    };
    const _angleBounds = (state) => {
      const A = assignDefault(call(angleBounds, state), {
        min: -Infinity,
        max: Infinity
      });
      return [A.min, A.max];
    };
    if (typeof scaleBounds !== "function" && typeof angleBounds !== "function")
      return [_scaleBounds(), _angleBounds()];
    return (state) => [_scaleBounds(state), _angleBounds(state)];
  },
  threshold(value, _k, config2) {
    this.lockDirection = config2.axis === "lock";
    const threshold = V.toVector(value, this.lockDirection ? [0.1, 3] : 0);
    return threshold;
  },
  modifierKey(value) {
    if (value === void 0)
      return "ctrlKey";
    return value;
  }
});
var moveConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {
  mouseOnly: (value = true) => value
});
var WheelEngine = class extends CoordinatesEngine {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "ingKey", "wheeling");
  }
  wheel(event) {
    if (!this.state._active)
      this.start(event);
    this.wheelChange(event);
    this.timeoutStore.add("wheelEnd", this.wheelEnd.bind(this));
  }
  wheelChange(event) {
    const state = this.state;
    state._delta = wheelValues(event);
    V.addTo(state._movement, state._delta);
    const [ox, oy] = state.overflow;
    const [dx, dy] = state._delta;
    const [dirx, diry] = state._direction;
    if (ox < 0 && dx > 0 && dirx < 0 || ox > 0 && dx < 0 && dirx > 0) {
      state._movement[0] = state._movementBound[0];
    }
    if (oy < 0 && dy > 0 && diry < 0 || oy > 0 && dy < 0 && diry > 0) {
      state._movement[1] = state._movementBound[1];
    }
    this.compute(event);
    this.emit();
  }
  wheelEnd() {
    if (!this.state._active)
      return;
    this.state._active = false;
    this.compute();
    this.emit();
  }
  bind(bindFunction) {
    bindFunction("wheel", "", this.wheel.bind(this));
  }
};
var wheelConfigResolver = coordinatesConfigResolver;
var hoverConfigResolver = _objectSpread2(_objectSpread2({}, coordinatesConfigResolver), {}, {
  mouseOnly: (value = true) => value
});
var EngineMap = /* @__PURE__ */ new Map();
var ConfigResolverMap = /* @__PURE__ */ new Map();
function registerAction(action) {
  EngineMap.set(action.key, action.engine);
  ConfigResolverMap.set(action.key, action.resolver);
}
var dragAction = {
  key: "drag",
  engine: DragEngine,
  resolver: dragConfigResolver
};
var pinchAction = {
  key: "pinch",
  engine: PinchEngine,
  resolver: pinchConfigResolver
};
var wheelAction = {
  key: "wheel",
  engine: WheelEngine,
  resolver: wheelConfigResolver
};

// node_modules/@use-gesture/react/dist/use-gesture-react.esm.js
var import_react18 = __toESM(require_react());

// node_modules/@use-gesture/core/dist/use-gesture-core.esm.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var sharedConfigResolver = {
  target(value) {
    if (value) {
      return () => "current" in value ? value.current : value;
    }
    return void 0;
  },
  enabled(value = true) {
    return value;
  },
  window(value = SUPPORT.isBrowser ? window : void 0) {
    return value;
  },
  eventOptions({
    passive = true,
    capture = false
  } = {}) {
    return {
      passive,
      capture
    };
  },
  transform(value) {
    return value;
  }
};
var _excluded = ["target", "eventOptions", "window", "enabled", "transform"];
function resolveWith(config2 = {}, resolvers) {
  const result = {};
  for (const [key, resolver] of Object.entries(resolvers)) {
    switch (typeof resolver) {
      case "function":
        if (true) {
          const r = resolver.call(result, config2[key], key, config2);
          if (!Number.isNaN(r))
            result[key] = r;
        } else {
          result[key] = resolver.call(result, config2[key], key, config2);
        }
        break;
      case "object":
        result[key] = resolveWith(config2[key], resolver);
        break;
      case "boolean":
        if (resolver)
          result[key] = config2[key];
        break;
    }
  }
  return result;
}
function parse(config2, gestureKey) {
  const _ref = config2, {
    target,
    eventOptions,
    window: window2,
    enabled,
    transform
  } = _ref, rest = _objectWithoutProperties(_ref, _excluded);
  const _config = {
    shared: resolveWith({
      target,
      eventOptions,
      window: window2,
      enabled,
      transform
    }, sharedConfigResolver)
  };
  if (gestureKey) {
    const resolver = ConfigResolverMap.get(gestureKey);
    _config[gestureKey] = resolveWith(_objectSpread2({
      shared: _config.shared
    }, rest), resolver);
  } else {
    for (const key in rest) {
      const resolver = ConfigResolverMap.get(key);
      if (resolver) {
        _config[key] = resolveWith(_objectSpread2({
          shared: _config.shared
        }, rest[key]), resolver);
      } else if (true) {
        if (!["drag", "pinch", "scroll", "wheel", "move", "hover"].includes(key)) {
          if (key === "domTarget") {
            throw Error(`[@use-gesture]: \`domTarget\` option has been renamed to \`target\`.`);
          }
          console.warn(`[@use-gesture]: Unknown config key \`${key}\` was used. Please read the documentation for further information.`);
        }
      }
    }
  }
  return _config;
}
var EventStore = class {
  constructor(ctrl, gestureKey) {
    _defineProperty(this, "_listeners", /* @__PURE__ */ new Set());
    this._ctrl = ctrl;
    this._gestureKey = gestureKey;
  }
  add(element, device, action, handler, options) {
    const listeners = this._listeners;
    const type4 = toDomEventType(device, action);
    const _options = this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {};
    const eventOptions = _objectSpread2(_objectSpread2({}, _options), options);
    element.addEventListener(type4, handler, eventOptions);
    const remove = () => {
      element.removeEventListener(type4, handler, eventOptions);
      listeners.delete(remove);
    };
    listeners.add(remove);
    return remove;
  }
  clean() {
    this._listeners.forEach((remove) => remove());
    this._listeners.clear();
  }
};
var TimeoutStore = class {
  constructor() {
    _defineProperty(this, "_timeouts", /* @__PURE__ */ new Map());
  }
  add(key, callback, ms = 140, ...args) {
    this.remove(key);
    this._timeouts.set(key, window.setTimeout(callback, ms, ...args));
  }
  remove(key) {
    const timeout = this._timeouts.get(key);
    if (timeout)
      window.clearTimeout(timeout);
  }
  clean() {
    this._timeouts.forEach((timeout) => void window.clearTimeout(timeout));
    this._timeouts.clear();
  }
};
var Controller = class {
  constructor(handlers) {
    _defineProperty(this, "gestures", /* @__PURE__ */ new Set());
    _defineProperty(this, "_targetEventStore", new EventStore(this));
    _defineProperty(this, "gestureEventStores", {});
    _defineProperty(this, "gestureTimeoutStores", {});
    _defineProperty(this, "handlers", {});
    _defineProperty(this, "config", {});
    _defineProperty(this, "pointerIds", /* @__PURE__ */ new Set());
    _defineProperty(this, "touchIds", /* @__PURE__ */ new Set());
    _defineProperty(this, "state", {
      shared: {
        shiftKey: false,
        metaKey: false,
        ctrlKey: false,
        altKey: false
      }
    });
    resolveGestures(this, handlers);
  }
  setEventIds(event) {
    if (isTouch(event)) {
      this.touchIds = new Set(touchIds(event));
      return this.touchIds;
    } else if ("pointerId" in event) {
      if (event.type === "pointerup" || event.type === "pointercancel")
        this.pointerIds.delete(event.pointerId);
      else if (event.type === "pointerdown")
        this.pointerIds.add(event.pointerId);
      return this.pointerIds;
    }
  }
  applyHandlers(handlers, nativeHandlers) {
    this.handlers = handlers;
    this.nativeHandlers = nativeHandlers;
  }
  applyConfig(config2, gestureKey) {
    this.config = parse(config2, gestureKey);
  }
  clean() {
    this._targetEventStore.clean();
    for (const key of this.gestures) {
      this.gestureEventStores[key].clean();
      this.gestureTimeoutStores[key].clean();
    }
  }
  effect() {
    if (this.config.shared.target)
      this.bind();
    return () => this._targetEventStore.clean();
  }
  bind(...args) {
    const sharedConfig = this.config.shared;
    const props = {};
    let target;
    if (sharedConfig.target) {
      target = sharedConfig.target();
      if (!target)
        return;
    }
    if (sharedConfig.enabled) {
      for (const gestureKey of this.gestures) {
        const gestureConfig = this.config[gestureKey];
        const bindFunction = bindToProps(props, gestureConfig.eventOptions, !!target);
        if (gestureConfig.enabled) {
          const Engine2 = EngineMap.get(gestureKey);
          new Engine2(this, args, gestureKey).bind(bindFunction);
        }
      }
      const nativeBindFunction = bindToProps(props, sharedConfig.eventOptions, !!target);
      for (const eventKey in this.nativeHandlers) {
        nativeBindFunction(eventKey, "", (event) => this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({}, this.state.shared), {}, {
          event,
          args
        })), void 0, true);
      }
    }
    for (const handlerProp in props) {
      props[handlerProp] = chain(...props[handlerProp]);
    }
    if (!target)
      return props;
    for (const handlerProp in props) {
      const {
        device,
        capture,
        passive
      } = parseProp(handlerProp);
      this._targetEventStore.add(target, device, "", props[handlerProp], {
        capture,
        passive
      });
    }
  }
};
function setupGesture(ctrl, gestureKey) {
  ctrl.gestures.add(gestureKey);
  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl, gestureKey);
  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();
}
function resolveGestures(ctrl, internalHandlers) {
  if (internalHandlers.drag)
    setupGesture(ctrl, "drag");
  if (internalHandlers.wheel)
    setupGesture(ctrl, "wheel");
  if (internalHandlers.scroll)
    setupGesture(ctrl, "scroll");
  if (internalHandlers.move)
    setupGesture(ctrl, "move");
  if (internalHandlers.pinch)
    setupGesture(ctrl, "pinch");
  if (internalHandlers.hover)
    setupGesture(ctrl, "hover");
}
var bindToProps = (props, eventOptions, withPassiveOption) => (device, action, handler, options = {}, isNative = false) => {
  var _options$capture, _options$passive;
  const capture = (_options$capture = options.capture) !== null && _options$capture !== void 0 ? _options$capture : eventOptions.capture;
  const passive = (_options$passive = options.passive) !== null && _options$passive !== void 0 ? _options$passive : eventOptions.passive;
  let handlerProp = isNative ? device : toHandlerProp(device, action, capture);
  if (withPassiveOption && passive)
    handlerProp += "Passive";
  props[handlerProp] = props[handlerProp] || [];
  props[handlerProp].push(handler);
};
var RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;
function sortHandlers(_handlers) {
  const native = {};
  const handlers = {};
  const actions = /* @__PURE__ */ new Set();
  for (let key in _handlers) {
    if (RE_NOT_NATIVE.test(key)) {
      actions.add(RegExp.lastMatch);
      handlers[key] = _handlers[key];
    } else {
      native[key] = _handlers[key];
    }
  }
  return [handlers, native, actions];
}
function registerGesture(actions, handlers, handlerKey, key, internalHandlers, config2) {
  if (!actions.has(handlerKey))
    return;
  if (!EngineMap.has(key)) {
    if (true) {
      console.warn(`[@use-gesture]: You've created a custom handler that that uses the \`${key}\` gesture but isn't properly configured.

Please add \`${key}Action\` when creating your handler.`);
    }
    return;
  }
  const startKey = handlerKey + "Start";
  const endKey = handlerKey + "End";
  const fn = (state) => {
    let memo16 = void 0;
    if (state.first && startKey in handlers)
      handlers[startKey](state);
    if (handlerKey in handlers)
      memo16 = handlers[handlerKey](state);
    if (state.last && endKey in handlers)
      handlers[endKey](state);
    return memo16;
  };
  internalHandlers[key] = fn;
  config2[key] = config2[key] || {};
}
function parseMergedHandlers(mergedHandlers, mergedConfig) {
  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);
  const internalHandlers = {};
  registerGesture(actions, handlers, "onDrag", "drag", internalHandlers, mergedConfig);
  registerGesture(actions, handlers, "onWheel", "wheel", internalHandlers, mergedConfig);
  registerGesture(actions, handlers, "onScroll", "scroll", internalHandlers, mergedConfig);
  registerGesture(actions, handlers, "onPinch", "pinch", internalHandlers, mergedConfig);
  registerGesture(actions, handlers, "onMove", "move", internalHandlers, mergedConfig);
  registerGesture(actions, handlers, "onHover", "hover", internalHandlers, mergedConfig);
  return {
    handlers: internalHandlers,
    config: mergedConfig,
    nativeHandlers
  };
}

// node_modules/@use-gesture/react/dist/use-gesture-react.esm.js
function useRecognizers(handlers, config2 = {}, gestureKey, nativeHandlers) {
  const ctrl = import_react18.default.useMemo(() => new Controller(handlers), []);
  ctrl.applyHandlers(handlers, nativeHandlers);
  ctrl.applyConfig(config2, gestureKey);
  import_react18.default.useEffect(ctrl.effect.bind(ctrl));
  import_react18.default.useEffect(() => {
    return ctrl.clean.bind(ctrl);
  }, []);
  if (config2.target === void 0) {
    return ctrl.bind.bind(ctrl);
  }
  return void 0;
}
function useDrag(handler, config2) {
  registerAction(dragAction);
  return useRecognizers({
    drag: handler
  }, config2 || {}, "drag");
}
function useWheel(handler, config2) {
  registerAction(wheelAction);
  return useRecognizers({
    wheel: handler
  }, config2 || {}, "wheel");
}
function createUseGesture(actions) {
  actions.forEach(registerAction);
  return function useGesture(_handlers, _config) {
    const {
      handlers,
      nativeHandlers,
      config: config2
    } = parseMergedHandlers(_handlers, _config || {});
    return useRecognizers(handlers, config2, void 0, nativeHandlers);
  };
}

// node_modules/antd-mobile/es/utils/rubberband.js
function rubberband2(distance, dimension, constant) {
  return distance * dimension * constant / (dimension + constant * distance);
}
function rubberbandIfOutOfBounds2(position, min3, max3, dimension, constant = 0.15) {
  if (constant === 0)
    return bound(position, min3, max3);
  if (position < min3)
    return -rubberband2(min3 - position, dimension, constant) + min3;
  if (position > max3)
    return +rubberband2(position - max3, dimension, constant) + max3;
  return position;
}

// node_modules/antd-mobile/es/components/picker-view/wheel.js
var import_isEqual = __toESM(require_isEqual());

// node_modules/antd-mobile/es/utils/is-dev.js
var isDev = true;

// node_modules/antd-mobile/es/utils/dev-log.js
function devWarning(component, message) {
  if (isDev) {
    console.warn(`[antd-mobile: ${component}] ${message}`);
  }
}
function devError(component, message) {
  if (isDev) {
    console.error(`[antd-mobile: ${component}] ${message}`);
  }
}

// node_modules/antd-mobile/es/utils/measure-css-length.js
function measureCSSLength(raw) {
  if (raw === null || raw === void 0 || raw === "") {
    if (isDev) {
      devError("Global", "Seems like the you will encounter a style messed problem. Please check the browser environment to make sure it supports CSS variables.");
    }
    return 0;
  }
  const withUnit = raw.trim();
  if (withUnit.endsWith("px")) {
    return parseFloat(withUnit);
  } else if (withUnit.endsWith("rem")) {
    return parseFloat(withUnit) * parseFloat(window.getComputedStyle(document.documentElement).fontSize);
  } else if (withUnit.endsWith("vw")) {
    return parseFloat(withUnit) * window.innerWidth / 100;
  } else {
    if (isDev) {
      devError("Global", `You are using a not supported CSS unit in \`${raw}\`. Only \`px\` \`rem\` and \`vw\` are supported.`);
    }
    return 0;
  }
}

// node_modules/antd-mobile/es/components/picker-view/wheel.js
var classPrefix12 = `adm-picker-view`;
var Wheel = (0, import_react19.memo)((props) => {
  const {
    value,
    column,
    renderLabel
  } = props;
  function onSelect(val) {
    props.onSelect(val, props.index);
  }
  const [{
    y
  }, api] = useSpring(() => ({
    from: {
      y: 0
    },
    config: {
      tension: 400,
      mass: 0.8
    }
  }));
  const draggingRef = (0, import_react19.useRef)(false);
  const rootRef = (0, import_react19.useRef)(null);
  const itemHeight = (0, import_react19.useRef)(34);
  useIsomorphicLayoutEffect_default(() => {
    const root = rootRef.current;
    if (!root)
      return;
    itemHeight.current = measureCSSLength(window.getComputedStyle(root).getPropertyValue("--item-height"));
  });
  useIsomorphicLayoutEffect_default(() => {
    if (draggingRef.current)
      return;
    if (!value)
      return;
    const targetIndex = column.findIndex((item) => item.value === value);
    if (targetIndex < 0)
      return;
    const finalPosition = targetIndex * -itemHeight.current;
    api.start({
      y: finalPosition,
      immediate: y.goal !== finalPosition
    });
  }, [value, column]);
  useIsomorphicLayoutEffect_default(() => {
    if (column.length === 0) {
      if (value !== null) {
        onSelect(null);
      }
    } else {
      if (!column.some((item) => item.value === value)) {
        const firstItem = column[0];
        onSelect(firstItem.value);
      }
    }
  }, [column, value]);
  function scrollSelect(index) {
    const finalPosition = index * -itemHeight.current;
    api.start({
      y: finalPosition
    });
    const item = column[index];
    if (!item)
      return;
    onSelect(item.value);
  }
  const handleDrag = (state) => {
    draggingRef.current = true;
    const min3 = -((column.length - 1) * itemHeight.current);
    const max3 = 0;
    if (state.last) {
      draggingRef.current = false;
      const position = state.offset[1] + state.velocity[1] * state.direction[1] * 50;
      const targetIndex = min3 < max3 ? -Math.round(bound(position, min3, max3) / itemHeight.current) : 0;
      scrollSelect(targetIndex);
    } else {
      const position = state.offset[1];
      api.start({
        y: rubberbandIfOutOfBounds2(position, min3, max3, itemHeight.current * 50, 0.2)
      });
    }
  };
  useDrag((state) => {
    state.event.stopPropagation();
    handleDrag(state);
  }, {
    axis: "y",
    from: () => [0, y.get()],
    filterTaps: true,
    pointer: {
      touch: true
    },
    target: rootRef
  });
  useWheel((state) => {
    state.event.stopPropagation();
    handleDrag(state);
  }, {
    axis: "y",
    from: () => [0, y.get()],
    preventDefault: true,
    target: props.mouseWheel ? rootRef : void 0,
    eventOptions: supportsPassive ? {
      passive: false
    } : false
  });
  let selectedIndex = null;
  function renderAccessible() {
    if (selectedIndex === null) {
      return null;
    }
    const current = column[selectedIndex];
    const previousIndex = selectedIndex - 1;
    const nextIndex = selectedIndex + 1;
    const previous = column[previousIndex];
    const next = column[nextIndex];
    return import_react19.default.createElement("div", {
      className: "adm-picker-view-column-accessible"
    }, import_react19.default.createElement("div", {
      className: "adm-picker-view-column-accessible-current",
      role: "button",
      "aria-label": current ? `\u5F53\u524D\u9009\u62E9\u7684\u662F\uFF1A${current.label}` : "\u5F53\u524D\u672A\u9009\u62E9"
    }, "-"), import_react19.default.createElement("div", null, previous && import_react19.default.createElement("div", {
      className: "adm-picker-view-column-accessible-button",
      onClick: () => {
        scrollSelect(previousIndex);
      },
      role: "button",
      "aria-label": `\u9009\u62E9\u4E0A\u4E00\u9879\uFF1A${previous.label}`
    }, "-")), import_react19.default.createElement("div", null, next && import_react19.default.createElement("div", {
      className: "adm-picker-view-column-accessible-button",
      onClick: () => {
        scrollSelect(nextIndex);
      },
      role: "button",
      "aria-label": `\u9009\u62E9\u4E0B\u4E00\u9879\uFF1A${next.label}`
    }, "-")));
  }
  return import_react19.default.createElement("div", {
    ref: rootRef,
    className: `${classPrefix12}-column`
  }, import_react19.default.createElement(animated.div, {
    style: {
      translateY: y
    },
    className: `${classPrefix12}-column-wheel`,
    "aria-hidden": true
  }, column.map((item, index) => {
    var _a;
    const selected = props.value === item.value;
    if (selected)
      selectedIndex = index;
    function handleClick() {
      draggingRef.current = false;
      scrollSelect(index);
    }
    return import_react19.default.createElement("div", {
      key: (_a = item.key) !== null && _a !== void 0 ? _a : item.value,
      "data-selected": item.value === value,
      className: `${classPrefix12}-column-item`,
      onClick: handleClick,
      "aria-hidden": !selected,
      "aria-label": selected ? "active" : ""
    }, import_react19.default.createElement("div", {
      className: `${classPrefix12}-column-item-label`
    }, renderLabel(item)));
  })), renderAccessible());
}, (prev, next) => {
  if (prev.index !== next.index)
    return false;
  if (prev.value !== next.value)
    return false;
  if (prev.onSelect !== next.onSelect)
    return false;
  if (!(0, import_isEqual.default)(prev.column, next.column)) {
    return false;
  }
  return true;
});
Wheel.displayName = "Wheel";

// node_modules/antd-mobile/es/components/picker-view/columns-extend.js
var import_react21 = __toESM(require_react());

// node_modules/antd-mobile/es/utils/with-cache.js
function withCache(generate) {
  let cache = null;
  return () => {
    if (cache === null) {
      cache = generate();
    }
    return cache;
  };
}

// node_modules/antd-mobile/es/components/picker-view/columns-extend.js
function generateColumnsExtend(rawColumns, val) {
  const columns = withCache(() => {
    const c = typeof rawColumns === "function" ? rawColumns(val) : rawColumns;
    return c.map((column) => column.map((item) => typeof item === "string" ? {
      label: item,
      value: item
    } : item));
  });
  const items = withCache(() => {
    return val.map((v, index) => {
      var _a;
      const column = columns()[index];
      if (!column)
        return null;
      return (_a = column.find((item) => item.value === v)) !== null && _a !== void 0 ? _a : null;
    });
  });
  const extend = {
    get columns() {
      return columns();
    },
    get items() {
      return items();
    }
  };
  return extend;
}
function useColumnsExtend(rawColumns, value) {
  return (0, import_react21.useMemo)(() => generateColumnsExtend(rawColumns, value), [rawColumns, value]);
}

// node_modules/antd-mobile/es/components/picker/picker-utils.js
var defaultRenderLabel = (item) => item.label;

// node_modules/antd-mobile/es/components/picker-view/picker-view.js
var classPrefix13 = `adm-picker-view`;
var defaultProps6 = {
  defaultValue: [],
  renderLabel: defaultRenderLabel,
  mouseWheel: false
};
var PickerView = (0, import_react22.memo)((p) => {
  const props = mergeProps(defaultProps6, p);
  const [innerValue, setInnerValue] = (0, import_react22.useState)(props.value === void 0 ? props.defaultValue : props.value);
  (0, import_react22.useEffect)(() => {
    if (props.value === void 0)
      return;
    if (props.value === innerValue)
      return;
    setInnerValue(props.value);
  }, [props.value]);
  (0, import_react22.useEffect)(() => {
    if (props.value === innerValue)
      return;
    const timeout = window.setTimeout(() => {
      if (props.value !== void 0 && props.value !== innerValue) {
        setInnerValue(props.value);
      }
    }, 1e3);
    return () => {
      window.clearTimeout(timeout);
    };
  }, [props.value, innerValue]);
  const extend = useColumnsExtend(props.columns, innerValue);
  const columns = extend.columns;
  useDebounceEffect_default(() => {
    var _a;
    if (props.value === innerValue)
      return;
    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, innerValue, extend);
  }, [innerValue], {
    wait: 0,
    leading: false,
    trailing: true
  });
  const handleSelect = (0, import_react22.useCallback)((val, index) => {
    setInnerValue((prev) => {
      const next = [...prev];
      next[index] = val;
      return next;
    });
  }, []);
  return withNativeProps(props, import_react22.default.createElement("div", {
    className: `${classPrefix13}`
  }, columns.map((column, index) => import_react22.default.createElement(Wheel, {
    key: index,
    index,
    column,
    value: innerValue[index],
    onSelect: handleSelect,
    renderLabel: props.renderLabel,
    mouseWheel: props.mouseWheel
  })), import_react22.default.createElement("div", {
    className: `${classPrefix13}-mask`
  }, import_react22.default.createElement("div", {
    className: `${classPrefix13}-mask-top`
  }), import_react22.default.createElement("div", {
    className: `${classPrefix13}-mask-middle`
  }), import_react22.default.createElement("div", {
    className: `${classPrefix13}-mask-bottom`
  }))));
});
PickerView.displayName = "PickerView";

// node_modules/antd-mobile/es/components/picker-view/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/picker-view/picker-view.css";
var picker_view_default = PickerView;

// node_modules/antd-mobile/es/components/picker/picker.js
var classPrefix14 = `adm-picker`;
var defaultProps7 = {
  defaultValue: [],
  closeOnMaskClick: true,
  renderLabel: defaultRenderLabel
};
var Picker = (0, import_react23.memo)((0, import_react23.forwardRef)((p, ref) => {
  var _a;
  const {
    locale
  } = useConfig();
  const props = mergeProps(defaultProps7, {
    confirmText: locale.common.confirm,
    cancelText: locale.common.cancel
  }, p);
  const [visible, setVisible] = usePropsValue({
    value: props.visible,
    defaultValue: false,
    onChange: (v) => {
      var _a2;
      if (v === false) {
        (_a2 = props.onClose) === null || _a2 === void 0 ? void 0 : _a2.call(props);
      }
    }
  });
  const actions = {
    toggle: () => {
      setVisible((v) => !v);
    },
    open: () => {
      setVisible(true);
    },
    close: () => {
      setVisible(false);
    }
  };
  (0, import_react23.useImperativeHandle)(ref, () => actions);
  const [value, setValue2] = usePropsValue(Object.assign(Object.assign({}, props), {
    onChange: (val) => {
      var _a2;
      const extend2 = generateColumnsExtend(props.columns, val);
      (_a2 = props.onConfirm) === null || _a2 === void 0 ? void 0 : _a2.call(props, val, extend2);
    }
  }));
  const extend = useColumnsExtend(props.columns, value);
  const [innerValue, setInnerValue] = (0, import_react23.useState)(value);
  (0, import_react23.useEffect)(() => {
    if (innerValue !== value) {
      setInnerValue(value);
    }
  }, [visible]);
  (0, import_react23.useEffect)(() => {
    if (!visible) {
      setInnerValue(value);
    }
  }, [value]);
  const onChange = useMemoizedFn_default((val, ext) => {
    var _a2;
    setInnerValue(val);
    if (visible) {
      (_a2 = props.onSelect) === null || _a2 === void 0 ? void 0 : _a2.call(props, val, ext);
    }
  });
  const shouldRender = useShouldRender(visible, props.forceRender, props.destroyOnClose);
  const pickerElement = withNativeProps(props, import_react23.default.createElement("div", {
    className: classPrefix14
  }, import_react23.default.createElement("div", {
    className: `${classPrefix14}-header`
  }, import_react23.default.createElement("a", {
    className: `${classPrefix14}-header-button`,
    onClick: () => {
      var _a2;
      (_a2 = props.onCancel) === null || _a2 === void 0 ? void 0 : _a2.call(props);
      setVisible(false);
    }
  }, props.cancelText), import_react23.default.createElement("div", {
    className: `${classPrefix14}-header-title`
  }, props.title), import_react23.default.createElement("a", {
    className: `${classPrefix14}-header-button`,
    onClick: () => {
      setValue2(innerValue);
      setVisible(false);
    }
  }, props.confirmText)), import_react23.default.createElement("div", {
    className: `${classPrefix14}-body`
  }, import_react23.default.createElement(picker_view_default, {
    columns: props.columns,
    renderLabel: props.renderLabel,
    value: innerValue,
    mouseWheel: props.mouseWheel,
    onChange
  }))));
  const popupElement = import_react23.default.createElement(popup_default, {
    style: props.popupStyle,
    className: (0, import_classnames10.default)(`${classPrefix14}-popup`, props.popupClassName),
    visible,
    position: "bottom",
    onMaskClick: () => {
      var _a2;
      if (!props.closeOnMaskClick)
        return;
      (_a2 = props.onCancel) === null || _a2 === void 0 ? void 0 : _a2.call(props);
      setVisible(false);
    },
    getContainer: props.getContainer,
    destroyOnClose: true,
    afterShow: props.afterShow,
    afterClose: props.afterClose,
    onClick: props.onClick,
    forceRender: true,
    stopPropagation: props.stopPropagation
  }, shouldRender && pickerElement, import_react23.default.createElement(safe_area_default, {
    position: "bottom"
  }));
  return import_react23.default.createElement(import_react23.default.Fragment, null, popupElement, (_a = props.children) === null || _a === void 0 ? void 0 : _a.call(props, extend.items, actions));
}));
Picker.displayName = "Picker";

// node_modules/antd-mobile/es/components/picker/prompt.js
var import_react24 = __toESM(require_react());
function prompt(props) {
  return new Promise((resolve) => {
    const Wrapper2 = () => {
      const [visible, setVisible] = (0, import_react24.useState)(false);
      (0, import_react24.useEffect)(() => {
        setVisible(true);
      }, []);
      return import_react24.default.createElement(Picker, Object.assign({}, props, {
        visible,
        onConfirm: (val, extend) => {
          var _a;
          (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, val, extend);
          resolve(val);
        },
        onClose: () => {
          var _a;
          (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
          setVisible(false);
          resolve(null);
        },
        afterClose: () => {
          var _a;
          (_a = props.afterClose) === null || _a === void 0 ? void 0 : _a.call(props);
          unmount2();
        }
      }));
    };
    const unmount2 = renderToBody(import_react24.default.createElement(Wrapper2, null));
  });
}

// node_modules/antd-mobile/es/components/picker/index.js
var picker_default = attachPropertiesToComponent(Picker, {
  prompt
});

// node_modules/antd-mobile/es/components/cascade-picker/cascade-picker-utils.js
var import_react25 = __toESM(require_react());
function useColumnsFn(options) {
  const depth = (0, import_react25.useMemo)(() => {
    let depth2 = 0;
    function traverse(options2, currentDepth) {
      if (currentDepth > depth2)
        depth2 = currentDepth;
      const nextDepth = currentDepth + 1;
      options2.forEach((option) => {
        if (option.children) {
          traverse(option.children, nextDepth);
        }
      });
    }
    traverse(options, 1);
    return depth2;
  }, [options]);
  return (selected) => {
    const columns = [];
    let currentOptions = options;
    let i = 0;
    while (true) {
      columns.push(currentOptions.map((option) => ({
        label: option.label,
        value: option.value
      })));
      const x = selected[i];
      const targetOptions = currentOptions.find((option) => option.value === x);
      if (!targetOptions || !targetOptions.children)
        break;
      currentOptions = targetOptions.children;
      i++;
    }
    while (i < depth - 1) {
      columns.push([]);
      i++;
    }
    return columns;
  };
}

// node_modules/antd-mobile/es/components/cascade-picker/cascade-picker.js
var CascadePicker = (0, import_react26.forwardRef)((props, ref) => {
  const {
    options
  } = props, pickerProps = __rest(props, ["options"]);
  const columnsFn = useColumnsFn(options);
  return import_react26.default.createElement(picker_default, Object.assign({}, pickerProps, {
    ref,
    columns: columnsFn
  }));
});

// node_modules/antd-mobile/es/components/cascade-picker/prompt.js
var import_react27 = __toESM(require_react());
function prompt2(props) {
  return new Promise((resolve) => {
    const Wrapper2 = () => {
      const [visible, setVisible] = (0, import_react27.useState)(false);
      (0, import_react27.useEffect)(() => {
        setVisible(true);
      }, []);
      return import_react27.default.createElement(CascadePicker, Object.assign({}, props, {
        visible,
        onConfirm: (val, extend) => {
          var _a;
          (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, val, extend);
          resolve(val);
        },
        onClose: () => {
          var _a;
          (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
          setVisible(false);
          resolve(null);
        },
        afterClose: () => {
          var _a;
          (_a = props.afterClose) === null || _a === void 0 ? void 0 : _a.call(props);
          unmount2();
        }
      }));
    };
    const unmount2 = renderToBody(import_react27.default.createElement(Wrapper2, null));
  });
}

// node_modules/antd-mobile/es/components/cascade-picker/index.js
var cascade_picker_default = attachPropertiesToComponent(CascadePicker, {
  prompt: prompt2
});

// node_modules/antd-mobile/es/components/cascade-picker-view/cascade-picker-view.js
var import_react28 = __toESM(require_react());
var CascadePickerView = (props) => {
  const {
    options
  } = props, pickerProps = __rest(props, ["options"]);
  const columnsFn = useColumnsFn(options);
  return import_react28.default.createElement(picker_view_default, Object.assign({}, pickerProps, {
    columns: columnsFn
  }));
};

// node_modules/antd-mobile/es/components/cascade-picker-view/index.js
var cascade_picker_view_default = CascadePickerView;

// node_modules/antd-mobile/es/components/cascader/cascader.js
var import_react38 = __toESM(require_react());

// node_modules/antd-mobile/es/components/cascader-view/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/cascader-view/cascader-view.css";

// node_modules/antd-mobile/es/components/cascader-view/cascader-view.js
var import_react37 = __toESM(require_react());
var import_classnames16 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/tabs/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/tabs/tabs.css";

// node_modules/antd-mobile/es/components/tabs/tabs.js
var import_react29 = __toESM(require_react());
var import_classnames11 = __toESM(require_classnames());
var classPrefix15 = `adm-tabs`;
var Tab = () => {
  return null;
};
var defaultProps8 = {
  activeLineMode: "auto",
  stretch: true
};
var Tabs = (p) => {
  var _a;
  const props = mergeProps(defaultProps8, p);
  const tabListContainerRef = (0, import_react29.useRef)(null);
  const activeLineRef = (0, import_react29.useRef)(null);
  const keyToIndexRecord = {};
  let firstActiveKey = null;
  const panes = [];
  traverseReactNode(props.children, (child, index) => {
    if (!import_react29.default.isValidElement(child))
      return;
    const key = child.key;
    if (typeof key !== "string")
      return;
    if (index === 0) {
      firstActiveKey = key;
    }
    const length = panes.push(child);
    keyToIndexRecord[key] = length - 1;
  });
  const [activeKey, setActiveKey] = usePropsValue({
    value: props.activeKey,
    defaultValue: (_a = props.defaultActiveKey) !== null && _a !== void 0 ? _a : firstActiveKey,
    onChange: (v) => {
      var _a2;
      if (v === null)
        return;
      (_a2 = props.onChange) === null || _a2 === void 0 ? void 0 : _a2.call(props, v);
    }
  });
  const [{
    x,
    width
  }, api] = useSpring(() => ({
    x: 0,
    width: 0,
    config: {
      tension: 300,
      clamp: true
    }
  }));
  const [{
    scrollLeft
  }, scrollApi] = useSpring(() => ({
    scrollLeft: 0,
    config: {
      tension: 300,
      clamp: true
    }
  }));
  const [{
    leftMaskOpacity,
    rightMaskOpacity
  }, maskApi] = useSpring(() => ({
    leftMaskOpacity: 0,
    rightMaskOpacity: 0,
    config: {
      clamp: true
    }
  }));
  function animate(immediate = false) {
    const container = tabListContainerRef.current;
    if (!container)
      return;
    const activeIndex = keyToIndexRecord[activeKey];
    if (activeIndex === void 0) {
      api.start({
        x: 0,
        width: 0,
        immediate: true
      });
      return;
    }
    const activeLine = activeLineRef.current;
    if (!activeLine)
      return;
    const activeTabWrapper = container.children.item(activeIndex + 1);
    const activeTab = activeTabWrapper.children.item(0);
    const activeTabLeft = activeTab.offsetLeft;
    const activeTabWidth = activeTab.offsetWidth;
    const activeTabWrapperLeft = activeTabWrapper.offsetLeft;
    const activeTabWrapperWidth = activeTabWrapper.offsetWidth;
    const containerWidth = container.offsetWidth;
    const containerScrollWidth = container.scrollWidth;
    const containerScrollLeft = container.scrollLeft;
    const activeLineWidth = activeLine.offsetWidth;
    let x2 = 0;
    let width2 = 0;
    if (props.activeLineMode === "auto") {
      x2 = activeTabLeft;
      width2 = activeTabWidth;
    } else if (props.activeLineMode === "full") {
      x2 = activeTabWrapperLeft;
      width2 = activeTabWrapperWidth;
    } else {
      x2 = activeTabLeft + (activeTabWidth - activeLineWidth) / 2;
    }
    api.start({
      x: x2,
      width: width2,
      immediate
    });
    const maxScrollDistance = containerScrollWidth - containerWidth;
    if (maxScrollDistance <= 0)
      return;
    const nextScrollLeft = bound(activeTabLeft - (containerWidth - activeTabWidth) / 2, 0, containerScrollWidth - containerWidth);
    scrollApi.start({
      scrollLeft: nextScrollLeft,
      from: {
        scrollLeft: containerScrollLeft
      },
      immediate
    });
  }
  useIsomorphicLayoutEffect_default(() => {
    animate(!x.isAnimating);
  }, []);
  useIsomorphicUpdateLayoutEffect(() => {
    animate();
  }, [activeKey]);
  useResizeEffect(() => {
    animate(!x.isAnimating);
  }, tabListContainerRef);
  useMutationEffect(() => {
    animate(!x.isAnimating);
  }, tabListContainerRef, {
    subtree: true,
    childList: true,
    characterData: true
  });
  const {
    run: updateMask
  } = useThrottleFn_default((immediate = false) => {
    const container = tabListContainerRef.current;
    if (!container)
      return;
    const scrollLeft2 = container.scrollLeft;
    const showLeftMask = scrollLeft2 > 0;
    const showRightMask = scrollLeft2 + container.offsetWidth < container.scrollWidth;
    maskApi.start({
      leftMaskOpacity: showLeftMask ? 1 : 0,
      rightMaskOpacity: showRightMask ? 1 : 0,
      immediate
    });
  }, {
    wait: 100,
    trailing: true,
    leading: true
  });
  useIsomorphicLayoutEffect_default(() => {
    updateMask(true);
  }, []);
  return withNativeProps(props, import_react29.default.createElement("div", {
    className: classPrefix15
  }, import_react29.default.createElement("div", {
    className: `${classPrefix15}-header`
  }, import_react29.default.createElement(animated.div, {
    className: (0, import_classnames11.default)(`${classPrefix15}-header-mask`, `${classPrefix15}-header-mask-left`),
    style: {
      opacity: leftMaskOpacity
    }
  }), import_react29.default.createElement(animated.div, {
    className: (0, import_classnames11.default)(`${classPrefix15}-header-mask`, `${classPrefix15}-header-mask-right`),
    style: {
      opacity: rightMaskOpacity
    }
  }), import_react29.default.createElement(animated.div, {
    className: `${classPrefix15}-tab-list`,
    ref: tabListContainerRef,
    scrollLeft,
    onScroll: updateMask
  }, import_react29.default.createElement(animated.div, {
    ref: activeLineRef,
    className: `${classPrefix15}-tab-line`,
    style: {
      width: props.activeLineMode === "fixed" ? "var(--fixed-active-line-width, 30px)" : width,
      x
    }
  }), panes.map((pane) => withNativeProps(pane.props, import_react29.default.createElement("div", {
    key: pane.key,
    className: (0, import_classnames11.default)(`${classPrefix15}-tab-wrapper`, {
      [`${classPrefix15}-tab-wrapper-stretch`]: props.stretch
    })
  }, import_react29.default.createElement("div", {
    onClick: () => {
      const {
        key
      } = pane;
      if (pane.props.disabled)
        return;
      if (key === void 0 || key === null) {
        return;
      }
      setActiveKey(key.toString());
    },
    className: (0, import_classnames11.default)(`${classPrefix15}-tab`, {
      [`${classPrefix15}-tab-active`]: pane.key === activeKey,
      [`${classPrefix15}-tab-disabled`]: pane.props.disabled
    })
  }, pane.props.title)))))), panes.map((pane) => {
    if (pane.props.children === void 0) {
      return null;
    }
    const active = pane.key === activeKey;
    return import_react29.default.createElement(ShouldRender, {
      key: pane.key,
      active,
      forceRender: pane.props.forceRender,
      destroyOnClose: pane.props.destroyOnClose
    }, import_react29.default.createElement("div", {
      className: `${classPrefix15}-content`,
      style: {
        display: active ? "block" : "none"
      }
    }, pane.props.children));
  })));
};

// node_modules/antd-mobile/es/components/tabs/index.js
var tabs_default = attachPropertiesToComponent(Tabs, {
  Tab
});

// node_modules/antd-mobile/es/components/check-list/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/check-list/check-list.css";

// node_modules/antd-mobile/es/components/check-list/check-list.js
var import_react33 = __toESM(require_react());

// node_modules/antd-mobile/es/components/list/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/list/list.css";

// node_modules/antd-mobile/es/components/list/list.js
var import_react30 = __toESM(require_react());
var import_classnames12 = __toESM(require_classnames());
var classPrefix16 = `adm-list`;
var defaultProps9 = {
  mode: "default"
};
var List = (p) => {
  const props = mergeProps(defaultProps9, p);
  return withNativeProps(props, import_react30.default.createElement("div", {
    className: (0, import_classnames12.default)(classPrefix16, `${classPrefix16}-${props.mode}`)
  }, props.header && import_react30.default.createElement("div", {
    className: `${classPrefix16}-header`
  }, props.header), import_react30.default.createElement("div", {
    className: `${classPrefix16}-body`
  }, import_react30.default.createElement("div", {
    className: `${classPrefix16}-body-inner`
  }, props.children))));
};

// node_modules/antd-mobile/es/components/list/list-item.js
var import_react31 = __toESM(require_react());
var import_classnames13 = __toESM(require_classnames());

// node_modules/antd-mobile/es/utils/is-node-with-content.js
function isNodeWithContent(node) {
  return node !== void 0 && node !== null && node !== false;
}

// node_modules/antd-mobile/es/components/list/list-item.js
var classPrefix17 = `adm-list-item`;
var ListItem = (props) => {
  var _a;
  const clickable = (_a = props.clickable) !== null && _a !== void 0 ? _a : !!props.onClick;
  const arrow2 = props.arrow === void 0 ? clickable : props.arrow;
  const content = import_react31.default.createElement("div", {
    className: `${classPrefix17}-content`
  }, isNodeWithContent(props.prefix) && import_react31.default.createElement("div", {
    className: `${classPrefix17}-content-prefix`
  }, props.prefix), import_react31.default.createElement("div", {
    className: `${classPrefix17}-content-main`
  }, isNodeWithContent(props.title) && import_react31.default.createElement("div", {
    className: `${classPrefix17}-title`
  }, props.title), props.children, isNodeWithContent(props.description) && import_react31.default.createElement("div", {
    className: `${classPrefix17}-description`
  }, props.description)), isNodeWithContent(props.extra) && import_react31.default.createElement("div", {
    className: `${classPrefix17}-content-extra`
  }, props.extra), isNodeWithContent(arrow2) && import_react31.default.createElement("div", {
    className: `${classPrefix17}-content-arrow`
  }, arrow2 === true ? import_react31.default.createElement(RightOutline_default, null) : arrow2));
  return withNativeProps(props, import_react31.default.createElement(clickable ? "a" : "div", {
    className: (0, import_classnames13.default)(`${classPrefix17}`, clickable ? ["adm-plain-anchor"] : [], props.disabled && `${classPrefix17}-disabled`),
    onClick: props.disabled ? void 0 : props.onClick
  }, content));
};

// node_modules/antd-mobile/es/components/list/index.js
var list_default = attachPropertiesToComponent(List, {
  Item: ListItem
});

// node_modules/antd-mobile/es/components/check-list/context.js
var import_react32 = __toESM(require_react());
var CheckListContext = (0, import_react32.createContext)(null);

// node_modules/antd-mobile/es/components/check-list/check-list.js
var classPrefix18 = "adm-check-list";
var defaultProps10 = {
  multiple: false,
  defaultValue: [],
  activeIcon: import_react33.default.createElement(CheckOutline_default, null)
};
var CheckList = (p) => {
  const props = mergeProps(defaultProps10, p);
  const [value, setValue2] = usePropsValue(props);
  function check(val) {
    if (props.multiple) {
      setValue2([...value, val]);
    } else {
      setValue2([val]);
    }
  }
  function uncheck(val) {
    setValue2(value.filter((item) => item !== val));
  }
  const {
    activeIcon,
    disabled,
    readOnly
  } = props;
  return import_react33.default.createElement(CheckListContext.Provider, {
    value: {
      value,
      check,
      uncheck,
      activeIcon,
      disabled,
      readOnly
    }
  }, withNativeProps(props, import_react33.default.createElement(list_default, {
    mode: props.mode,
    className: classPrefix18
  }, props.children)));
};

// node_modules/antd-mobile/es/components/check-list/check-list-item.js
var import_react34 = __toESM(require_react());
var import_classnames14 = __toESM(require_classnames());
var classPrefix19 = `adm-check-list-item`;
var CheckListItem = (props) => {
  const context = (0, import_react34.useContext)(CheckListContext);
  if (context === null) {
    devWarning("CheckList.Item", "CheckList.Item can only be used inside CheckList.");
    return null;
  }
  const active = context.value.includes(props.value);
  const readOnly = props.readOnly || context.readOnly;
  const extra = import_react34.default.createElement("div", {
    className: `${classPrefix19}-extra`
  }, active ? context.activeIcon : null);
  return withNativeProps(props, import_react34.default.createElement(list_default.Item, {
    title: props.title,
    className: (0, import_classnames14.default)(classPrefix19, readOnly && `${classPrefix19}-readonly`, active && `${classPrefix19}-active`),
    description: props.description,
    prefix: props.prefix,
    onClick: (e) => {
      var _a;
      if (readOnly)
        return;
      if (active) {
        context.uncheck(props.value);
      } else {
        context.check(props.value);
      }
      (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);
    },
    arrow: false,
    clickable: !readOnly,
    extra,
    disabled: props.disabled || context.disabled
  }, props.children));
};

// node_modules/antd-mobile/es/components/check-list/index.js
var check_list_default = attachPropertiesToComponent(CheckList, {
  Item: CheckListItem
});

// node_modules/antd-mobile/es/components/cascader-view/use-cascader-value-extend.js
var import_react35 = __toESM(require_react());
var import_memoize = __toESM(require_memoize());
function useCascaderValueExtend(options) {
  const generateItems = (0, import_react35.useMemo)(() => {
    return (0, import_memoize.default)((val) => {
      const ret = [];
      let currentOptions = options;
      for (const v of val) {
        const target = currentOptions.find((option) => option.value === v);
        if (!target) {
          break;
        }
        ret.push(target);
        if (!target.children)
          break;
        currentOptions = target.children;
      }
      return ret;
    }, (val) => JSON.stringify(val));
  }, [options]);
  const generateIsLeaf = (0, import_react35.useMemo)(() => {
    return (0, import_memoize.default)((val) => {
      const children = val.reduce((currentOptions, v) => {
        var _a;
        return ((_a = currentOptions.find((option) => option.value === v)) === null || _a === void 0 ? void 0 : _a.children) || [];
      }, options);
      return children.length === 0;
    }, (val) => JSON.stringify(val));
  }, [options]);
  function generateValueExtend(val) {
    return {
      get items() {
        return generateItems(val);
      },
      get isLeaf() {
        return generateIsLeaf(val);
      }
    };
  }
  return generateValueExtend;
}

// node_modules/antd-mobile/es/components/cascader-view/option-skeleton.js
var optionSkeleton = [];

// node_modules/antd-mobile/es/components/skeleton/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/skeleton/skeleton.css";

// node_modules/antd-mobile/es/components/skeleton/skeleton.js
var import_react36 = __toESM(require_react());
var import_classnames15 = __toESM(require_classnames());

// node_modules/antd-mobile/es/utils/generate-int-array.js
function generateIntArray(from, to2) {
  const array4 = [];
  for (let i = from; i <= to2; i++) {
    array4.push(i);
  }
  return array4;
}

// node_modules/antd-mobile/es/components/skeleton/skeleton.js
var classPrefix20 = "adm-skeleton";
var Skeleton = (props) => {
  return withNativeProps(props, import_react36.default.createElement("div", {
    className: (0, import_classnames15.default)(classPrefix20, {
      [`${classPrefix20}-animated`]: props.animated
    })
  }));
};
var SkeletonTitle = (props) => {
  return withNativeProps(props, import_react36.default.createElement(Skeleton, {
    animated: props.animated,
    className: `${classPrefix20}-title`
  }));
};
var defaultSkeletonParagraphProps = {
  lineCount: 3
};
var SkeletonParagraph = (p) => {
  const props = mergeProps(defaultSkeletonParagraphProps, p);
  const keys = generateIntArray(1, props.lineCount);
  const node = import_react36.default.createElement("div", {
    className: `${classPrefix20}-paragraph`
  }, keys.map((key) => import_react36.default.createElement(Skeleton, {
    key,
    animated: props.animated,
    className: `${classPrefix20}-paragraph-line`
  })));
  return withNativeProps(props, node);
};

// node_modules/antd-mobile/es/components/skeleton/index.js
var skeleton_default = attachPropertiesToComponent(Skeleton, {
  Title: SkeletonTitle,
  Paragraph: SkeletonParagraph
});

// node_modules/antd-mobile/es/components/cascader-view/cascader-view.js
var classPrefix21 = `adm-cascader-view`;
var defaultProps11 = {
  defaultValue: []
};
var CascaderView = (p) => {
  const {
    locale
  } = useConfig();
  const props = mergeProps(defaultProps11, {
    placeholder: locale.Cascader.placeholder
  }, p);
  const [value, setValue2] = usePropsValue(Object.assign(Object.assign({}, props), {
    onChange: (val) => {
      var _a;
      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, val, generateValueExtend(val));
    }
  }));
  const [tabActiveIndex, setTabActiveIndex] = (0, import_react37.useState)(0);
  const generateValueExtend = useCascaderValueExtend(props.options);
  const levels = (0, import_react37.useMemo)(() => {
    const ret = [];
    let currentOptions = props.options;
    let reachedEnd = false;
    for (const v of value) {
      const target = currentOptions.find((option) => option.value === v);
      ret.push({
        selected: target,
        options: currentOptions
      });
      if (!target || !target.children) {
        reachedEnd = true;
        break;
      }
      currentOptions = target.children;
    }
    if (!reachedEnd) {
      ret.push({
        selected: void 0,
        options: currentOptions
      });
    }
    return ret;
  }, [value, props.options]);
  (0, import_react37.useEffect)(() => {
    setTabActiveIndex(levels.length - 1);
  }, [value]);
  (0, import_react37.useEffect)(() => {
    const max3 = levels.length - 1;
    if (tabActiveIndex > max3) {
      setTabActiveIndex(max3);
    }
  }, [tabActiveIndex, levels]);
  const onItemSelect = (selectValue, depth) => {
    const next = value.slice(0, depth);
    if (selectValue !== void 0) {
      next[depth] = selectValue;
    }
    setValue2(next);
  };
  return withNativeProps(props, import_react37.default.createElement("div", {
    className: classPrefix21
  }, import_react37.default.createElement(tabs_default, {
    activeKey: tabActiveIndex.toString(),
    onChange: (key) => {
      var _a;
      const activeIndex = parseInt(key);
      setTabActiveIndex(activeIndex);
      (_a = props.onTabsChange) === null || _a === void 0 ? void 0 : _a.call(props, activeIndex);
    },
    stretch: false,
    className: `${classPrefix21}-tabs`
  }, levels.map((level, index) => {
    const selected = level.selected;
    return import_react37.default.createElement(tabs_default.Tab, {
      key: index.toString(),
      title: import_react37.default.createElement("div", {
        className: `${classPrefix21}-header-title`
      }, selected ? selected.label : props.placeholder),
      forceRender: true
    }, import_react37.default.createElement("div", {
      className: `${classPrefix21}-content`
    }, level.options === optionSkeleton ? import_react37.default.createElement("div", {
      className: `${classPrefix21}-skeleton`
    }, import_react37.default.createElement(skeleton_default, {
      className: `${classPrefix21}-skeleton-line-1`,
      animated: true
    }), import_react37.default.createElement(skeleton_default, {
      className: `${classPrefix21}-skeleton-line-2`,
      animated: true
    }), import_react37.default.createElement(skeleton_default, {
      className: `${classPrefix21}-skeleton-line-3`,
      animated: true
    }), import_react37.default.createElement(skeleton_default, {
      className: `${classPrefix21}-skeleton-line-4`,
      animated: true
    })) : import_react37.default.createElement(check_list_default, {
      value: [value[index]],
      onChange: (selectValue) => onItemSelect(selectValue[0], index)
    }, level.options.map((option) => {
      const active = value[index] === option.value;
      return import_react37.default.createElement(check_list_default.Item, {
        value: option.value,
        key: option.value,
        disabled: option.disabled,
        className: (0, import_classnames16.default)(`${classPrefix21}-item`, {
          [`${classPrefix21}-item-active`]: active
        })
      }, option.label);
    }))));
  }))));
};

// node_modules/antd-mobile/es/components/cascader-view/index.js
var cascader_view_default = attachPropertiesToComponent(CascaderView, {
  optionSkeleton
});

// node_modules/antd-mobile/es/components/cascader/cascader.js
var classPrefix22 = `adm-cascader`;
var defaultProps12 = {
  defaultValue: []
};
var Cascader = (p) => {
  var _a;
  const {
    locale
  } = useConfig();
  const props = mergeProps(defaultProps12, {
    confirmText: locale.common.confirm,
    cancelText: locale.common.cancel,
    placeholder: locale.Cascader.placeholder
  }, p);
  const [value, setValue2] = usePropsValue(Object.assign(Object.assign({}, props), {
    onChange: (val) => {
      var _a2;
      (_a2 = props.onConfirm) === null || _a2 === void 0 ? void 0 : _a2.call(props, val, generateValueExtend(val));
    }
  }));
  const generateValueExtend = useCascaderValueExtend(props.options);
  const [innerValue, setInnerValue] = (0, import_react38.useState)(value);
  (0, import_react38.useEffect)(() => {
    if (!props.visible) {
      setInnerValue(value);
    }
  }, [props.visible]);
  (0, import_react38.useEffect)(() => {
    if (!props.visible) {
      setInnerValue(value);
    }
  }, [value]);
  const cascaderElement = withNativeProps(props, import_react38.default.createElement("div", {
    className: classPrefix22
  }, import_react38.default.createElement("div", {
    className: `${classPrefix22}-header`
  }, import_react38.default.createElement("a", {
    className: `${classPrefix22}-header-button`,
    onClick: () => {
      var _a2, _b;
      (_a2 = props.onCancel) === null || _a2 === void 0 ? void 0 : _a2.call(props);
      (_b = props.onClose) === null || _b === void 0 ? void 0 : _b.call(props);
    }
  }, props.cancelText), import_react38.default.createElement("div", {
    className: `${classPrefix22}-header-title`
  }, props.title), import_react38.default.createElement("a", {
    className: `${classPrefix22}-header-button`,
    onClick: () => {
      var _a2;
      setValue2(innerValue);
      (_a2 = props.onClose) === null || _a2 === void 0 ? void 0 : _a2.call(props);
    }
  }, props.confirmText)), import_react38.default.createElement("div", {
    className: `${classPrefix22}-body`
  }, import_react38.default.createElement(cascader_view_default, Object.assign({}, props, {
    value: innerValue,
    onChange: (val, ext) => {
      var _a2;
      setInnerValue(val);
      if (props.visible) {
        (_a2 = props.onSelect) === null || _a2 === void 0 ? void 0 : _a2.call(props, val, ext);
      }
    }
  })))));
  const popupElement = import_react38.default.createElement(popup_default, {
    visible: props.visible,
    position: "bottom",
    onMaskClick: () => {
      var _a2, _b;
      (_a2 = props.onCancel) === null || _a2 === void 0 ? void 0 : _a2.call(props);
      (_b = props.onClose) === null || _b === void 0 ? void 0 : _b.call(props);
    },
    getContainer: props.getContainer,
    destroyOnClose: true,
    afterShow: props.afterShow,
    afterClose: props.afterClose,
    onClick: props.onClick,
    stopPropagation: props.stopPropagation
  }, cascaderElement);
  return import_react38.default.createElement(import_react38.default.Fragment, null, popupElement, (_a = props.children) === null || _a === void 0 ? void 0 : _a.call(props, generateValueExtend(value).items));
};

// node_modules/antd-mobile/es/components/cascader/prompt.js
var import_react39 = __toESM(require_react());
function prompt3(props) {
  return new Promise((resolve) => {
    const Wrapper2 = () => {
      const [visible, setVisible] = (0, import_react39.useState)(false);
      (0, import_react39.useEffect)(() => {
        setVisible(true);
      }, []);
      return import_react39.default.createElement(Cascader, Object.assign({}, props, {
        visible,
        onConfirm: (val, extend) => {
          var _a;
          (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, val, extend);
          resolve(val);
        },
        onClose: () => {
          var _a;
          (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
          setVisible(false);
          resolve(null);
        },
        afterClose: () => {
          var _a;
          (_a = props.afterClose) === null || _a === void 0 ? void 0 : _a.call(props);
          unmount2();
        }
      }));
    };
    const unmount2 = renderToBody(import_react39.default.createElement(Wrapper2, null));
  });
}

// node_modules/antd-mobile/es/components/cascader/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/cascader/cascader.css";
var cascader_default = attachPropertiesToComponent(Cascader, {
  prompt: prompt3,
  optionSkeleton
});

// node_modules/antd-mobile/es/components/center-popup/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/center-popup/center-popup.css";

// node_modules/antd-mobile/es/components/center-popup/center-popup.js
var import_react41 = __toESM(require_react());

// node_modules/antd-mobile/es/utils/use-inner-visible.js
var import_react40 = __toESM(require_react());
function useInnerVisible(outerVisible) {
  const [innerVisible, setInnerVisible] = (0, import_react40.useState)(outerVisible);
  useIsomorphicLayoutEffect_default(() => {
    setInnerVisible(outerVisible);
  }, [outerVisible]);
  return innerVisible;
}

// node_modules/antd-mobile/es/components/center-popup/center-popup.js
var import_classnames17 = __toESM(require_classnames());
var defaultProps13 = {
  destroyOnClose: false,
  disableBodyScroll: true,
  forceRender: false,
  getContainer: null,
  mask: true,
  showCloseButton: false,
  stopPropagation: ["click"],
  visible: false
};
var CenterPopup = (p) => {
  const props = mergeProps(defaultProps13, p);
  const unmountedRef = useUnmountedRef_default();
  const style = useSpring({
    scale: props.visible ? 1 : 0.8,
    opacity: props.visible ? 1 : 0,
    config: {
      mass: 1.2,
      tension: 200,
      friction: 25,
      clamp: true
    },
    onRest: () => {
      var _a, _b;
      if (unmountedRef.current)
        return;
      setActive(props.visible);
      if (props.visible) {
        (_a = props.afterShow) === null || _a === void 0 ? void 0 : _a.call(props);
      } else {
        (_b = props.afterClose) === null || _b === void 0 ? void 0 : _b.call(props);
      }
    }
  });
  const [active, setActive] = (0, import_react41.useState)(props.visible);
  useIsomorphicLayoutEffect_default(() => {
    if (props.visible) {
      setActive(true);
    }
  }, [props.visible]);
  const ref = (0, import_react41.useRef)(null);
  useLockScroll(ref, props.disableBodyScroll && active);
  const maskVisible = useInnerVisible(active && props.visible);
  const body = import_react41.default.createElement("div", {
    className: (0, import_classnames17.default)("adm-center-popup-body", props.bodyClassName),
    style: props.bodyStyle
  }, props.children);
  const node = withStopPropagation(props.stopPropagation, withNativeProps(props, import_react41.default.createElement("div", {
    className: "adm-center-popup",
    style: {
      display: active ? void 0 : "none",
      pointerEvents: active ? void 0 : "none"
    }
  }, props.mask && import_react41.default.createElement(mask_default, {
    visible: maskVisible,
    forceRender: props.forceRender,
    destroyOnClose: props.destroyOnClose,
    onMaskClick: props.onMaskClick,
    style: props.maskStyle,
    className: (0, import_classnames17.default)("adm-center-popup-mask", props.maskClassName),
    disableBodyScroll: false
  }), import_react41.default.createElement("div", {
    className: "adm-center-popup-wrap",
    role: props.role,
    "aria-label": props["aria-label"]
  }, import_react41.default.createElement(animated.div, {
    style,
    ref
  }, body)))));
  return import_react41.default.createElement(ShouldRender, {
    active,
    forceRender: props.forceRender,
    destroyOnClose: props.destroyOnClose
  }, renderToContainer(props.getContainer, node));
};

// node_modules/antd-mobile/es/components/center-popup/index.js
var center_popup_default = CenterPopup;

// node_modules/antd-mobile/es/components/checkbox/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/checkbox/checkbox.css";

// node_modules/antd-mobile/es/components/checkbox/group.js
var import_react43 = __toESM(require_react());

// node_modules/antd-mobile/es/components/checkbox/group-context.js
var import_react42 = __toESM(require_react());
var CheckboxGroupContext = (0, import_react42.createContext)(null);

// node_modules/antd-mobile/es/components/checkbox/group.js
var defaultProps14 = {
  disabled: false,
  defaultValue: []
};
var Group = (p) => {
  const props = mergeProps(defaultProps14, p);
  const [value, setValue2] = usePropsValue(props);
  return import_react43.default.createElement(CheckboxGroupContext.Provider, {
    value: {
      value,
      disabled: props.disabled,
      check: (v) => {
        setValue2([...value, v]);
      },
      uncheck: (v) => {
        setValue2(value.filter((item) => item !== v));
      }
    }
  }, props.children);
};

// node_modules/antd-mobile/es/components/checkbox/checkbox.js
var import_react47 = __toESM(require_react());
var import_classnames18 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/checkbox/check-icon.js
var import_react44 = __toESM(require_react());
var CheckIcon = (0, import_react44.memo)((props) => {
  return withNativeProps(props, import_react44.default.createElement("svg", {
    viewBox: "0 0 40 40"
  }, import_react44.default.createElement("path", {
    d: "M31.5541766,15 L28.0892433,15 L28.0892434,15 C27.971052,15 27.8576674,15.044522 27.7740471,15.1239792 L18.2724722,24.1625319 L13.2248725,19.3630279 L13.2248725,19.3630279 C13.1417074,19.2834412 13.0287551,19.2384807 12.9107898,19.2380079 L9.44474455,19.2380079 L9.44474454,19.2380079 C9.19869815,19.2384085 8.99957935,19.4284738 9,19.66253 C9,19.7747587 9.04719253,19.8823283 9.13066188,19.9616418 L17.0907466,27.5338228 C17.4170809,27.8442545 17.8447695,28 18.2713393,28 L18.2980697,28 C18.7168464,27.993643 19.133396,27.8378975 19.4530492,27.5338228 L31.8693384,15.7236361 L31.8693384,15.7236361 C32.0434167,15.5582251 32.0435739,15.2898919 31.8696892,15.1242941 C31.7860402,15.0446329 31.6725052,15 31.5541421,15 L31.5541766,15 Z",
    fill: "currentColor"
  })));
});

// node_modules/antd-mobile/es/components/checkbox/indeterminate-icon.js
var import_react45 = __toESM(require_react());
var IndeterminateIcon = (0, import_react45.memo)((props) => {
  return withNativeProps(props, import_react45.default.createElement("svg", {
    viewBox: "0 0 40 40"
  }, import_react45.default.createElement("path", {
    d: "M20,9 C26.0752953,9 31,13.9247047 31,20 C31,26.0752953 26.0752953,31 20,31 C13.9247047,31 9,26.0752953 9,20 C9,13.9247047 13.9247047,9 20,9 Z",
    fill: "currentColor"
  })));
});

// node_modules/antd-mobile/es/components/checkbox/native-input.js
var import_react46 = __toESM(require_react());
var NativeInput = (props) => {
  const inputRef = (0, import_react46.useRef)(null);
  const handleClick = useMemoizedFn_default((e) => {
    e.stopPropagation();
    e.stopImmediatePropagation();
    const latestChecked = e.target.checked;
    if (latestChecked === props.checked)
      return;
    props.onChange(latestChecked);
  });
  (0, import_react46.useEffect)(() => {
    if (props.disabled)
      return;
    if (!inputRef.current)
      return;
    const input = inputRef.current;
    input.addEventListener("click", handleClick);
    return () => {
      input.removeEventListener("click", handleClick);
    };
  }, [props.disabled, props.onChange]);
  return import_react46.default.createElement("input", {
    ref: inputRef,
    type: props.type,
    checked: props.checked,
    onChange: () => {
    },
    disabled: props.disabled,
    id: props.id
  });
};

// node_modules/antd-mobile/es/components/checkbox/checkbox.js
var classPrefix23 = `adm-checkbox`;
var defaultProps15 = {
  defaultChecked: false,
  indeterminate: false
};
var Checkbox = (0, import_react47.forwardRef)((p, ref) => {
  const groupContext = (0, import_react47.useContext)(CheckboxGroupContext);
  const props = mergeProps(defaultProps15, p);
  let [checked, setChecked] = usePropsValue({
    value: props.checked,
    defaultValue: props.defaultChecked,
    onChange: props.onChange
  });
  let disabled = props.disabled;
  const {
    value
  } = props;
  if (groupContext && value !== void 0) {
    if (isDev) {
      if (p.checked !== void 0) {
        devWarning("Checkbox", "When used within `Checkbox.Group`, the `checked` prop of `Checkbox` will not work.");
      }
      if (p.defaultChecked !== void 0) {
        devWarning("Checkbox", "When used within `Checkbox.Group`, the `defaultChecked` prop of `Checkbox` will not work.");
      }
    }
    checked = groupContext.value.includes(value);
    setChecked = (checked2) => {
      var _a;
      if (checked2) {
        groupContext.check(value);
      } else {
        groupContext.uncheck(value);
      }
      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, checked2);
    };
    disabled = disabled || groupContext.disabled;
  }
  (0, import_react47.useImperativeHandle)(ref, () => ({
    check: () => {
      setChecked(true);
    },
    uncheck: () => {
      setChecked(false);
    },
    toggle: () => {
      setChecked(!checked);
    }
  }));
  const renderIcon = () => {
    if (props.icon) {
      return import_react47.default.createElement("div", {
        className: `${classPrefix23}-custom-icon`
      }, props.icon(checked, props.indeterminate));
    }
    return import_react47.default.createElement("div", {
      className: `${classPrefix23}-icon`
    }, props.indeterminate ? import_react47.default.createElement(IndeterminateIcon, null) : checked && import_react47.default.createElement(CheckIcon, null));
  };
  return withNativeProps(props, import_react47.default.createElement("label", {
    className: (0, import_classnames18.default)(classPrefix23, {
      [`${classPrefix23}-checked`]: checked && !props.indeterminate,
      [`${classPrefix23}-indeterminate`]: props.indeterminate,
      [`${classPrefix23}-disabled`]: disabled,
      [`${classPrefix23}-block`]: props.block
    })
  }, import_react47.default.createElement(NativeInput, {
    type: "checkbox",
    checked,
    onChange: setChecked,
    disabled,
    id: props.id
  }), renderIcon(), props.children && import_react47.default.createElement("div", {
    className: `${classPrefix23}-content`
  }, props.children)));
});

// node_modules/antd-mobile/es/components/checkbox/index.js
var checkbox_default = attachPropertiesToComponent(Checkbox, {
  Group
});

// node_modules/antd-mobile/es/components/collapse/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/collapse/collapse.css";

// node_modules/antd-mobile/es/components/collapse/collapse.js
var import_react48 = __toESM(require_react());
var import_classnames19 = __toESM(require_classnames());
var classPrefix24 = `adm-collapse`;
var CollapsePanel = () => {
  return null;
};
var CollapsePanelContent = (props) => {
  const {
    visible
  } = props;
  const innerRef = (0, import_react48.useRef)(null);
  const shouldRender = useShouldRender(visible, props.forceRender, props.destroyOnClose);
  const [{
    height
  }, api] = useSpring(() => ({
    from: {
      height: 0
    },
    config: {
      precision: 0.01,
      mass: 1,
      tension: 200,
      friction: 25,
      clamp: true
    }
  }));
  useMount_default(() => {
    if (!visible)
      return;
    const inner = innerRef.current;
    if (!inner)
      return;
    api.start({
      height: inner.offsetHeight,
      immediate: true
    });
  });
  useIsomorphicUpdateLayoutEffect(() => {
    const inner = innerRef.current;
    if (!inner)
      return;
    if (visible) {
      api.start({
        height: inner.offsetHeight
      });
    } else {
      api.start({
        height: inner.offsetHeight,
        immediate: true
      });
      api.start({
        height: 0
      });
    }
  }, [visible]);
  return import_react48.default.createElement(animated.div, {
    className: `${classPrefix24}-panel-content`,
    style: {
      height: height.to((v) => {
        if (height.idle && visible) {
          return "auto";
        } else {
          return v;
        }
      })
    }
  }, import_react48.default.createElement("div", {
    className: `${classPrefix24}-panel-content-inner`,
    ref: innerRef
  }, import_react48.default.createElement(list_default.Item, null, shouldRender && props.children)));
};
var Collapse = (props) => {
  var _a;
  const panels = [];
  traverseReactNode(props.children, (child) => {
    if (!import_react48.default.isValidElement(child))
      return;
    const key = child.key;
    if (typeof key !== "string")
      return;
    panels.push(child);
  });
  const [activeKey, setActiveKey] = usePropsValue(props.accordion ? {
    value: props.activeKey === void 0 ? void 0 : props.activeKey === null ? [] : [props.activeKey],
    defaultValue: props.defaultActiveKey === void 0 || props.defaultActiveKey === null ? [] : [props.defaultActiveKey],
    onChange: (v) => {
      var _a2, _b;
      (_a2 = props.onChange) === null || _a2 === void 0 ? void 0 : _a2.call(props, (_b = v[0]) !== null && _b !== void 0 ? _b : null);
    }
  } : {
    value: props.activeKey,
    defaultValue: (_a = props.defaultActiveKey) !== null && _a !== void 0 ? _a : [],
    onChange: props.onChange
  });
  const activeKeyList = activeKey === null ? [] : Array.isArray(activeKey) ? activeKey : [activeKey];
  return withNativeProps(props, import_react48.default.createElement("div", {
    className: classPrefix24
  }, import_react48.default.createElement(list_default, null, panels.map((panel) => {
    const key = panel.key;
    const active = activeKeyList.includes(key);
    function handleClick(event) {
      var _a2, _b;
      if (props.accordion) {
        if (active) {
          setActiveKey([]);
        } else {
          setActiveKey([key]);
        }
      } else {
        if (active) {
          setActiveKey(activeKeyList.filter((v) => v !== key));
        } else {
          setActiveKey([...activeKeyList, key]);
        }
      }
      (_b = (_a2 = panel.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a2, event);
    }
    const renderArrow = () => {
      let arrow2 = import_react48.default.createElement(DownOutline_default, null);
      if (props.arrow !== void 0) {
        arrow2 = props.arrow;
      }
      if (panel.props.arrow !== void 0) {
        arrow2 = panel.props.arrow;
      }
      return typeof arrow2 === "function" ? arrow2(active) : import_react48.default.createElement("div", {
        className: (0, import_classnames19.default)(`${classPrefix24}-arrow`, {
          [`${classPrefix24}-arrow-active`]: active
        })
      }, arrow2);
    };
    return import_react48.default.createElement(import_react48.default.Fragment, {
      key
    }, withNativeProps(panel.props, import_react48.default.createElement(list_default.Item, {
      className: `${classPrefix24}-panel-header`,
      onClick: handleClick,
      disabled: panel.props.disabled,
      arrow: renderArrow()
    }, panel.props.title)), import_react48.default.createElement(CollapsePanelContent, {
      visible: active,
      forceRender: !!panel.props.forceRender,
      destroyOnClose: !!panel.props.destroyOnClose
    }, panel.props.children));
  }))));
};

// node_modules/antd-mobile/es/components/collapse/index.js
var collapse_default = attachPropertiesToComponent(Collapse, {
  Panel: CollapsePanel
});

// node_modules/antd-mobile/es/components/date-picker/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/date-picker/date-picker.css";

// node_modules/antd-mobile/es/components/date-picker/date-picker.js
var import_react49 = __toESM(require_react());

// node_modules/antd-mobile/es/components/date-picker/date-picker-date-utils.js
var import_dayjs2 = __toESM(require_dayjs_min());
var import_isoWeek2 = __toESM(require_isoWeek());
var import_isoWeeksInYear = __toESM(require_isoWeeksInYear());
var import_isLeapYear = __toESM(require_isLeapYear());
import_dayjs2.default.extend(import_isoWeek2.default);
import_dayjs2.default.extend(import_isoWeeksInYear.default);
import_dayjs2.default.extend(import_isLeapYear.default);
var precisionRankRecord = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};
function defaultRenderLabel2(type4, data) {
  switch (type4) {
    case "minute":
    case "second":
    case "hour":
      return ("0" + data.toString()).slice(-2);
    default:
      return data.toString();
  }
}
function generateDatePickerColumns(selected, min3, max3, precision, renderLabel, filter) {
  const ret = [];
  const minYear = min3.getFullYear();
  const minMonth = min3.getMonth() + 1;
  const minDay = min3.getDate();
  const minHour = min3.getHours();
  const minMinute = min3.getMinutes();
  const minSecond = min3.getSeconds();
  const maxYear = max3.getFullYear();
  const maxMonth = max3.getMonth() + 1;
  const maxDay = max3.getDate();
  const maxHour = max3.getHours();
  const maxMinute = max3.getMinutes();
  const maxSecond = max3.getSeconds();
  const rank = precisionRankRecord[precision];
  const selectedYear = parseInt(selected[0]);
  const firstDayInSelectedMonth = (0, import_dayjs2.default)(convertStringArrayToDate([selected[0], selected[1], "1"]));
  const selectedMonth = parseInt(selected[1]);
  const selectedDay = parseInt(selected[2]);
  const selectedHour = parseInt(selected[3]);
  const selectedMinute = parseInt(selected[4]);
  const isInMinYear = selectedYear === minYear;
  const isInMaxYear = selectedYear === maxYear;
  const isInMinMonth = isInMinYear && selectedMonth === minMonth;
  const isInMaxMonth = isInMaxYear && selectedMonth === maxMonth;
  const isInMinDay = isInMinMonth && selectedDay === minDay;
  const isInMaxDay = isInMaxMonth && selectedDay === maxDay;
  const isInMinHour = isInMinDay && selectedHour === minHour;
  const isInMaxHour = isInMaxDay && selectedHour === maxHour;
  const isInMinMinute = isInMinHour && selectedMinute === minMinute;
  const isInMaxMinute = isInMaxHour && selectedMinute === maxMinute;
  const generateColumn = (from, to2, precision2) => {
    let column = [];
    for (let i = from; i <= to2; i++) {
      column.push(i);
    }
    const prefix = selected.slice(0, precisionRankRecord[precision2]);
    const currentFilter = filter === null || filter === void 0 ? void 0 : filter[precision2];
    if (currentFilter && typeof currentFilter === "function") {
      column = column.filter((i) => currentFilter(i, {
        get date() {
          const stringArray = [...prefix, i.toString()];
          return convertStringArrayToDate(stringArray);
        }
      }));
    }
    return column;
  };
  if (rank >= precisionRankRecord.year) {
    const lower = minYear;
    const upper = maxYear;
    const years = generateColumn(lower, upper, "year");
    ret.push(years.map((v) => {
      return {
        label: renderLabel("year", v),
        value: v.toString()
      };
    }));
  }
  if (rank >= precisionRankRecord.month) {
    const lower = isInMinYear ? minMonth : 1;
    const upper = isInMaxYear ? maxMonth : 12;
    const months = generateColumn(lower, upper, "month");
    ret.push(months.map((v) => {
      return {
        label: renderLabel("month", v),
        value: v.toString()
      };
    }));
  }
  if (rank >= precisionRankRecord.day) {
    const lower = isInMinMonth ? minDay : 1;
    const upper = isInMaxMonth ? maxDay : firstDayInSelectedMonth.daysInMonth();
    const days = generateColumn(lower, upper, "day");
    ret.push(days.map((v) => {
      return {
        label: renderLabel("day", v),
        value: v.toString()
      };
    }));
  }
  if (rank >= precisionRankRecord.hour) {
    const lower = isInMinDay ? minHour : 0;
    const upper = isInMaxDay ? maxHour : 23;
    const hours = generateColumn(lower, upper, "hour");
    ret.push(hours.map((v) => {
      return {
        label: renderLabel("hour", v),
        value: v.toString()
      };
    }));
  }
  if (rank >= precisionRankRecord.minute) {
    const lower = isInMinHour ? minMinute : 0;
    const upper = isInMaxHour ? maxMinute : 59;
    const minutes = generateColumn(lower, upper, "minute");
    ret.push(minutes.map((v) => {
      return {
        label: renderLabel("minute", v),
        value: v.toString()
      };
    }));
  }
  if (rank >= precisionRankRecord.second) {
    const lower = isInMinMinute ? minSecond : 0;
    const upper = isInMaxMinute ? maxSecond : 59;
    const seconds = generateColumn(lower, upper, "second");
    ret.push(seconds.map((v) => {
      return {
        label: renderLabel("second", v),
        value: v.toString()
      };
    }));
  }
  return ret;
}
function convertDateToStringArray(date4) {
  if (!date4)
    return [];
  return [date4.getFullYear().toString(), (date4.getMonth() + 1).toString(), date4.getDate().toString(), date4.getHours().toString(), date4.getMinutes().toString(), date4.getSeconds().toString()];
}
function convertStringArrayToDate(value) {
  var _a, _b, _c, _d, _e, _f;
  const yearString = (_a = value[0]) !== null && _a !== void 0 ? _a : "1900";
  const monthString = (_b = value[1]) !== null && _b !== void 0 ? _b : "1";
  const dateString = (_c = value[2]) !== null && _c !== void 0 ? _c : "1";
  const hourString = (_d = value[3]) !== null && _d !== void 0 ? _d : "0";
  const minuteString = (_e = value[4]) !== null && _e !== void 0 ? _e : "0";
  const secondString = (_f = value[5]) !== null && _f !== void 0 ? _f : "0";
  return new Date(parseInt(yearString), parseInt(monthString) - 1, parseInt(dateString), parseInt(hourString), parseInt(minuteString), parseInt(secondString));
}

// node_modules/antd-mobile/es/components/date-picker/date-picker-week-utils.js
var import_dayjs3 = __toESM(require_dayjs_min());
var import_isoWeek3 = __toESM(require_isoWeek());
var import_isoWeeksInYear2 = __toESM(require_isoWeeksInYear());
var import_isLeapYear2 = __toESM(require_isLeapYear());
import_dayjs3.default.extend(import_isoWeek3.default);
import_dayjs3.default.extend(import_isoWeeksInYear2.default);
import_dayjs3.default.extend(import_isLeapYear2.default);
var precisionRankRecord2 = {
  year: 0,
  week: 1,
  "week-day": 2
};
function defaultRenderLabel3(type4, data) {
  return data.toString();
}
function generateDatePickerColumns2(selected, min3, max3, precision, renderLabel, filter) {
  const ret = [];
  const minYear = min3.getFullYear();
  const maxYear = max3.getFullYear();
  const rank = precisionRankRecord2[precision];
  const selectedYear = parseInt(selected[0]);
  const isInMinYear = selectedYear === minYear;
  const isInMaxYear = selectedYear === maxYear;
  const minDay = (0, import_dayjs3.default)(min3);
  const maxDay = (0, import_dayjs3.default)(max3);
  const minWeek = minDay.isoWeek();
  const maxWeek = maxDay.isoWeek();
  const minWeekday = minDay.isoWeekday();
  const maxWeekday = maxDay.isoWeekday();
  const selectedWeek = parseInt(selected[1]);
  const isInMinWeek = isInMinYear && selectedWeek === minWeek;
  const isInMaxWeek = isInMaxYear && selectedWeek === maxWeek;
  const selectedYearWeeks = (0, import_dayjs3.default)(`${selectedYear}-01-01`).isoWeeksInYear();
  const generateColumn = (from, to2, precision2) => {
    let column = [];
    for (let i = from; i <= to2; i++) {
      column.push(i);
    }
    const prefix = selected.slice(0, precisionRankRecord2[precision2]);
    const currentFilter = filter === null || filter === void 0 ? void 0 : filter[precision2];
    if (currentFilter && typeof currentFilter === "function") {
      column = column.filter((i) => currentFilter(i, {
        get date() {
          const stringArray = [...prefix, i.toString()];
          return convertStringArrayToDate2(stringArray);
        }
      }));
    }
    return column;
  };
  if (rank >= precisionRankRecord2.year) {
    const lower = minYear;
    const upper = maxYear;
    const years = generateColumn(lower, upper, "year");
    ret.push(years.map((v) => {
      return {
        label: renderLabel("year", v),
        value: v.toString()
      };
    }));
  }
  if (rank >= precisionRankRecord2.week) {
    const lower = isInMinYear ? minWeek : 1;
    const upper = isInMaxYear ? maxWeek : selectedYearWeeks;
    const weeks = generateColumn(lower, upper, "week");
    ret.push(weeks.map((v) => {
      return {
        label: renderLabel("week", v),
        value: v.toString()
      };
    }));
  }
  if (rank >= precisionRankRecord2["week-day"]) {
    const lower = isInMinWeek ? minWeekday : 1;
    const upper = isInMaxWeek ? maxWeekday : 7;
    const weeks = generateColumn(lower, upper, "week-day");
    ret.push(weeks.map((v) => {
      return {
        label: renderLabel("week-day", v),
        value: v.toString()
      };
    }));
  }
  return ret;
}
function convertDateToStringArray2(date4) {
  if (!date4)
    return [];
  const day = (0, import_dayjs3.default)(date4);
  return [day.isoWeekYear().toString(), day.isoWeek().toString(), day.isoWeekday().toString()];
}
function convertStringArrayToDate2(value) {
  var _a, _b, _c;
  const yearString = (_a = value[0]) !== null && _a !== void 0 ? _a : "1900";
  const weekString = (_b = value[1]) !== null && _b !== void 0 ? _b : "1";
  const weekdayString = (_c = value[2]) !== null && _c !== void 0 ? _c : "1";
  const day = (0, import_dayjs3.default)().year(parseInt(yearString)).isoWeek(parseInt(weekString)).isoWeekday(parseInt(weekdayString)).hour(0).minute(0).second(0);
  return day.toDate();
}

// node_modules/antd-mobile/es/components/date-picker/date-picker-utils.js
var precisionLengthRecord = {
  year: 1,
  month: 2,
  day: 3,
  hour: 4,
  minute: 5,
  second: 6
};
var convertDateToStringArray3 = (date4, precision) => {
  if (precision.includes("week")) {
    return convertDateToStringArray2(date4);
  } else {
    const datePrecision = precision;
    const stringArray = convertDateToStringArray(date4);
    return stringArray.slice(0, precisionLengthRecord[datePrecision]);
  }
};
var convertStringArrayToDate3 = (value, precision) => {
  if (precision.includes("week")) {
    return convertStringArrayToDate2(value);
  } else {
    return convertStringArrayToDate(value);
  }
};
var generateDatePickerColumns3 = (selected, min3, max3, precision, renderLabel, filter) => {
  if (precision.startsWith("week")) {
    return generateDatePickerColumns2(selected, min3, max3, precision, renderLabel, filter);
  } else {
    return generateDatePickerColumns(selected, min3, max3, precision, renderLabel, filter);
  }
};
var defaultRenderLabel4 = (precision, data) => {
  if (precision.includes("week")) {
    return defaultRenderLabel3(precision, data);
  } else {
    return defaultRenderLabel2(precision, data);
  }
};

// node_modules/antd-mobile/es/components/date-picker/date-picker.js
var thisYear = new Date().getFullYear();
var defaultProps16 = {
  min: new Date(new Date().setFullYear(thisYear - 10)),
  max: new Date(new Date().setFullYear(thisYear + 10)),
  precision: "day",
  renderLabel: defaultRenderLabel4,
  defaultValue: null
};
var DatePicker = (0, import_react49.forwardRef)((p, ref) => {
  const props = mergeProps(defaultProps16, p);
  const [value, setValue2] = usePropsValue({
    value: props.value,
    defaultValue: props.defaultValue,
    onChange: (v) => {
      var _a;
      if (v === null)
        return;
      (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, v);
    }
  });
  const now = (0, import_react49.useMemo)(() => new Date(), []);
  const pickerValue = (0, import_react49.useMemo)(() => {
    let date4 = value !== null && value !== void 0 ? value : now;
    date4 = new Date(bound(date4.getTime(), props.min.getTime(), props.max.getTime()));
    return convertDateToStringArray3(date4, props.precision);
  }, [value, props.precision, props.min, props.max]);
  const onConfirm = (0, import_react49.useCallback)((val) => {
    setValue2(convertStringArrayToDate3(val, props.precision));
  }, [setValue2, props.precision]);
  const onSelect = useMemoizedFn_default((val) => {
    var _a;
    const date4 = convertStringArrayToDate3(val, props.precision);
    (_a = props.onSelect) === null || _a === void 0 ? void 0 : _a.call(props, date4);
  });
  const columns = (0, import_react49.useCallback)((selected) => generateDatePickerColumns3(selected, props.min, props.max, props.precision, props.renderLabel, props.filter), [props.min, props.max, props.precision, props.renderLabel]);
  return withNativeProps(props, import_react49.default.createElement(picker_default, {
    ref,
    columns,
    value: pickerValue,
    onCancel: props.onCancel,
    onClose: props.onClose,
    closeOnMaskClick: props.closeOnMaskClick,
    visible: props.visible,
    confirmText: props.confirmText,
    cancelText: props.cancelText,
    onConfirm,
    onSelect,
    getContainer: props.getContainer,
    afterShow: props.afterShow,
    afterClose: props.afterClose,
    onClick: props.onClick,
    title: props.title,
    stopPropagation: props.stopPropagation,
    mouseWheel: props.mouseWheel
  }, (_, actions) => {
    var _a;
    return (_a = props.children) === null || _a === void 0 ? void 0 : _a.call(props, value, actions);
  }));
});

// node_modules/antd-mobile/es/components/date-picker/prompt.js
var import_react50 = __toESM(require_react());
function prompt4(props) {
  return new Promise((resolve) => {
    const Wrapper2 = () => {
      const [visible, setVisible] = (0, import_react50.useState)(false);
      (0, import_react50.useEffect)(() => {
        setVisible(true);
      }, []);
      return import_react50.default.createElement(DatePicker, Object.assign({}, props, {
        visible,
        onConfirm: (val) => {
          var _a;
          (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props, val);
          resolve(val);
        },
        onClose: () => {
          var _a;
          (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
          setVisible(false);
          resolve(null);
        },
        afterClose: () => {
          var _a;
          (_a = props.afterClose) === null || _a === void 0 ? void 0 : _a.call(props);
          unmount2();
        }
      }));
    };
    const unmount2 = renderToBody(import_react50.default.createElement(Wrapper2, null));
  });
}

// node_modules/antd-mobile/es/components/date-picker/index.js
var date_picker_default = attachPropertiesToComponent(DatePicker, {
  prompt: prompt4
});

// node_modules/antd-mobile/es/components/date-picker-view/date-picker-view.js
var import_react51 = __toESM(require_react());
var thisYear2 = new Date().getFullYear();
var defaultProps17 = {
  min: new Date(new Date().setFullYear(thisYear2 - 10)),
  max: new Date(new Date().setFullYear(thisYear2 + 10)),
  precision: "day",
  renderLabel: defaultRenderLabel4
};
var DatePickerView = (p) => {
  var _a;
  const props = mergeProps(defaultProps17, p);
  const [value, setValue2] = usePropsValue({
    value: props.value,
    defaultValue: (_a = props.defaultValue) !== null && _a !== void 0 ? _a : null
  });
  const pickerValue = (0, import_react51.useMemo)(() => convertDateToStringArray3(value, props.precision), [value, props.precision]);
  const onChange = (0, import_react51.useCallback)((val) => {
    var _a2;
    const date4 = convertStringArrayToDate3(val, props.precision);
    if (date4) {
      setValue2(date4);
      (_a2 = props.onChange) === null || _a2 === void 0 ? void 0 : _a2.call(props, date4);
    }
  }, [props.onChange, props.precision]);
  return withNativeProps(props, import_react51.default.createElement(picker_view_default, {
    columns: (selected) => generateDatePickerColumns3(selected, props.min, props.max, props.precision, props.renderLabel, props.filter),
    value: pickerValue,
    mouseWheel: props.mouseWheel,
    onChange
  }));
};

// node_modules/antd-mobile/es/components/date-picker-view/index.js
var date_picker_view_default = DatePickerView;

// node_modules/antd-mobile/es/components/dialog/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/dialog/dialog.css";

// node_modules/antd-mobile/es/components/dialog/show.js
var import_react58 = __toESM(require_react());

// node_modules/antd-mobile/es/components/dialog/dialog.js
var import_react57 = __toESM(require_react());
var import_classnames21 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/dialog/dialog-action-button.js
var import_react52 = __toESM(require_react());
var import_classnames20 = __toESM(require_classnames());
var DialogActionButton = (props) => {
  const {
    action
  } = props;
  return withNativeProps(props.action, import_react52.default.createElement(button_default, {
    key: action.key,
    onClick: props.onAction,
    className: (0, import_classnames20.default)("adm-dialog-button", {
      "adm-dialog-button-bold": action.bold
    }),
    fill: "none",
    shape: "rectangular",
    block: true,
    color: action.danger ? "danger" : "primary",
    loading: "auto",
    disabled: action.disabled
  }, action.text));
};

// node_modules/antd-mobile/es/components/image/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/image/image.css";

// node_modules/antd-mobile/es/components/image/image.js
var import_react56 = __toESM(require_react());
var import_staged_components = __toESM(require_staged_components());

// node_modules/antd-mobile/es/utils/to-css-length.js
function toCSSLength(val) {
  return typeof val === "number" ? `${val}px` : val;
}

// node_modules/antd-mobile/es/components/image/lazy-detector.js
var import_react53 = __toESM(require_react());
var LazyDetector = (props) => {
  const ref = (0, import_react53.useRef)(null);
  const [inViewport] = useInViewport_default(ref);
  (0, import_react53.useEffect)(() => {
    if (inViewport) {
      props.onActive();
    }
  }, [inViewport]);
  return import_react53.default.createElement("div", {
    ref
  });
};

// node_modules/antd-mobile/es/components/image/image-icon.js
var import_react54 = __toESM(require_react());
var ImageIcon = () => import_react54.default.createElement("svg", {
  viewBox: "0 0 48 48",
  xmlns: "http://www.w3.org/2000/svg"
}, import_react54.default.createElement("path", {
  d: "M41.396 6.234c1.923 0 3.487 1.574 3.487 3.505v29.14c0 1.937-1.568 3.51-3.491 3.51H6.604c-1.923 0-3.487-1.573-3.487-3.51V9.745c0-1.936 1.564-3.51 3.487-3.51Zm0 2.847H6.604c-.355 0-.654.3-.654.658V34.9l5.989-8.707a2.373 2.373 0 0 1 1.801-1.005 2.405 2.405 0 0 1 1.933.752l4.182 4.525 7.58-11.005a2.374 2.374 0 0 1 1.96-1.01c.79 0 1.532.38 1.966 1.01L42.05 34.89V9.74a.664.664 0 0 0-.654-.658Zm-28.305 2.763a3.119 3.119 0 0 1 3.117 3.117 3.119 3.119 0 0 1-3.117 3.117 3.122 3.122 0 0 1-3.117-3.117 3.119 3.119 0 0 1 3.117-3.117Z",
  fill: "#DBDBDB",
  fillRule: "nonzero"
}));

// node_modules/antd-mobile/es/components/image/broken-image-icon.js
var import_react55 = __toESM(require_react());
var BrokenImageIcon = () => import_react55.default.createElement("svg", {
  viewBox: "0 0 48 48",
  xmlns: "http://www.w3.org/2000/svg"
}, import_react55.default.createElement("path", {
  d: "M19.233 6.233 17.42 9.08l-10.817.001a.665.665 0 0 0-.647.562l-.007.096V34.9l5.989-8.707a2.373 2.373 0 0 1 1.801-1.005 2.415 2.415 0 0 1 1.807.625l.126.127 4.182 4.525 2.267-3.292 5.461 7.841-4.065 7.375H6.604c-1.86 0-3.382-1.47-3.482-3.317l-.005-.192V9.744c0-1.872 1.461-3.405 3.296-3.505l.19-.005h12.63Zm22.163 0c1.86 0 3.382 1.472 3.482 3.314l.005.192v29.14a3.507 3.507 0 0 1-3.3 3.505l-.191.006H27.789l3.63-6.587.06-.119a1.87 1.87 0 0 0-.163-1.853l-6.928-9.949 3.047-4.422a2.374 2.374 0 0 1 1.96-1.01 2.4 2.4 0 0 1 1.86.87l.106.14L42.05 34.89V9.74a.664.664 0 0 0-.654-.658H21.855l1.812-2.848h17.73Zm-28.305 5.611c.794 0 1.52.298 2.07.788l-.843 1.325-.067.114a1.87 1.87 0 0 0 .11 1.959l.848 1.217c-.556.515-1.3.83-2.118.83a3.122 3.122 0 0 1-3.117-3.116 3.119 3.119 0 0 1 3.117-3.117Z",
  fill: "#DBDBDB",
  fillRule: "nonzero"
}));

// node_modules/antd-mobile/es/components/image/image.js
var classPrefix25 = `adm-image`;
var defaultProps18 = {
  fit: "fill",
  placeholder: import_react56.default.createElement("div", {
    className: `${classPrefix25}-tip`
  }, import_react56.default.createElement(ImageIcon, null)),
  fallback: import_react56.default.createElement("div", {
    className: `${classPrefix25}-tip`
  }, import_react56.default.createElement(BrokenImageIcon, null)),
  lazy: false,
  draggable: false
};
var Image2 = (0, import_staged_components.staged)((p) => {
  const props = mergeProps(defaultProps18, p);
  const [loaded, setLoaded] = (0, import_react56.useState)(false);
  const [failed, setFailed] = (0, import_react56.useState)(false);
  const ref = (0, import_react56.useRef)(null);
  let src = props.src;
  let srcSet = props.srcSet;
  const [initialized, setInitialized] = (0, import_react56.useState)(!props.lazy);
  src = initialized ? props.src : void 0;
  srcSet = initialized ? props.srcSet : void 0;
  useIsomorphicUpdateLayoutEffect(() => {
    setLoaded(false);
    setFailed(false);
  }, [src]);
  function renderInner() {
    if (failed) {
      return import_react56.default.createElement(import_react56.default.Fragment, null, props.fallback);
    }
    const img = import_react56.default.createElement("img", {
      className: `${classPrefix25}-img`,
      src,
      alt: props.alt,
      onClick: props.onClick,
      onLoad: (e) => {
        var _a;
        setLoaded(true);
        (_a = props.onLoad) === null || _a === void 0 ? void 0 : _a.call(props, e);
      },
      onError: (e) => {
        var _a;
        setFailed(true);
        (_a = props.onError) === null || _a === void 0 ? void 0 : _a.call(props, e);
      },
      style: {
        objectFit: props.fit,
        display: loaded ? "block" : "none"
      },
      crossOrigin: props.crossOrigin,
      decoding: props.decoding,
      loading: props.loading,
      referrerPolicy: props.referrerPolicy,
      sizes: props.sizes,
      srcSet,
      useMap: props.useMap,
      draggable: props.draggable
    });
    return import_react56.default.createElement(import_react56.default.Fragment, null, !loaded && props.placeholder, img);
  }
  const style = {};
  if (props.width) {
    style["--width"] = toCSSLength(props.width);
    style["width"] = toCSSLength(props.width);
  }
  if (props.height) {
    style["--height"] = toCSSLength(props.height);
    style["height"] = toCSSLength(props.height);
  }
  return withNativeProps(props, import_react56.default.createElement("div", {
    ref,
    className: classPrefix25,
    style
  }, props.lazy && !initialized && import_react56.default.createElement(LazyDetector, {
    onActive: () => {
      setInitialized(true);
    }
  }), renderInner()));
});

// node_modules/antd-mobile/es/components/image/index.js
var image_default = Image2;

// node_modules/antd-mobile/es/components/dialog/dialog.js
var defaultProps19 = {
  actions: [],
  closeOnAction: false,
  closeOnMaskClick: false
};
var Dialog = (p) => {
  const props = mergeProps(defaultProps19, p);
  const element = import_react57.default.createElement(import_react57.default.Fragment, null, !!props.image && import_react57.default.createElement("div", {
    className: cls("image-container")
  }, import_react57.default.createElement(image_default, {
    src: props.image,
    alt: "dialog header image",
    width: "100%"
  })), !!props.header && import_react57.default.createElement("div", {
    className: cls("header")
  }, import_react57.default.createElement(auto_center_default, null, props.header)), !!props.title && import_react57.default.createElement("div", {
    className: cls("title")
  }, props.title), import_react57.default.createElement("div", {
    className: (0, import_classnames21.default)(cls("content"), !props.content && cls("content-empty"))
  }, typeof props.content === "string" ? import_react57.default.createElement(auto_center_default, null, props.content) : props.content), import_react57.default.createElement("div", {
    className: cls("footer")
  }, props.actions.map((row, index) => {
    const actions = Array.isArray(row) ? row : [row];
    return import_react57.default.createElement("div", {
      className: cls("action-row"),
      key: index
    }, actions.map((action, index2) => import_react57.default.createElement(DialogActionButton, {
      key: action.key,
      action,
      onAction: () => __awaiter(void 0, void 0, void 0, function* () {
        var _a, _b, _c;
        yield Promise.all([(_a = action.onClick) === null || _a === void 0 ? void 0 : _a.call(action), (_b = props.onAction) === null || _b === void 0 ? void 0 : _b.call(props, action, index2)]);
        if (props.closeOnAction) {
          (_c = props.onClose) === null || _c === void 0 ? void 0 : _c.call(props);
        }
      })
    })));
  })));
  return import_react57.default.createElement(center_popup_default, {
    className: (0, import_classnames21.default)(cls(), props.className),
    style: props.style,
    afterClose: props.afterClose,
    afterShow: props.afterShow,
    onMaskClick: props.closeOnMaskClick ? () => {
      var _a;
      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
    } : void 0,
    visible: props.visible,
    getContainer: props.getContainer,
    bodyStyle: props.bodyStyle,
    bodyClassName: (0, import_classnames21.default)(cls("body"), props.image && cls("with-image"), props.bodyClassName),
    maskStyle: props.maskStyle,
    maskClassName: props.maskClassName,
    stopPropagation: props.stopPropagation,
    disableBodyScroll: props.disableBodyScroll,
    destroyOnClose: props.destroyOnClose,
    forceRender: props.forceRender,
    role: "dialog",
    "aria-label": props["aria-label"]
  }, element);
};
function cls(name = "") {
  return "adm-dialog" + (name && "-") + name;
}

// node_modules/antd-mobile/es/components/dialog/show.js
var closeFnSet = /* @__PURE__ */ new Set();
function show(props) {
  const handler = renderImperatively(import_react58.default.createElement(Dialog, Object.assign({}, props, {
    afterClose: () => {
      var _a;
      closeFnSet.delete(handler.close);
      (_a = props.afterClose) === null || _a === void 0 ? void 0 : _a.call(props);
    }
  })));
  closeFnSet.add(handler.close);
  return handler;
}

// node_modules/antd-mobile/es/components/dialog/alert.js
function alert(p) {
  const defaultProps62 = {
    confirmText: getDefaultConfig().locale.Dialog.ok
  };
  const props = mergeProps(defaultProps62, p);
  return new Promise((resolve) => {
    show(Object.assign(Object.assign({}, props), {
      closeOnAction: true,
      actions: [{
        key: "confirm",
        text: props.confirmText
      }],
      onAction: props.onConfirm,
      onClose: () => {
        var _a;
        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
        resolve();
      }
    }));
  });
}

// node_modules/antd-mobile/es/components/dialog/confirm.js
var defaultProps20 = {
  confirmText: "\u786E\u8BA4",
  cancelText: "\u53D6\u6D88"
};
function confirm(p) {
  const {
    locale
  } = getDefaultConfig();
  const props = mergeProps(defaultProps20, {
    confirmText: locale.common.confirm,
    cancelText: locale.common.cancel
  }, p);
  return new Promise((resolve) => {
    show(Object.assign(Object.assign({}, props), {
      closeOnAction: true,
      onClose: () => {
        var _a;
        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
        resolve(false);
      },
      actions: [[{
        key: "cancel",
        text: props.cancelText,
        onClick: () => __awaiter(this, void 0, void 0, function* () {
          var _a;
          yield (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(props);
          resolve(false);
        })
      }, {
        key: "confirm",
        text: props.confirmText,
        bold: true,
        onClick: () => __awaiter(this, void 0, void 0, function* () {
          var _b;
          yield (_b = props.onConfirm) === null || _b === void 0 ? void 0 : _b.call(props);
          resolve(true);
        })
      }]]
    }));
  });
}

// node_modules/antd-mobile/es/components/dialog/clear.js
function clear() {
  closeFnSet.forEach((close) => {
    close();
  });
}

// node_modules/antd-mobile/es/components/dialog/index.js
var dialog_default = attachPropertiesToComponent(Dialog, {
  show,
  alert,
  confirm,
  clear
});

// node_modules/antd-mobile/es/components/divider/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/divider/divider.css";

// node_modules/antd-mobile/es/components/divider/divider.js
var import_react59 = __toESM(require_react());
var import_classnames22 = __toESM(require_classnames());
var classPrefix26 = `adm-divider`;
var defaultProps21 = {
  contentPosition: "center",
  direction: "horizontal"
};
var Divider = (p) => {
  const props = mergeProps(defaultProps21, p);
  return withNativeProps(props, import_react59.default.createElement("div", {
    className: (0, import_classnames22.default)(classPrefix26, `${classPrefix26}-${props.direction}`, `${classPrefix26}-${props.contentPosition}`)
  }, props.children && import_react59.default.createElement("div", {
    className: `${classPrefix26}-content`
  }, props.children)));
};

// node_modules/antd-mobile/es/components/divider/index.js
var divider_default = Divider;

// node_modules/antd-mobile/es/components/ellipsis/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/ellipsis/ellipsis.css";

// node_modules/antd-mobile/es/components/ellipsis/ellipsis.js
var import_react60 = __toESM(require_react());
var classPrefix27 = `adm-ellipsis`;
var defaultProps22 = {
  direction: "end",
  rows: 1,
  expandText: "",
  collapseText: "",
  stopPropagationForActionButtons: [],
  onContentClick: () => {
  }
};
var Ellipsis = (p) => {
  const props = mergeProps(defaultProps22, p);
  const rootRef = (0, import_react60.useRef)(null);
  const [ellipsised, setEllipsised] = (0, import_react60.useState)({});
  const [expanded, setExpanded] = (0, import_react60.useState)(false);
  const [exceeded, setExceeded] = (0, import_react60.useState)(false);
  function calcEllipsised() {
    const root = rootRef.current;
    if (!root)
      return;
    const originStyle = window.getComputedStyle(root);
    const container = document.createElement("div");
    const styleNames = Array.prototype.slice.apply(originStyle);
    styleNames.forEach((name) => {
      container.style.setProperty(name, originStyle.getPropertyValue(name));
    });
    container.style.position = "fixed";
    container.style.left = "999999px";
    container.style.top = "999999px";
    container.style.zIndex = "-1000";
    container.style.height = "auto";
    container.style.minHeight = "auto";
    container.style.maxHeight = "auto";
    container.style.textOverflow = "clip";
    container.style.whiteSpace = "normal";
    container.style.webkitLineClamp = "unset";
    container.style.display = "block";
    const lineHeight = pxToNumber(originStyle.lineHeight);
    const maxHeight = Math.floor(lineHeight * (props.rows + 0.5) + pxToNumber(originStyle.paddingTop) + pxToNumber(originStyle.paddingBottom));
    container.innerText = props.content;
    document.body.appendChild(container);
    if (container.offsetHeight <= maxHeight) {
      setExceeded(false);
    } else {
      let check = function(left, right) {
        if (right - left <= 1) {
          if (props.direction === "end") {
            return {
              leading: props.content.slice(0, left) + "..."
            };
          } else {
            return {
              tailing: "..." + props.content.slice(right, end)
            };
          }
        }
        const middle2 = Math.round((left + right) / 2);
        if (props.direction === "end") {
          container.innerText = props.content.slice(0, middle2) + "..." + actionText;
        } else {
          container.innerText = actionText + "..." + props.content.slice(middle2, end);
        }
        if (container.offsetHeight <= maxHeight) {
          if (props.direction === "end") {
            return check(middle2, right);
          } else {
            return check(left, middle2);
          }
        } else {
          if (props.direction === "end") {
            return check(left, middle2);
          } else {
            return check(middle2, right);
          }
        }
      }, checkMiddle = function(leftPart, rightPart) {
        if (leftPart[1] - leftPart[0] <= 1 && rightPart[1] - rightPart[0] <= 1) {
          return {
            leading: props.content.slice(0, leftPart[0]) + "...",
            tailing: "..." + props.content.slice(rightPart[1], end)
          };
        }
        const leftPartMiddle = Math.floor((leftPart[0] + leftPart[1]) / 2);
        const rightPartMiddle = Math.ceil((rightPart[0] + rightPart[1]) / 2);
        container.innerText = props.content.slice(0, leftPartMiddle) + "..." + actionText + "..." + props.content.slice(rightPartMiddle, end);
        if (container.offsetHeight <= maxHeight) {
          return checkMiddle([leftPartMiddle, leftPart[1]], [rightPart[0], rightPartMiddle]);
        } else {
          return checkMiddle([leftPart[0], leftPartMiddle], [rightPartMiddle, rightPart[1]]);
        }
      };
      setExceeded(true);
      const end = props.content.length;
      const actionText = expanded ? props.collapseText : props.expandText;
      const middle = Math.floor((0 + end) / 2);
      const ellipsised2 = props.direction === "middle" ? checkMiddle([0, middle], [middle, end]) : check(0, end);
      setEllipsised(ellipsised2);
    }
    document.body.removeChild(container);
  }
  useResizeEffect(calcEllipsised, rootRef);
  useIsomorphicLayoutEffect_default(() => {
    calcEllipsised();
  }, [props.content, props.direction, props.rows, props.expandText, props.collapseText]);
  const expandActionElement = exceeded && props.expandText ? withStopPropagation(props.stopPropagationForActionButtons, import_react60.default.createElement("a", {
    onClick: () => {
      setExpanded(true);
    }
  }, props.expandText)) : null;
  const collapseActionElement = exceeded && props.expandText ? withStopPropagation(props.stopPropagationForActionButtons, import_react60.default.createElement("a", {
    onClick: () => {
      setExpanded(false);
    }
  }, props.collapseText)) : null;
  const renderContent = () => {
    if (!exceeded) {
      return props.content;
    }
    if (expanded) {
      return import_react60.default.createElement(import_react60.default.Fragment, null, props.content, collapseActionElement);
    } else {
      return import_react60.default.createElement(import_react60.default.Fragment, null, ellipsised.leading, expandActionElement, ellipsised.tailing);
    }
  };
  return withNativeProps(props, import_react60.default.createElement("div", {
    ref: rootRef,
    className: classPrefix27,
    onClick: (e) => {
      if (e.target === e.currentTarget) {
        props.onContentClick(e);
      }
    }
  }, renderContent()));
};
function pxToNumber(value) {
  if (!value)
    return 0;
  const match = value.match(/^\d*(\.\d*)?/);
  return match ? Number(match[0]) : 0;
}

// node_modules/antd-mobile/es/components/ellipsis/index.js
var ellipsis_default = Ellipsis;

// node_modules/antd-mobile/es/components/empty/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/empty/empty.css";

// node_modules/antd-mobile/es/components/empty/empty.js
var import_react62 = __toESM(require_react());
var import_classnames23 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/empty/empty-icon.js
var import_react61 = __toESM(require_react());
var EmptyIcon = (props) => {
  return withNativeProps(props, import_react61.default.createElement("svg", {
    viewBox: "0 0 64 41"
  }, import_react61.default.createElement("g", {
    transform: "translate(0 1)",
    fill: "none",
    fillRule: "evenodd"
  }, import_react61.default.createElement("ellipse", {
    fill: "#f5f5f5",
    cx: "32",
    cy: "33",
    rx: "32",
    ry: "7"
  }), import_react61.default.createElement("g", {
    stroke: "#d9d9d9"
  }, import_react61.default.createElement("path", {
    d: "M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
  }), import_react61.default.createElement("path", {
    d: "M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z",
    fill: "#fafafa"
  })))));
};

// node_modules/antd-mobile/es/components/empty/empty.js
var classPrefix28 = `adm-empty`;
var Empty = (props) => {
  function renderImageNode() {
    const {
      image
    } = props;
    if (image === void 0) {
      return import_react62.default.createElement(EmptyIcon, {
        className: `${classPrefix28}-image`,
        style: props.imageStyle
      });
    }
    if (typeof image === "string") {
      return import_react62.default.createElement("img", {
        className: `${classPrefix28}-image`,
        style: props.imageStyle,
        src: image,
        alt: "empty"
      });
    }
    return image;
  }
  return withNativeProps(props, import_react62.default.createElement("div", {
    className: classPrefix28
  }, import_react62.default.createElement("div", {
    className: `${classPrefix28}-image-container`
  }, renderImageNode()), props.description && import_react62.default.createElement("div", {
    className: (0, import_classnames23.default)(`${classPrefix28}-description`)
  }, props.description)));
};

// node_modules/antd-mobile/es/components/empty/index.js
var empty_default = Empty;

// node_modules/antd-mobile/es/components/error-block/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/error-block/error-block.css";

// node_modules/antd-mobile/es/components/error-block/create-error-block.js
var import_react63 = __toESM(require_react());
var import_classnames24 = __toESM(require_classnames());
var classPrefix29 = `adm-error-block`;
var defaultProps23 = {
  status: "default"
};
function createErrorBlock(imageRecord2) {
  const ErrorBlock2 = (p) => {
    var _a;
    const props = mergeProps(defaultProps23, p);
    const {
      locale
    } = useConfig();
    const contentPack = locale.ErrorBlock[props.status];
    const des = "description" in props ? props.description : contentPack.description;
    const title = "title" in props ? props.title : contentPack.title;
    const image = (_a = props.image) !== null && _a !== void 0 ? _a : imageRecord2[props.status];
    const imageNode = typeof image === "string" ? import_react63.default.createElement("img", {
      src: image,
      alt: "error block image"
    }) : image;
    return withNativeProps(props, import_react63.default.createElement("div", {
      className: (0, import_classnames24.default)(classPrefix29, {
        [`${classPrefix29}-full-page`]: props.fullPage
      })
    }, import_react63.default.createElement("div", {
      className: `${classPrefix29}-image`
    }, imageNode), import_react63.default.createElement("div", {
      className: `${classPrefix29}-description`
    }, title && import_react63.default.createElement("div", {
      className: `${classPrefix29}-description-title`
    }, title), des && import_react63.default.createElement("div", {
      className: `${classPrefix29}-description-subtitle`
    }, des)), props.children && import_react63.default.createElement("div", {
      className: `${classPrefix29}-content`
    }, props.children)));
  };
  return ErrorBlock2;
}

// node_modules/antd-mobile/es/components/error-block/images/default.js
var import_react64 = __toESM(require_react());
var defaultImage = import_react64.default.createElement("svg", {
  viewBox: "0 0 200 200",
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink"
}, import_react64.default.createElement("defs", null, import_react64.default.createElement("linearGradient", {
  x1: "50%",
  y1: "-116.862%",
  x2: "50%",
  y2: "90.764%",
  id: "error-block-image-default-a"
}, import_react64.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0.207,
  offset: "0%"
}), import_react64.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0.115,
  offset: "80.072%"
}), import_react64.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0,
  offset: "100%"
})), import_react64.default.createElement("circle", {
  id: "error-block-image-default-d",
  cx: 18.823,
  cy: 18.823,
  r: 18.823
}), import_react64.default.createElement("rect", {
  id: "error-block-image-default-b",
  x: 3.5,
  y: 9,
  width: 51.429,
  height: 88,
  rx: 4.571
})), import_react64.default.createElement("g", {
  fill: "none",
  fillRule: "evenodd"
}, import_react64.default.createElement("path", {
  d: "M73.557.004c19.435-.311 38.696 17.016 51.523 35.287 8.708-10.822 17.127-16.233 25.255-16.233 13.333 0 28.35 14.274 45.053 42.822 1.769 3.024-3.582 7.435-16.054 13.231l-41.322 1.37c-7.343 5.872-31.225.626-69.152 1.234-27.79.445-45.759-1.234-53.908-5.037C3.2 71.143-1.625 68.686.48 65.308 27.371 22.12 51.73.353 73.557.003Zm93.098 49.53a1.125 1.125 0 0 0-.401.072l-.058.023-.07.03-.028.014-.02.01c-.03.015-.059.032-.088.049a2.543 2.543 0 0 0-.568.477l-.067.074c-1.686 1.931-2.904 7.062-2.904 8.985 0 2.283 1.719 4.153 3.898 4.314l.026.001v3.805c0 .39.25.705.56.705.31 0 .56-.316.56-.705l.001-3.88c1.92-.402 3.363-2.148 3.363-4.24 0-2.39-1.882-9.734-4.204-9.734Zm-100-5a1.125 1.125 0 0 0-.331.05l-.035.01-.035.012-.058.023-.07.03-.028.014-.02.01c-.03.015-.059.032-.088.049a2.543 2.543 0 0 0-.568.477l-.067.074c-1.686 1.931-2.904 7.062-2.904 8.985 0 2.212 1.613 4.036 3.695 4.294l.203.02.026.001v3.805c0 .39.25.705.56.705.282 0 .515-.26.555-.6l.006-.105v-3.88c1.92-.402 3.363-2.148 3.363-4.24 0-2.39-1.882-9.734-4.204-9.734ZM52.64 38.348l-.15.008-.149.023-.032.007-.032.008-.078.022-.045.015-.045.016-.06.023-.038.017-.038.017-.058.028-.022.011a2.201 2.201 0 0 0-.323.204l-.05.038-.05.04-.025.02-.025.021a3.742 3.742 0 0 0-.31.294l-.036.04c-.035.037-.07.076-.105.116-.01.012-.02.025-.031.036a3.275 3.275 0 0 0-.081.098l-.063.078c-2.031 2.583-3.48 8.692-3.48 11.027 0 2.636 1.846 4.832 4.292 5.323l.224.04-.064-.012.105.018.103.014v4.618c0 .47.299.85.667.85.337 0 .615-.32.659-.735l.006-.115v-4.618c.18-.023.355-.054.527-.094l.256-.067.196-.06c2.136-.706 3.68-2.75 3.68-5.162 0-2.996-2.383-12.207-5.325-12.207Z",
  transform: "translate(2.286 22.286)",
  fill: "url(#error-block-image-default-a)"
}), import_react64.default.createElement("g", {
  transform: "rotate(-90 102.429 55.357)"
}, import_react64.default.createElement("path", {
  d: "M6.857 0H52a6.857 6.857 0 0 1 6.857 6.857v92A6.857 6.857 0 0 1 52 105.714H6.857A6.857 6.857 0 0 1 0 98.857v-92A6.857 6.857 0 0 1 6.857 0Z",
  fill: "#7EACFF"
}), import_react64.default.createElement("mask", {
  id: "error-block-image-default-c",
  fill: "#fff"
}, import_react64.default.createElement("use", {
  xlinkHref: "#error-block-image-default-b"
})), import_react64.default.createElement("use", {
  fill: "#377EFF",
  xlinkHref: "#error-block-image-default-b"
}), import_react64.default.createElement("path", {
  d: "M11.838 91.8a.64.64 0 0 1 .627.652.64.64 0 0 1-.627.652.64.64 0 0 1-.628-.652c0-.36.281-.651.628-.651Zm-2.858 0a.64.64 0 0 1 .628.652.64.64 0 0 1-.628.652.64.64 0 0 1-.627-.652c0-.36.281-.651.627-.651Zm2.16-2.305a.64.64 0 0 1 .628.652.64.64 0 0 1-.627.651.64.64 0 0 1-.627-.651c0-.36.28-.652.627-.652Zm-2.982-.04a.64.64 0 0 1 .627.651.64.64 0 0 1-.627.652.64.64 0 0 1-.627-.652c0-.36.28-.651.627-.651Zm5.268-.531a.64.64 0 0 1 .628.651.64.64 0 0 1-.628.652.64.64 0 0 1-.627-.652c0-.36.281-.651.627-.651Zm2.858-1.143a.64.64 0 0 1 .627.651.64.64 0 0 1-.627.652.64.64 0 0 1-.628-.652c0-.36.281-.651.628-.651Zm-6.37-.917c.209 0 .377.175.377.39a.384.384 0 0 1-.376.392.384.384 0 0 1-.376-.391c0-.216.168-.391.376-.391Zm3.512-.798.093.007a.644.644 0 0 1 .535.645.64.64 0 0 1-.628.652.64.64 0 0 1-.627-.652c0-.36.281-.652.627-.652Zm5.715 0a.64.64 0 0 1 .627.652.64.64 0 0 1-.627.652.64.64 0 0 1-.627-.652c0-.36.28-.652.627-.652Zm-11.429 0a.64.64 0 0 1 .627.652.64.64 0 0 1-.627.652.64.64 0 0 1-.627-.652c0-.36.28-.652.627-.652Zm-3.261.241c.208 0 .376.175.376.39a.384.384 0 0 1-.376.392.384.384 0 0 1-.377-.391c0-.216.169-.391.377-.391Zm11.833-.812a.64.64 0 0 1 .627.652.64.64 0 0 1-.627.651.64.64 0 0 1-.628-.651c0-.36.281-.652.628-.652Zm-4.851.399c.208 0 .376.175.376.39a.384.384 0 0 1-.376.392.384.384 0 0 1-.377-.391c0-.216.169-.391.377-.391Zm10.313-2.056a.64.64 0 0 1 .628.652.64.64 0 0 1-.628.651.64.64 0 0 1-.627-.651c0-.36.281-.652.627-.652Zm-2.354-.128a.64.64 0 0 1 .627.652.64.64 0 0 1-.627.652.64.64 0 0 1-.628-.652c0-.36.281-.652.628-.652Zm-13.798.311c.207 0 .376.175.376.391a.384.384 0 0 1-.376.391.384.384 0 0 1-.377-.39c0-.217.169-.392.377-.392Zm11.832-.812a.64.64 0 0 1 .628.652.64.64 0 0 1-.628.651.64.64 0 0 1-.627-.651c0-.36.281-.652.627-.652Zm-6.285 0a.64.64 0 0 1 .627.652.64.64 0 0 1-.627.651.64.64 0 0 1-.627-.651c0-.36.28-.652.627-.652Zm3.428 0a.64.64 0 0 1 .627.652.64.64 0 0 1-.627.651.64.64 0 0 1-.627-.651c0-.36.28-.652.627-.652Zm-6.118.24c.208 0 .376.176.376.392a.384.384 0 0 1-.376.39.384.384 0 0 1-.377-.39c0-.216.169-.391.377-.391Zm11.261-2.525a.64.64 0 0 1 .627.651.64.64 0 0 1-.627.652.64.64 0 0 1-.627-.652c0-.36.28-.651.627-.651Zm-3.557.484c.208 0 .376.175.376.391a.384.384 0 0 1-.376.391.384.384 0 0 1-.376-.391c0-.216.168-.391.376-.391Zm-2.478-.555a.64.64 0 0 1 .627.652.64.64 0 0 1-.627.652.64.64 0 0 1-.627-.652c0-.36.28-.652.627-.652Zm-3.512-.26c.208 0 .376.175.376.39a.384.384 0 0 1-.376.392.384.384 0 0 1-.376-.391c0-.216.168-.391.376-.391Zm-2.857 0c.208 0 .376.175.376.39a.384.384 0 0 1-.376.392.384.384 0 0 1-.376-.391c0-.216.168-.391.376-.391Zm-4.571 0c.207 0 .376.175.376.39a.384.384 0 0 1-.376.392.384.384 0 0 1-.377-.391c0-.216.169-.391.377-.391Zm14.898-1.835a.64.64 0 0 1 .628.652.64.64 0 0 1-.628.651.64.64 0 0 1-.627-.651c0-.36.281-.652.627-.652Zm-8.027-.245c.208 0 .377.175.377.39a.384.384 0 0 1-.377.392.384.384 0 0 1-.376-.391c0-.216.169-.391.376-.391Zm6.271-1.349c.208 0 .377.175.377.391a.384.384 0 0 1-.377.391.384.384 0 0 1-.376-.39c0-.217.169-.392.376-.392Zm-11.484-.481c.208 0 .376.175.376.39a.384.384 0 0 1-.376.392.384.384 0 0 1-.376-.391c0-.216.168-.391.376-.391Zm15.103-.972c.208 0 .376.175.376.391a.384.384 0 0 1-.376.391.384.384 0 0 1-.376-.39c0-.217.168-.392.376-.392Zm-9.333-1.404c.208 0 .376.175.376.39a.384.384 0 0 1-.376.392.384.384 0 0 1-.376-.391c0-.216.168-.391.376-.391Zm-6.819-.405c.208 0 .377.175.377.39a.384.384 0 0 1-.377.392.384.384 0 0 1-.376-.391c0-.216.168-.391.376-.391Z",
  fill: "#003CFF",
  fillRule: "nonzero",
  mask: "url(#error-block-image-default-c)",
  transform: "rotate(116 12.367 83.503)"
}), import_react64.default.createElement("path", {
  stroke: "#FFF",
  strokeWidth: 0.75,
  strokeLinecap: "round",
  strokeLinejoin: "round",
  d: "M36.774 5.474H21.523"
}), import_react64.default.createElement("path", {
  d: "m67.818 94.025-4.996 3.913m4.996 11.91-4.996-3.912m-1.142 9.145-1.143-6.288m10.71-6.768h-7.262",
  stroke: "#4486FE",
  strokeWidth: 0.75,
  strokeLinecap: "round",
  strokeLinejoin: "round"
})), import_react64.default.createElement("circle", {
  cx: 8.571,
  cy: 8.571,
  r: 8.571,
  transform: "translate(22.857 142)",
  fill: "#FFCD6B",
  fillRule: "nonzero"
}), import_react64.default.createElement("g", {
  transform: "translate(132.857 124)"
}, import_react64.default.createElement("mask", {
  id: "error-block-image-default-e",
  fill: "#fff"
}, import_react64.default.createElement("use", {
  xlinkHref: "#error-block-image-default-d"
})), import_react64.default.createElement("use", {
  fill: "#FBBE47",
  fillRule: "nonzero",
  xlinkHref: "#error-block-image-default-d"
}), import_react64.default.createElement("circle", {
  fill: "#FFCD6B",
  fillRule: "nonzero",
  mask: "url(#error-block-image-default-e)",
  cx: 13.886,
  cy: 15.12,
  r: 18.823
}), import_react64.default.createElement("circle", {
  fill: "#FFB400",
  fillRule: "nonzero",
  mask: "url(#error-block-image-default-e)",
  cx: 23.4,
  cy: 29.057,
  r: 1
}), import_react64.default.createElement("circle", {
  fill: "#FFB400",
  fillRule: "nonzero",
  mask: "url(#error-block-image-default-e)",
  cx: 30.343,
  cy: 29.829,
  r: 1
}), import_react64.default.createElement("circle", {
  fill: "#FFB400",
  fillRule: "nonzero",
  mask: "url(#error-block-image-default-e)",
  cx: 18.771,
  cy: 32.657,
  r: 1.286
}), import_react64.default.createElement("circle", {
  fill: "#FFB400",
  fillRule: "nonzero",
  mask: "url(#error-block-image-default-e)",
  cx: 29.571,
  cy: 25.971,
  r: 1.286
}), import_react64.default.createElement("circle", {
  fill: "#FFB400",
  fillRule: "nonzero",
  mask: "url(#error-block-image-default-e)",
  cx: 19.286,
  cy: 7.971,
  r: 1.286
}), import_react64.default.createElement("circle", {
  fill: "#FFB400",
  fillRule: "nonzero",
  mask: "url(#error-block-image-default-e)",
  cx: 26.486,
  cy: 5.914,
  r: 1.286
}), import_react64.default.createElement("circle", {
  fill: "#FFB400",
  fillRule: "nonzero",
  mask: "url(#error-block-image-default-e)",
  cx: 11.057,
  cy: 6.943,
  r: 1
}), import_react64.default.createElement("circle", {
  fill: "#FFB400",
  fillRule: "nonzero",
  mask: "url(#error-block-image-default-e)",
  cx: 30.086,
  cy: 15.686,
  r: 1.286
}), import_react64.default.createElement("circle", {
  fill: "#FFB400",
  fillRule: "nonzero",
  mask: "url(#error-block-image-default-e)",
  cx: 22.886,
  cy: 14.657,
  r: 1
})), import_react64.default.createElement("path", {
  d: "m87.429 135.123 6.591-9.378v-.08h-5.99v-2.559h10.038v1.787l-6.44 9.254v.082h6.56v2.557h-10.76v-1.663Zm12.185-5.889 4.948-7.047v-.056h-4.498v-1.917h7.536v1.34l-4.849 6.942v.059h4.923v1.92h-8.06v-1.24Zm10.345.702 3.708-5.274v-.045h-3.372v-1.437h5.648v1.003l-3.628 5.206v.045H116v1.438h-6.041v-.936Z",
  fill: "#FFF",
  fillRule: "nonzero"
})));

// node_modules/antd-mobile/es/components/error-block/images/disconnected.js
var import_react65 = __toESM(require_react());
var disconnectedImage = import_react65.default.createElement("svg", {
  viewBox: "0 0 400 400",
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink"
}, import_react65.default.createElement("title", null, "@\u53CD\u9988/\u5F02\u5E38/\u7F51\u7EDC\u670D\u52A1\u5F02\u5E38"), import_react65.default.createElement("defs", null, import_react65.default.createElement("linearGradient", {
  x1: "50%",
  y1: "-116.862%",
  x2: "50%",
  y2: "90.764%",
  id: "error-block-image-disconnected-c"
}, import_react65.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0.207,
  offset: "0%"
}), import_react65.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0.115,
  offset: "80.072%"
}), import_react65.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0,
  offset: "100%"
})), import_react65.default.createElement("circle", {
  id: "error-block-image-disconnected-d",
  cx: 22.309,
  cy: 22.309,
  r: 22.309
}), import_react65.default.createElement("path", {
  id: "error-block-image-disconnected-a",
  d: "M0 0h400v400H0z"
})), import_react65.default.createElement("g", {
  fill: "none",
  fillRule: "evenodd"
}, import_react65.default.createElement("mask", {
  id: "error-block-image-disconnected-b",
  fill: "#fff"
}, import_react65.default.createElement("use", {
  xlinkHref: "#error-block-image-disconnected-a"
})), import_react65.default.createElement("g", {
  mask: "url(#error-block-image-disconnected-b)",
  fill: "url(#error-block-image-disconnected-c)"
}, import_react65.default.createElement("path", {
  d: "M151.686 45.58c38.869-.623 77.391 34.03 103.046 70.573 17.416-21.644 34.253-32.465 50.51-32.465 26.666 0 56.701 28.548 90.105 85.643 3.539 6.05-7.164 14.87-32.107 26.462l-82.643 2.741c-14.686 11.745-62.45 1.252-138.305 2.467-55.58.89-91.518-2.468-107.816-10.074-23.505-3.07-33.154-7.983-28.946-14.74C59.313 89.813 108.03 46.278 151.686 45.58Zm186.195 99.06-.127.003-.126.01a2.32 2.32 0 0 0-.465.103l-.032.01-.031.01a2.364 2.364 0 0 0-.181.071 2.52 2.52 0 0 0-.116.054l-.133.067-.042.024-.036.02a2.946 2.946 0 0 0-.133.08l-.048.03a3.052 3.052 0 0 0-.126.087l-.047.033a3.274 3.274 0 0 0-.128.097c-.01.008-.02.017-.031.024a4.906 4.906 0 0 0-.31.27l-.036.032a6.654 6.654 0 0 0-.46.484l-.045.05c-3.344 3.91-5.755 14.083-5.755 17.908 0 4.547 3.409 8.275 7.74 8.625l.108.008v7.608c0 .779.502 1.41 1.121 1.41.62 0 1.121-.632 1.121-1.41v-7.762c3.838-.802 6.727-4.293 6.727-8.48 0-4.778-3.765-19.467-8.409-19.467Zm-200-10-.127.003-.126.01a2.32 2.32 0 0 0-.368.073l-.049.014-.048.016-.032.01-.031.01a2.364 2.364 0 0 0-.181.071l-.058.026-.058.028-.133.067-.042.024-.036.02-.066.039-.067.041-.048.03a3.052 3.052 0 0 0-.126.087l-.047.033a3.274 3.274 0 0 0-.128.097c-.01.008-.02.017-.031.024l-.156.13-.154.14-.036.032a6.654 6.654 0 0 0-.46.484l-.045.05c-3.344 3.91-5.755 14.083-5.755 17.908 0 4.547 3.409 8.275 7.74 8.625l.054.004.054.004v7.608c0 .779.502 1.41 1.121 1.41.58 0 1.058-.556 1.115-1.266l.006-.144v-7.762c3.838-.802 6.727-4.293 6.727-8.48 0-4.778-3.765-19.467-8.409-19.467Zm-28.029-12.373-.107.002-.106.006a2.978 2.978 0 0 0-.551.095 3.444 3.444 0 0 0-.323.104 3.962 3.962 0 0 0-.61.297c-.076.045-.15.092-.226.141-4.964 3.312-8.728 18.445-8.728 23.77 0 5.434 3.922 9.935 9.04 10.726l.28.04v9.236c0 .886.532 1.614 1.21 1.692l.121.007.122-.007c.638-.074 1.147-.723 1.204-1.538l.006-.155v-9.235c5.254-.668 9.32-5.234 9.32-10.767 0-5.993-4.77-24.414-10.652-24.414Z"
})), import_react65.default.createElement("g", {
  mask: "url(#error-block-image-disconnected-b)"
}, import_react65.default.createElement("g", {
  transform: "translate(85.858 150.644)"
}, import_react65.default.createElement("path", {
  d: "M116.26 28.467c1.352 0 2.703.018 4.054.054 3.923.385 10.188 4.248 9.267 11.061-.878 6.496-5.836 9.089-8.962 9.529a130.762 130.762 0 0 0-4.36-.072c-28.567 0-60.654 10.149-96.22 30.676l-2.227 1.297c-.744.437-1.49.878-2.236 1.323-4.878 2.911-11.193 1.316-14.103-3.562C-1.438 73.894.157 67.58 5.035 64.67 45.34 40.62 82.4 28.467 116.26 28.467Zm22 11.63c1.03-5.942 6.376-8.618 11.084-8.08C172.14 36.91 194.83 46.86 217.37 61.794c4.735 3.138 6.03 9.52 2.893 14.255-3.138 4.736-9.52 6.031-14.256 2.893-20.111-13.325-40.075-22.165-59.935-26.584a9.974 9.974 0 0 0-.325-.088c-3.987-1.015-8.602-5.738-7.487-12.175ZM116.26 77.418c22.777 0 45.4 7.057 67.73 20.988 4.82 3.007 6.289 9.351 3.282 14.17-3.007 4.82-9.351 6.29-14.17 3.283-19.194-11.974-38.095-17.87-56.842-17.87s-37.648 5.896-56.842 17.87c-4.82 3.007-11.164 1.537-14.17-3.282-3.007-4.82-1.538-11.164 3.282-14.171 22.33-13.931 44.953-20.988 67.73-20.988ZM117.974 124.67c9.85 0 17.303 1.69 25.687 5.082l.82.337 2.9 1.231 3.008 1.252.77.305.107.04c5.326 1.976 8.042 7.895 6.066 13.221-1.976 5.326-7.895 8.042-13.221 6.067l-.713-.27-.726-.285-.763-.31-1.263-.527-2.944-1.26-1.125-.473c-6.393-2.648-11.433-3.838-18.603-3.838-8.223 0-16.532 2.126-25.028 6.475-5.056 2.588-11.254.587-13.842-4.47-2.589-5.056-.588-11.253 4.47-13.842 11.313-5.791 22.814-8.735 34.4-8.735ZM118.235 197.047c7.15 0 13.77-.897 19.841-2.721 5.44-1.635 8.526-7.37 6.892-12.81-1.635-5.44-7.37-8.526-12.81-6.892-4.072 1.224-8.707 1.851-13.923 1.851-4.36 0-8.79-1.045-13.373-3.21l-.626-.301c-5.095-2.512-11.262-.418-13.773 4.678-2.512 5.095-.418 11.261 4.678 13.773 7.559 3.727 15.288 5.632 23.094 5.632Z",
  fill: "#377EFF",
  fillRule: "nonzero"
}), import_react65.default.createElement("path", {
  d: "M198.35 62.413c2.755-4.967 9.016-6.76 13.984-4.004 13.068 7.25 19.124 18.535 17.615 30.952-1.157 9.515-6.83 18.757-14.096 24.352-13.364 10.29-34.915 9.401-49.363-1.91-4.472-3.502-5.26-9.967-1.758-14.44 3.436-4.388 9.724-5.229 14.185-1.952l.255.194c7.283 5.702 18.475 6.164 24.13 1.809 3.072-2.366 5.766-6.754 6.226-10.536.467-3.844-1.21-7.07-6.796-10.267l-.378-.213c-4.967-2.756-6.76-9.017-4.004-13.985ZM61.35 103.092c-2.84-4.92-9.13-6.607-14.05-3.768-20.662 11.922-21.772 35.751-6.018 51.69 13.752 13.914 33.192 13.447 50.507 1.158 4.633-3.288 5.723-9.708 2.436-14.34-3.288-4.633-9.709-5.724-14.341-2.436-9.763 6.928-18.07 7.128-23.97 1.158-6.761-6.84-6.498-14.501 1.35-19.225l.317-.187c4.92-2.84 6.608-9.13 3.769-14.05ZM129.103 135.702c1.688-5.424 7.454-8.453 12.878-6.764 14.776 4.599 23.437 13.727 25.259 25.58 1.316 8.561-1.228 17.533-5.58 24.052-3.132 4.688-7.388 8.287-12.504 11.112-3.03 1.673-5.75 2.811-9.37 4.066l-1.4.477c-5.387 1.806-11.217-1.097-13.022-6.484-1.805-5.386 1.098-11.216 6.484-13.02l1.09-.374c6.032-2.112 9.602-4.19 11.613-7.201 1.693-2.535 2.818-6.502 2.356-9.503-.564-3.673-3.432-6.696-11.04-9.063-5.424-1.689-8.452-7.454-6.764-12.878Z",
  fill: "#377EFF",
  fillRule: "nonzero"
}), import_react65.default.createElement("path", {
  d: "M148.072 181.58c3.718-7.98 4.172-14.9 1.36-20.76-2.81-5.86-6.236-9.096-10.275-9.707",
  stroke: "#FFF",
  strokeWidth: 0.571,
  strokeLinecap: "round"
}), import_react65.default.createElement("ellipse", {
  fill: "#7EACFF",
  transform: "rotate(10 147 41.933)",
  cx: 147,
  cy: 41.933,
  rx: 9.143,
  ry: 10.286
}), import_react65.default.createElement("path", {
  d: "M210.422 107.472c3.718-7.98 4.172-14.9 1.36-20.76-2.81-5.86-6.668-9.883-11.572-12.067M51.604 131.769c-3.15-6.8-3.537-12.694-1.161-17.685 2.376-4.99 5.57-8.136 9.583-9.438",
  stroke: "#003CFF",
  strokeWidth: 0.75,
  strokeLinecap: "round",
  strokeLinejoin: "round"
}), import_react65.default.createElement("path", {
  d: "M21.53 64.408c4.946-3.389 9.817-6.026 14.612-7.912",
  stroke: "#FFF",
  strokeWidth: 0.75,
  strokeLinecap: "round",
  strokeLinejoin: "round"
}), import_react65.default.createElement("path", {
  d: "m113.243 15.444 9.588 8.314M144.31 9.405l-5.775 11.3m18.389-1.246-11.907 4.643M127.64 5.66l2.77 14.255",
  stroke: "#4486FE",
  strokeWidth: 0.75,
  strokeLinecap: "round",
  strokeLinejoin: "round"
}))), import_react65.default.createElement("g", {
  mask: "url(#error-block-image-disconnected-b)"
}, import_react65.default.createElement("g", {
  transform: "translate(275.143 302.571)"
}, import_react65.default.createElement("mask", {
  id: "error-block-image-disconnected-e",
  fill: "#fff"
}, import_react65.default.createElement("use", {
  xlinkHref: "#error-block-image-disconnected-d"
})), import_react65.default.createElement("use", {
  fill: "#FBBE47",
  fillRule: "nonzero",
  xlinkHref: "#error-block-image-disconnected-d"
}), import_react65.default.createElement("circle", {
  fill: "#FFCD6B",
  fillRule: "nonzero",
  mask: "url(#error-block-image-disconnected-e)",
  cx: 16.457,
  cy: 17.92,
  r: 22.309
}), import_react65.default.createElement("circle", {
  fill: "#FFF",
  fillRule: "nonzero",
  mask: "url(#error-block-image-disconnected-e)",
  cx: 14.263,
  cy: 12.069,
  r: 2.194
}))), import_react65.default.createElement("g", {
  mask: "url(#error-block-image-disconnected-b)",
  fill: "#FBBE47",
  fillRule: "nonzero"
}, import_react65.default.createElement("circle", {
  cx: 12,
  cy: 12,
  r: 12,
  transform: "translate(84 297.714)"
}))));

// node_modules/antd-mobile/es/components/error-block/images/empty.js
var import_react66 = __toESM(require_react());
var emptyImage = import_react66.default.createElement("svg", {
  viewBox: "0 0 400 400",
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink"
}, import_react66.default.createElement("defs", null, import_react66.default.createElement("linearGradient", {
  x1: "50%",
  y1: "-116.862%",
  x2: "50%",
  y2: "90.764%",
  id: "error-block-image-empty-a"
}, import_react66.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0.207,
  offset: "0%"
}), import_react66.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0.115,
  offset: "80.072%"
}), import_react66.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0,
  offset: "100%"
})), import_react66.default.createElement("path", {
  d: "M146.183 18.461c31.705 23.336 33.349 71.85 4.93 96.614-.252.22 6.172 5.602 13.577 11.414l.686.537.69.54.695.54.348.27.698.54a341.27 341.27 0 0 0 8.806 6.596c1.114.802 4.643-.853 10.587-4.965l-.532 12.218a1.2 1.2 0 0 1-.481.91l-10.868 8.111c-1.405 1.048-3.32 1.185-4.854.072l-35.578-25.834c-33.414 17.333-79.913 15-109.804-7-33.444-24.616-33.444-75.95 0-100.563 33.443-24.615 87.657-24.615 121.1 0Zm-60.469 7.653C51.63 26.114 24 44.534 24 67.257S51.63 108.4 85.714 108.4s61.715-18.42 61.715-41.143c0-22.722-27.63-41.143-61.715-41.143Z",
  id: "error-block-image-empty-b"
})), import_react66.default.createElement("g", {
  fill: "none",
  fillRule: "evenodd"
}, import_react66.default.createElement("path", {
  d: "M157.964 244.661H0L3.806 100.13a4.572 4.572 0 0 1 4.353-4.446l.217-.006h45.588V68.2a4.572 4.572 0 0 1 4.356-4.567l.216-.005h65.498l2.554-58.689a4.571 4.571 0 0 1 4.779-4.367l.214.015 87.79 8.222a4.572 4.572 0 0 1 4.126 4.133l.015.212 3.146 69.652L301.634 64.9a4.571 4.571 0 0 1 5.628 4.231l.005.215v43.955l56.162.001v130.264h-56.163v.001h-82.383v-.004h-66.919v1.098ZM89.503 160.03h-9.968v8.436h9.968v-8.436Zm0-14.507h-9.968v8.435h9.968v-8.435Zm197.985-5.15h-9.967v8.432h9.967v-8.431Zm-197.985-8.806h-9.968v8.436h9.968v-8.436Zm197.985-5.153h-9.967v8.432h9.967v-8.432Zm0-14.503h-9.967v8.432h9.967v-8.432Zm-84.643-.777h-30.8v8.436h30.8v-8.436Zm84.643-13.186h-9.967v8.436h9.967v-8.436Zm-84.643-3.29h-30.8v8.436h30.8v-8.436Zm0-15.912h-30.8v8.436h30.8v-8.436Z",
  transform: "translate(18.286 50.286)",
  fill: "url(#error-block-image-empty-a)"
}), import_react66.default.createElement("g", {
  transform: "translate(108.571 189.886)"
}, import_react66.default.createElement("mask", {
  id: "error-block-image-empty-c",
  fill: "#fff"
}, import_react66.default.createElement("use", {
  xlinkHref: "#error-block-image-empty-b"
})), import_react66.default.createElement("use", {
  fill: "#377EFF",
  xlinkHref: "#error-block-image-empty-b"
}), import_react66.default.createElement("path", {
  d: "M131.429 134.686a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm5.714 0a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285ZM128 133.543a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-5.714 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm21.143-1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm-9.143-1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm12-1.143a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-6.857 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286ZM120 128.971a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm5.714 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm16-1.142.125.006a1.143 1.143 0 1 1-.125-.006Zm11.429 0a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm-22.857 0a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm17.143-1.143a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285ZM136 125.543a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-13.143 1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm4.572-1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm18.857-2.286a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-16-1.143.124.007a1.143 1.143 0 1 1-.124-.007Zm11.428 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-22.857 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm36.572 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-5.715 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-37.143 1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm13.715-1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm9.714-1.143a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm18.286-3.428a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-11.429 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-28 1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm5.714-1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm17.715-1.143a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-5.715 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-6.857 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm17.143-4.571a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm-11.428 0a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm-5.143 1.142a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm-8-1.142a.571.571 0 1 1 0 1.142.571.571 0 0 1 0-1.142Zm-9.143 0a.571.571 0 1 1 0 1.142.571.571 0 0 1 0-1.142Zm30.286-3.429a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286ZM124 109.543a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm5.714 0a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm5.715-4.572a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm-22.858-1.142a.571.571 0 1 1 0 1.142.571.571 0 0 1 0-1.142Zm-11.428-3.429a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143ZM124 99.257a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143ZM49.143 55.829a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm5.714 0a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm-9.143-1.143a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm-5.714 0a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm21.143-1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143ZM52 52.4a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm12-1.143a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-6.857 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-19.429-1.143a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm5.715 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm16-1.143.124.007a1.143 1.143 0 1 1-.124-.007Zm11.428 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-22.857 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm17.143-1.142a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm-11.429-1.143a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm-13.143 1.143a.571.571 0 1 1 0 1.142.571.571 0 0 1 0-1.142Zm4.572-1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143ZM64 44.4a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-16-1.143.125.007a1.143 1.143 0 1 1-.125-.007Zm11.429 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-22.858 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm36.572 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-5.714 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286ZM30.286 44.4a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143ZM44 43.257a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm9.714-1.143a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286ZM72 38.686a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm-11.429 0a1.143 1.143 0 1 1 0 2.285 1.143 1.143 0 0 1 0-2.285Zm-28 1.143a.571.571 0 1 1 0 1.142.571.571 0 0 1 0-1.142Zm5.715-1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143ZM56 37.543a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-5.714 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-6.857 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286ZM60.57 32.97a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-11.428 0a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286ZM44 34.114a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm-8-1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm-9.143 0a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm30.286-3.428a1.143 1.143 0 1 1 0 2.286 1.143 1.143 0 0 1 0-2.286Zm-15.429 1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm5.715 0a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm5.714-4.572a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm-22.857-1.143a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Zm-11.429-3.428a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143ZM41.714 20.4a.571.571 0 1 1 0 1.143.571.571 0 0 1 0-1.143Z",
  fill: "#003CFF",
  fillRule: "nonzero",
  mask: "url(#error-block-image-empty-c)"
})), import_react66.default.createElement("path", {
  d: "M295.213 319.24c.744.546.745 1.433.002 1.98l-11.806 8.81c-1.069.799-3.326.474-4.853-.609l-35.622-25.241c-33.375 17.037-79.545 14.615-109.28-7.271-33.443-24.615-33.443-64.521 0-89.133 33.443-24.616 87.657-24.616 121.1 0 31.706 23.336 33.35 60.42 4.931 85.185-.543.473 35.528 26.278 35.528 26.278ZM148.06 220.015c-25.44 17.853-25.44 46.8 0 64.652 25.44 17.85 66.689 17.85 92.129 0 25.436-17.853 25.436-46.799 0-64.652-25.44-17.853-66.688-17.853-92.129 0Z",
  fill: "#5D96FE"
}), import_react66.default.createElement("path", {
  d: "M123.514 233.021c2.185-5.241 5.67-9.735 10.453-13.482M264.967 271.54c-2.185 5.24-5.67 9.734-10.453 13.481",
  stroke: "#FFF",
  strokeWidth: 0.75,
  strokeLinecap: "round",
  strokeLinejoin: "round"
}), import_react66.default.createElement("path", {
  d: "M81.143 252.571c7.574 0 13.714 23.88 13.714 31.649 0 6.97-4.942 12.755-11.429 13.871v11.672c0 1.235-.767 2.237-1.713 2.237-.904 0-1.644-.912-1.71-2.07l-.005-.167v-11.526c-7.04-.595-12.571-6.644-12.571-14.017 0-7.024 5.02-27.222 11.581-31.027l.096-.053c.027-.016.055-.03.082-.045l.067-.035.066-.033.1-.05.094-.041a3.34 3.34 0 0 1 .224-.093l.11-.042.097-.032c.038-.013.077-.025.115-.036l.053-.016.053-.014a3.351 3.351 0 0 1 .23-.055l.085-.016a3.95 3.95 0 0 1 .441-.054l.11-.005.11-.002Z",
  fill: "#FFCD6B",
  fillRule: "nonzero"
}), import_react66.default.createElement("g", {
  transform: "translate(283.429 177.143)",
  fillRule: "nonzero"
}, import_react66.default.createElement("path", {
  d: "M22.475.847c12.34 0 22.345 37.935 22.345 50.276 0 11.395-8.53 20.798-19.552 22.172v19.019c0 1.932-1.25 3.5-2.792 3.5-1.49 0-2.707-1.46-2.79-3.301l-.004-.2-.001-19.018C8.659 71.92.13 62.518.13 51.123.13 40.071 8.154 8.49 18.694 2.015l.054-.031a5.94 5.94 0 0 1 .214-.128l.088-.048c.213-.12.427-.228.642-.326l.135-.06.18-.075.135-.053a5.796 5.796 0 0 1 .464-.16 4.44 4.44 0 0 1 .33-.092l.124-.03a7.122 7.122 0 0 1 .31-.065l.018-.003a6.305 6.305 0 0 1 .756-.088l.165-.007.166-.002Z",
  fill: "#FFCD6B"
}), import_react66.default.createElement("path", {
  d: "M22.475.847c12.34 0 22.345 37.935 22.345 50.276 0 11.395-8.53 20.798-19.552 22.172v19.019c0 1.932-1.25 3.5-2.792 3.5-1.543 0-2.794-1.566-2.794-3.5V73.295C8.659 71.921.13 62.518.13 51.123.13 38.783 10.134.847 22.475.847Z",
  fill: "#FFCD6B"
}), import_react66.default.createElement("circle", {
  fill: "#FFB400",
  cx: 26.4,
  cy: 56.869,
  r: 1.45
}), import_react66.default.createElement("circle", {
  fill: "#FFB400",
  cx: 39.453,
  cy: 58.319,
  r: 1
}), import_react66.default.createElement("circle", {
  fill: "#FFB400",
  cx: 17.698,
  cy: 63.637,
  r: 2.417
}), import_react66.default.createElement("circle", {
  fill: "#FFB400",
  cx: 38.002,
  cy: 51.068,
  r: 2.417
}), import_react66.default.createElement("circle", {
  fill: "#FFB400",
  cx: 18.665,
  cy: 17.228,
  r: 2.417
}), import_react66.default.createElement("circle", {
  fill: "#FFB400",
  cx: 32.201,
  cy: 13.36,
  r: 2.417
}), import_react66.default.createElement("circle", {
  fill: "#FFB400",
  cx: 26.83,
  cy: 20.666,
  r: 1.45
}), import_react66.default.createElement("circle", {
  fill: "#FFB400",
  cx: 38.969,
  cy: 31.731,
  r: 2.417
}), import_react66.default.createElement("circle", {
  fill: "#FFB400",
  cx: 25.433,
  cy: 29.797,
  r: 1.45
}), import_react66.default.createElement("path", {
  d: "M34.197 53.033c0 9.825-6.934 18.017-16.172 19.987a22.44 22.44 0 0 0 4.45.448c12.34 0 22.344-10.004 22.344-22.345C44.82 38.783 34.815.847 22.475.847c8.947 14.03 11.722 40.891 11.722 52.186Z",
  fill: "#FBBE47"
}))));

// node_modules/antd-mobile/es/components/error-block/images/busy.js
var import_react67 = __toESM(require_react());
var busyImage = import_react67.default.createElement("svg", {
  viewBox: "0 0 400 400",
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink"
}, import_react67.default.createElement("defs", null, import_react67.default.createElement("linearGradient", {
  x1: "50%",
  y1: "-116.862%",
  x2: "50%",
  y2: "90.764%",
  id: "error-block-image-busy-a"
}, import_react67.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0.207,
  offset: "0%"
}), import_react67.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0.115,
  offset: "80.072%"
}), import_react67.default.createElement("stop", {
  stopColor: "#72A7FD",
  stopOpacity: 0,
  offset: "100%"
})), import_react67.default.createElement("circle", {
  id: "error-block-image-busy-b",
  cx: 34.857,
  cy: 34.857,
  r: 34.857
})), import_react67.default.createElement("g", {
  fill: "none",
  fillRule: "evenodd"
}, import_react67.default.createElement("path", {
  d: "M157.964 243.667H0L3.806 99.134a4.572 4.572 0 0 1 4.353-4.446l.217-.005h45.588V67.205a4.572 4.572 0 0 1 4.356-4.566l.216-.005 65.498-.001 2.554-58.688a4.571 4.571 0 0 1 4.779-4.368l.214.015 87.79 8.222a4.572 4.572 0 0 1 4.126 4.133l.015.213 3.146 69.652 74.976-17.906a4.571 4.571 0 0 1 5.628 4.23l.005.216v43.955h56.162v130.265l-56.163-.001v.002h-82.383v-.004h-66.919v1.098Zm-68.461-84.631h-9.968v8.435h9.968v-8.435Zm0-14.508h-9.968v8.436h9.968v-8.436Zm197.985-5.149h-9.967v8.432h9.967v-8.432Zm-197.985-8.806h-9.968v8.436h9.968v-8.436Zm197.985-5.153h-9.967v8.432h9.967v-8.432Zm0-14.503h-9.967v8.432h9.967v-8.432Zm-84.643-.777h-30.8v8.436h30.8v-8.436Zm84.643-13.186h-9.967v8.435h9.967v-8.435Zm-84.643-3.29h-30.8v8.435h30.8v-8.435Zm0-15.912h-30.8v8.436h30.8v-8.436Z",
  transform: "translate(18.286 51.286)",
  fill: "url(#error-block-image-busy-a)"
}), import_react67.default.createElement("path", {
  d: "m250.934 176.555-101.963 1.038c-5.276.054-9.51 4.374-9.455 9.65.054 5.274 4.374 9.507 9.649 9.454l.958-.01c-.376 7.363 3.679 59.93 34.894 62.659 4.203.367 7.432.39 7.475 4.609.042 4.218-3.176 4.307-7.37 4.76-34.593 3.737-34.136 56.004-33.61 63.357l-.957.01c-5.276.053-9.51 4.373-9.455 9.649.053 5.275 4.374 9.508 9.649 9.454l101.963-1.039c5.275-.054 9.508-4.374 9.455-9.648-.055-5.276-4.374-9.51-9.65-9.455l-.958.01c.377-7.363-.729-59.672-34.894-62.66-4.202-.367-7.432-.39-7.474-4.608-.043-4.219 3.175-4.308 7.369-4.76 31.276-3.377 34.136-56.004 33.61-63.357l.958-.01c5.276-.053 9.508-4.373 9.455-9.649-.055-5.276-4.374-9.509-9.65-9.454Z",
  fill: "#377EFF"
}), import_react67.default.createElement("path", {
  d: "M233.524 314.422c.108.684.772 1.148 1.483 1.035.711-.112 1.2-.758 1.091-1.443-.108-.684-.772-1.147-1.483-1.035-.711.113-1.2.759-1.091 1.443Zm-.894-5.644c.108.684.772 1.148 1.483 1.035.711-.112 1.2-.758 1.091-1.443-.108-.684-.772-1.147-1.483-1.035-.711.113-1.2.759-1.091 1.443Zm-.149 17.865c.108.684.773 1.147 1.483 1.035.711-.113 1.2-.759 1.091-1.443-.108-.684-.772-1.148-1.483-1.035-.71.112-1.2.758-1.09 1.443Zm-2.144-8.182c.109.684.773 1.148 1.484 1.035.71-.113 1.199-.759 1.09-1.443-.108-.684-.772-1.148-1.483-1.035-.71.113-1.2.759-1.09 1.443Zm-1.586-4.694c.108.684.772 1.148 1.483 1.035.711-.113 1.2-.759 1.091-1.443-.108-.684-.772-1.147-1.483-1.035-.711.113-1.2.759-1.091 1.443Zm-1.013-5.88c.109.685.773 1.148 1.484 1.036.71-.113 1.2-.759 1.09-1.443-.107-.684-.772-1.148-1.483-1.035-.71.113-1.199.759-1.09 1.443Zm.236 15.575c.108.685.772 1.148 1.483 1.035.71-.112 1.2-.758 1.09-1.442-.107-.685-.772-1.148-1.483-1.035-.71.112-1.199.758-1.09 1.442Zm-.4 4.494c.108.684.772 1.147 1.483 1.035.71-.113 1.2-.759 1.091-1.443-.108-.684-.773-1.148-1.483-1.035-.711.113-1.2.759-1.091 1.443Zm-3.88-8.601c.108.684.772 1.147 1.483 1.035.71-.113 1.199-.759 1.09-1.443-.108-.684-.772-1.148-1.483-1.035-.71.113-1.2.759-1.09 1.443Zm-.524-7.186c.065.41.463.688.89.62.426-.067.72-.454.654-.865-.065-.41-.463-.688-.89-.62-.426.067-.72.454-.654.865Zm-2.265-4.102c.109.684.773 1.148 1.484 1.035.71-.113 1.2-.759 1.09-1.443-.108-.684-.772-1.147-1.483-1.035-.71.113-1.199.759-1.09 1.443Zm-.545-6.518c.065.41.464.689.89.621.427-.067.72-.455.655-.865-.065-.41-.464-.689-.89-.621-.427.067-.72.455-.655.865Zm2.098 23.629c.109.684.773 1.147 1.484 1.035.71-.113 1.2-.759 1.09-1.443-.108-.684-.772-1.148-1.483-1.035-.71.112-1.199.758-1.09 1.443Zm-.756-9.65c.043.274.309.46.593.414a.512.512 0 0 0 .437-.577.512.512 0 0 0-.594-.414.512.512 0 0 0-.436.577Zm-.808 20.96c.109.684.773 1.147 1.484 1.034.71-.112 1.2-.758 1.09-1.442-.108-.685-.772-1.148-1.483-1.036-.71.113-1.199.759-1.09 1.443Zm-4.691-31.966c.065.41.463.689.89.621.426-.068.72-.455.654-.866-.065-.41-.463-.688-.89-.62-.426.067-.72.454-.654.865Zm2.098 23.628c.108.684.772 1.148 1.483 1.035.711-.112 1.2-.758 1.091-1.443-.108-.684-.772-1.147-1.483-1.035-.711.113-1.2.759-1.091 1.443Zm-1.967-12.416c.109.684.773 1.147 1.484 1.035.71-.113 1.199-.759 1.09-1.443-.108-.684-.772-1.148-1.483-1.035-.71.112-1.2.758-1.09 1.443Zm1.073 6.772c.108.685.772 1.148 1.483 1.035.711-.112 1.2-.758 1.091-1.442-.108-.685-.772-1.148-1.483-1.036-.711.113-1.2.759-1.091 1.443Zm-.009-3.131c.065.41.464.689.89.621.427-.068.72-.455.655-.866-.065-.41-.464-.688-.89-.62-.427.067-.72.454-.655.865Zm-1.43-9.03c.065.41.463.688.89.62.426-.067.72-.454.655-.865-.065-.41-.464-.689-.89-.62-.427.067-.72.454-.655.865ZM214.5 333.38c.108.685.772 1.148 1.483 1.036.711-.113 1.2-.759 1.091-1.443-.108-.684-.772-1.148-1.483-1.035-.711.112-1.2.758-1.091 1.442Zm-.156-7.178c.065.41.464.689.89.621.427-.067.72-.455.655-.865-.065-.41-.464-.689-.89-.621-.427.067-.72.455-.655.865Zm-1.871-4.72c.108.684.773 1.147 1.483 1.034.711-.112 1.2-.758 1.091-1.442-.108-.685-.772-1.148-1.483-1.035-.71.112-1.2.758-1.091 1.442Zm-1.614-6.857c.065.41.464.689.89.621.427-.068.72-.455.655-.866-.065-.41-.464-.688-.89-.62-.427.067-.72.454-.655.865Zm-.894-5.644c.065.41.464.689.89.621.427-.067.72-.455.655-.866-.065-.41-.463-.688-.89-.62-.427.067-.72.455-.655.865Zm-1.43-9.03c.065.41.464.688.89.62.427-.067.72-.454.655-.865-.065-.41-.464-.688-.89-.62-.427.067-.72.454-.655.865Zm-1.958 14.225c.065.41.463.689.89.62.426-.067.72-.454.654-.865-.065-.41-.463-.688-.89-.62-.426.067-.72.454-.654.865Zm-.703 12.81c.065.41.464.688.89.62.427-.067.72-.455.655-.865-.065-.41-.463-.689-.89-.621-.427.067-.72.455-.655.866Zm-4.543-22.536c.065.41.463.689.89.621.426-.067.72-.455.654-.865-.065-.41-.463-.689-.89-.621-.426.067-.72.455-.654.865Zm2.806 30.138c.065.41.463.689.89.621.426-.067.72-.455.654-.865-.065-.41-.463-.689-.89-.621-.426.067-.72.455-.654.865Zm-5.694-17.996c.065.41.463.688.89.62.426-.067.72-.455.654-.865-.065-.41-.463-.689-.89-.621-.426.067-.72.455-.654.866Zm-2.935-13.343c.066.41.464.688.89.62.427-.067.72-.454.655-.865-.065-.41-.463-.689-.89-.621-.426.068-.72.455-.655.866Z",
  fill: "#003CFF",
  fillRule: "nonzero"
}), import_react67.default.createElement("path", {
  d: "m250.934 176.555-101.963 1.038c-5.276.054-9.51 4.374-9.455 9.65.054 5.274 4.374 9.507 9.649 9.454l101.963-1.04c5.276-.052 9.508-4.372 9.455-9.648-.055-5.276-4.374-9.509-9.65-9.454ZM252.64 331.241l-101.964 1.038c-5.275.054-9.508 4.374-9.454 9.65.054 5.275 4.374 9.508 9.649 9.454l101.963-1.039c5.275-.053 9.507-4.373 9.454-9.649-.054-5.275-4.374-9.508-9.649-9.454Z",
  fill: "#7EACFF"
}), import_react67.default.createElement("path", {
  stroke: "#003CFF",
  strokeWidth: 0.75,
  strokeLinecap: "round",
  strokeLinejoin: "round",
  d: "m196.824 197.298 52.216-.506M193.329 330.5h52.215"
}), import_react67.default.createElement("path", {
  d: "M167.367 228.041c-4.091-10.787-6.086-20.934-5.985-30.44",
  stroke: "#FFF",
  strokeWidth: 0.75,
  strokeLinecap: "round",
  strokeLinejoin: "round"
}), import_react67.default.createElement("circle", {
  cx: 14.857,
  cy: 14.857,
  r: 14.857,
  transform: "translate(106.857 248.571)",
  fill: "#FFCD6B",
  fillRule: "nonzero"
}), import_react67.default.createElement("g", {
  transform: "translate(236.571 284.571)"
}, import_react67.default.createElement("mask", {
  id: "error-block-image-busy-c",
  fill: "#fff"
}, import_react67.default.createElement("use", {
  xlinkHref: "#error-block-image-busy-b"
})), import_react67.default.createElement("use", {
  fill: "#FBBE47",
  fillRule: "nonzero",
  xlinkHref: "#error-block-image-busy-b"
}), import_react67.default.createElement("circle", {
  fill: "#FFCD6B",
  fillRule: "nonzero",
  mask: "url(#error-block-image-busy-c)",
  cx: 25.714,
  cy: 28,
  r: 34.857
}), import_react67.default.createElement("circle", {
  fill: "#FFF",
  fillRule: "nonzero",
  mask: "url(#error-block-image-busy-c)",
  cx: 22.286,
  cy: 18.857,
  r: 3.429
}))));

// node_modules/antd-mobile/es/components/error-block/error-block.js
var imageRecord = {
  "default": defaultImage,
  "disconnected": disconnectedImage,
  "empty": emptyImage,
  "busy": busyImage
};
var ErrorBlock = createErrorBlock(imageRecord);

// node_modules/antd-mobile/es/components/error-block/index.js
var error_block_default = ErrorBlock;

// node_modules/antd-mobile/es/components/floating-bubble/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/floating-bubble/floating-bubble.css";

// node_modules/antd-mobile/es/components/floating-bubble/floating-bubble.js
var import_react68 = __toESM(require_react());
var classPrefix30 = `adm-floating-bubble`;
var defaultProps24 = {
  axis: "y"
};
var FloatingBubble = (p) => {
  const props = mergeProps(defaultProps24, p);
  const boundaryRef = (0, import_react68.useRef)(null);
  const buttonRef = (0, import_react68.useRef)(null);
  const [{
    x,
    y,
    opacity
  }, api] = useSpring(() => ({
    x: 0,
    y: 0,
    opacity: 1
  }));
  const bind = useDrag((state) => {
    let nextX = state.offset[0];
    let nextY = state.offset[1];
    if (state.last && props.magnetic) {
      const boundary = boundaryRef.current;
      const button = buttonRef.current;
      if (!boundary || !button)
        return;
      const boundaryRect = boundary.getBoundingClientRect();
      const buttonRect = button.getBoundingClientRect();
      if (props.magnetic === "x") {
        const compensation = x.goal - x.get();
        const leftDistance = buttonRect.left + compensation - boundaryRect.left;
        const rightDistance = boundaryRect.right - (buttonRect.right + compensation);
        if (rightDistance <= leftDistance) {
          nextX += rightDistance;
        } else {
          nextX -= leftDistance;
        }
      } else if (props.magnetic === "y") {
        const compensation = y.goal - y.get();
        const topDistance = buttonRect.top + compensation - boundaryRect.top;
        const bottomDistance = boundaryRect.bottom - (buttonRect.bottom + compensation);
        if (bottomDistance <= topDistance) {
          nextY += bottomDistance;
        } else {
          nextY -= topDistance;
        }
      }
    }
    api.start({
      x: nextX,
      y: nextY
    });
    api.start({
      opacity: state.active ? 0.8 : 1
    });
  }, {
    axis: props.axis === "xy" ? void 0 : props.axis,
    pointer: {
      touch: true
    },
    filterTaps: true,
    bounds: boundaryRef,
    from: () => [x.get(), y.get()]
  });
  return withNativeProps(props, import_react68.default.createElement("div", {
    className: classPrefix30
  }, import_react68.default.createElement("div", {
    className: `${classPrefix30}-boundary-outer`
  }, import_react68.default.createElement("div", {
    className: `${classPrefix30}-boundary`,
    ref: boundaryRef
  })), import_react68.default.createElement(animated.div, Object.assign({}, bind(), {
    style: {
      opacity,
      transform: to([x, y], (x2, y2) => `translate(${x2}px, ${y2}px)`)
    },
    onClick: props.onClick,
    className: `${classPrefix30}-button`,
    ref: buttonRef
  }), props.children)));
};

// node_modules/antd-mobile/es/components/floating-bubble/index.js
var floating_bubble_default = FloatingBubble;

// node_modules/antd-mobile/es/components/floating-panel/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/floating-panel/floating-panel.css";

// node_modules/antd-mobile/es/components/floating-panel/floating-panel.js
var import_react70 = __toESM(require_react());

// node_modules/antd-mobile/es/utils/nearest.js
function nearest(arr, target) {
  return arr.reduce((pre, cur) => {
    return Math.abs(pre - target) < Math.abs(cur - target) ? pre : cur;
  });
}

// node_modules/antd-mobile/es/components/floating-panel/floating-panel.js
var defaultProps25 = {
  handleDraggingOfContent: true
};
var FloatingPanel = (0, import_react70.forwardRef)((p, ref) => {
  var _a, _b;
  const props = mergeProps(defaultProps25, p);
  const {
    anchors
  } = props;
  const maxHeight = (_a = anchors[anchors.length - 1]) !== null && _a !== void 0 ? _a : window.innerHeight;
  const possibles = anchors.map((x) => -x);
  const elementRef = (0, import_react70.useRef)(null);
  const headerRef = (0, import_react70.useRef)(null);
  const contentRef = (0, import_react70.useRef)(null);
  const [pulling, setPulling] = (0, import_react70.useState)(false);
  const pullingRef = (0, import_react70.useRef)(false);
  const bounds = {
    top: possibles[possibles.length - 1],
    bottom: possibles[0]
  };
  const onHeightChange = useMemoizedFn_default((_b = props.onHeightChange) !== null && _b !== void 0 ? _b : () => {
  });
  const [{
    y
  }, api] = useSpring(() => ({
    y: bounds.bottom,
    config: {
      tension: 300
    },
    onChange: (result) => {
      onHeightChange(-result.value.y, y.isAnimating);
    }
  }));
  useDrag((state) => {
    const [, offsetY] = state.offset;
    if (state.first) {
      const target = state.event.target;
      const header = headerRef.current;
      if (header === target || (header === null || header === void 0 ? void 0 : header.contains(target))) {
        pullingRef.current = true;
      } else {
        if (!props.handleDraggingOfContent)
          return;
        const reachedTop = y.goal <= bounds.top;
        const content = contentRef.current;
        if (!content)
          return;
        if (reachedTop) {
          if (content.scrollTop <= 0 && state.direction[1] > 0) {
            pullingRef.current = true;
          }
        } else {
          pullingRef.current = true;
        }
      }
    }
    setPulling(pullingRef.current);
    if (!pullingRef.current)
      return;
    const {
      event
    } = state;
    if (event.cancelable) {
      event.preventDefault();
    }
    event.stopPropagation();
    let nextY = offsetY;
    if (state.last) {
      pullingRef.current = false;
      setPulling(false);
      nextY = nearest(possibles, offsetY);
    }
    api.start({
      y: nextY
    });
  }, {
    axis: "y",
    bounds,
    rubberband: true,
    from: () => [0, y.get()],
    pointer: {
      touch: true
    },
    target: elementRef,
    eventOptions: supportsPassive ? {
      passive: false
    } : false
  });
  (0, import_react70.useImperativeHandle)(ref, () => ({
    setHeight: (height, options) => {
      api.start({
        y: -height,
        immediate: options === null || options === void 0 ? void 0 : options.immediate
      });
    }
  }), [api]);
  useLockScroll(elementRef, true);
  return withNativeProps(props, import_react70.default.createElement(animated.div, {
    ref: elementRef,
    className: "adm-floating-panel",
    style: {
      height: maxHeight,
      translateY: y.to((y2) => `calc(100% + (${y2}px))`)
    }
  }, import_react70.default.createElement("div", {
    className: "adm-floating-panel-mask",
    style: {
      display: pulling ? "block" : "none"
    }
  }), import_react70.default.createElement("div", {
    className: "adm-floating-panel-header",
    ref: headerRef
  }, import_react70.default.createElement("div", {
    className: "adm-floating-panel-bar"
  })), import_react70.default.createElement("div", {
    className: "adm-floating-panel-content",
    ref: contentRef
  }, props.children)));
});

// node_modules/antd-mobile/es/components/floating-panel/index.js
var floating_panel_default = FloatingPanel;

// node_modules/antd-mobile/es/components/form/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/form/index.css";

// node_modules/antd-mobile/es/components/form/form.js
var import_react76 = __toESM(require_react());
var import_classnames25 = __toESM(require_classnames());

// node_modules/rc-field-form/es/index.js
var React71 = __toESM(require_react());

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
function _objectWithoutProperties2(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose2(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}

// node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

// node_modules/@babel/runtime/helpers/esm/objectSpread2.js
function ownKeys2(object4, enumerableOnly) {
  var keys = Object.keys(object4);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object4);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object4, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread22(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      _defineProperty2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}

// node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}

// node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}

// node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}

// node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}

// node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// node_modules/@babel/runtime/helpers/esm/toConsumableArray.js
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

// node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

// node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf3(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}

// node_modules/@babel/runtime/helpers/esm/inherits.js
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}

// node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf3(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}

// node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}

// node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}

// node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js
function _possibleConstructorReturn(self2, call3) {
  if (call3 && (_typeof(call3) === "object" || typeof call3 === "function")) {
    return call3;
  } else if (call3 !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self2);
}

// node_modules/@babel/runtime/helpers/esm/createSuper.js
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}

// node_modules/rc-util/es/Children/toArray.js
var import_react72 = __toESM(require_react());
var import_react_is2 = __toESM(require_react_is());
function toArray(children) {
  var option = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var ret = [];
  import_react72.default.Children.forEach(children, function(child) {
    if ((child === void 0 || child === null) && !option.keepEmpty) {
      return;
    }
    if (Array.isArray(child)) {
      ret = ret.concat(toArray(child));
    } else if ((0, import_react_is2.isFragment)(child) && child.props) {
      ret = ret.concat(toArray(child.props.children, option));
    } else {
      ret.push(child);
    }
  });
  return ret;
}

// node_modules/rc-util/es/warning.js
var warned = {};
function warning(valid, message) {
  if (!valid && console !== void 0) {
    console.error("Warning: ".concat(message));
  }
}
function call2(method4, valid, message) {
  if (!valid && !warned[message]) {
    method4(false, message);
    warned[message] = true;
  }
}
function warningOnce(valid, message) {
  call2(warning, valid, message);
}
var warning_default = warningOnce;

// node_modules/rc-field-form/es/Field.js
var React65 = __toESM(require_react());

// node_modules/rc-field-form/es/FieldContext.js
var React63 = __toESM(require_react());
var HOOK_MARK = "RC_FORM_INTERNAL_HOOKS";
var warningFunc = function warningFunc2() {
  warning_default(false, "Can not find FormContext. Please make sure you wrap Field under Form.");
};
var Context = React63.createContext({
  getFieldValue: warningFunc,
  getFieldsValue: warningFunc,
  getFieldError: warningFunc,
  getFieldWarning: warningFunc,
  getFieldsError: warningFunc,
  isFieldsTouched: warningFunc,
  isFieldTouched: warningFunc,
  isFieldValidating: warningFunc,
  isFieldsValidating: warningFunc,
  resetFields: warningFunc,
  setFields: warningFunc,
  setFieldsValue: warningFunc,
  validateFields: warningFunc,
  submit: warningFunc,
  getInternalHooks: function getInternalHooks() {
    warningFunc();
    return {
      dispatch: warningFunc,
      initEntityValue: warningFunc,
      registerField: warningFunc,
      useSubscribe: warningFunc,
      setInitialValues: warningFunc,
      destroyForm: warningFunc,
      setCallbacks: warningFunc,
      registerWatch: warningFunc,
      getFields: warningFunc,
      setValidateMessages: warningFunc,
      setPreserve: warningFunc,
      getInitialValue: warningFunc
    };
  }
});
var FieldContext_default = Context;

// node_modules/rc-field-form/es/utils/typeUtil.js
function toArray2(value) {
  if (value === void 0 || value === null) {
    return [];
  }
  return Array.isArray(value) ? value : [value];
}

// node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js
function _regeneratorRuntime() {
  "use strict";
  _regeneratorRuntime = function _regeneratorRuntime2() {
    return exports;
  };
  var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = typeof Symbol == "function" ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define2(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    }), obj[key];
  }
  try {
    define2({}, "");
  } catch (err) {
    define2 = function define3(obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self2, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context2(tryLocsList || []);
    return generator._invoke = function(innerFn2, self3, context2) {
      var state = "suspendedStart";
      return function(method4, arg) {
        if (state === "executing")
          throw new Error("Generator is already running");
        if (state === "completed") {
          if (method4 === "throw")
            throw arg;
          return doneResult();
        }
        for (context2.method = method4, context2.arg = arg; ; ) {
          var delegate = context2.delegate;
          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context2);
            if (delegateResult) {
              if (delegateResult === ContinueSentinel)
                continue;
              return delegateResult;
            }
          }
          if (context2.method === "next")
            context2.sent = context2._sent = context2.arg;
          else if (context2.method === "throw") {
            if (state === "suspendedStart")
              throw state = "completed", context2.arg;
            context2.dispatchException(context2.arg);
          } else
            context2.method === "return" && context2.abrupt("return", context2.arg);
          state = "executing";
          var record2 = tryCatch(innerFn2, self3, context2);
          if (record2.type === "normal") {
            if (state = context2.done ? "completed" : "suspendedYield", record2.arg === ContinueSentinel)
              continue;
            return {
              value: record2.arg,
              done: context2.done
            };
          }
          record2.type === "throw" && (state = "completed", context2.method = "throw", context2.arg = record2.arg);
        }
      };
    }(innerFn, self2, context), generator;
  }
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {
  }
  function GeneratorFunction() {
  }
  function GeneratorFunctionPrototype() {
  }
  var IteratorPrototype = {};
  define2(IteratorPrototype, iteratorSymbol, function() {
    return this;
  });
  var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method4) {
      define2(prototype, method4, function(arg) {
        return this._invoke(method4, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method4, arg, resolve, reject) {
      var record2 = tryCatch(generator[method4], generator, arg);
      if (record2.type !== "throw") {
        var result = record2.arg, value = result.value;
        return value && _typeof(value) == "object" && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function(value2) {
          invoke("next", value2, resolve, reject);
        }, function(err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function(unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function(error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record2.arg);
    }
    var previousPromise;
    this._invoke = function(method4, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method4, arg, resolve, reject);
        });
      }
      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var method4 = delegate.iterator[context.method];
    if (method4 === void 0) {
      if (context.delegate = null, context.method === "throw") {
        if (delegate.iterator["return"] && (context.method = "return", context.arg = void 0, maybeInvokeDelegate(delegate, context), context.method === "throw"))
          return ContinueSentinel;
        context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }
      return ContinueSentinel;
    }
    var record2 = tryCatch(method4, delegate.iterator, context.arg);
    if (record2.type === "throw")
      return context.method = "throw", context.arg = record2.arg, context.delegate = null, ContinueSentinel;
    var info = record2.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, context.method !== "return" && (context.method = "next", context.arg = void 0), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record2 = entry.completion || {};
    record2.type = "normal", delete record2.arg, entry.completion = record2;
  }
  function Context2(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(true);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod)
        return iteratorMethod.call(iterable);
      if (typeof iterable.next == "function")
        return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1, next = function next2() {
          for (; ++i < iterable.length; ) {
            if (hasOwn.call(iterable, i))
              return next2.value = iterable[i], next2.done = false, next2;
          }
          return next2.value = void 0, next2.done = true, next2;
        };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: void 0,
      done: true
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define2(Gp, "constructor", GeneratorFunctionPrototype), define2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define2(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun == "function" && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction");
  }, exports.mark = function(genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define2(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function(arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define2(AsyncIterator.prototype, asyncIteratorSymbol, function() {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function(innerFn, outerFn, self2, tryLocsList, PromiseImpl) {
    PromiseImpl === void 0 && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self2, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define2(Gp, toStringTagSymbol, "Generator"), define2(Gp, iteratorSymbol, function() {
    return this;
  }), define2(Gp, "toString", function() {
    return "[object Generator]";
  }), exports.keys = function(object4) {
    var keys = [];
    for (var key in object4) {
      keys.push(key);
    }
    return keys.reverse(), function next() {
      for (; keys.length; ) {
        var key2 = keys.pop();
        if (key2 in object4)
          return next.value = key2, next.done = false, next;
      }
      return next.done = true, next;
    };
  }, exports.values = values, Context2.prototype = {
    constructor: Context2,
    reset: function reset(skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(resetTryEntry), !skipTempReset)
        for (var name in this) {
          name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = void 0);
        }
    },
    stop: function stop() {
      this.done = true;
      var rootRecord = this.tryEntries[0].completion;
      if (rootRecord.type === "throw")
        throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done)
        throw exception;
      var context = this;
      function handle(loc, caught) {
        return record2.type = "throw", record2.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = void 0), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i], record2 = entry.completion;
        if (entry.tryLoc === "root")
          return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc)
              return handle(entry.catchLoc, true);
            if (this.prev < entry.finallyLoc)
              return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc)
              return handle(entry.catchLoc, true);
          } else {
            if (!hasFinally)
              throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc)
              return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(type4, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && (type4 === "break" || type4 === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record2 = finallyEntry ? finallyEntry.completion : {};
      return record2.type = type4, record2.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record2);
    },
    complete: function complete(record2, afterLoc) {
      if (record2.type === "throw")
        throw record2.arg;
      return record2.type === "break" || record2.type === "continue" ? this.next = record2.arg : record2.type === "return" ? (this.rval = this.arg = record2.arg, this.method = "return", this.next = "end") : record2.type === "normal" && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc)
          return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record2 = entry.completion;
          if (record2.type === "throw") {
            var thrown = record2.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName,
        nextLoc
      }, this.method === "next" && (this.arg = void 0), ContinueSentinel;
    }
  }, exports;
}

// node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function() {
    var self2 = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self2, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}

// node_modules/async-validator/dist-web/index.js
function _extends2() {
  _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf2(subClass, superClass);
}
function _getPrototypeOf2(o) {
  _getPrototypeOf2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf3(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf2(o);
}
function _setPrototypeOf2(o, p) {
  _setPrototypeOf2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf3(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf2(o, p);
}
function _isNativeReflectConstruct2() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct2()) {
    _construct = Reflect.construct.bind();
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a = [null];
      a.push.apply(a, args2);
      var Constructor = Function.bind.apply(Parent2, a);
      var instance = new Constructor();
      if (Class2)
        _setPrototypeOf2(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
    if (Class2 === null || !_isNativeFunction(Class2))
      return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2))
        return _cache.get(Class2);
      _cache.set(Class2, Wrapper2);
    }
    function Wrapper2() {
      return _construct(Class2, arguments, _getPrototypeOf2(this).constructor);
    }
    Wrapper2.prototype = Object.create(Class2.prototype, {
      constructor: {
        value: Wrapper2,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf2(Wrapper2, Class2);
  };
  return _wrapNativeSuper(Class);
}
var formatRegExp = /%[sdj%]/g;
var warning2 = function warning3() {
};
if (typeof process !== "undefined" && process.env && true && typeof window !== "undefined" && typeof document !== "undefined") {
  warning2 = function warning4(type4, errors) {
    if (typeof console !== "undefined" && console.warn && typeof ASYNC_VALIDATOR_NO_WARNING === "undefined") {
      if (errors.every(function(e) {
        return typeof e === "string";
      })) {
        console.warn(type4, errors);
      }
    }
  };
}
function convertFieldsError(errors) {
  if (!errors || !errors.length)
    return null;
  var fields = {};
  errors.forEach(function(error) {
    var field = error.field;
    fields[field] = fields[field] || [];
    fields[field].push(error);
  });
  return fields;
}
function format(template) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  var i = 0;
  var len = args.length;
  if (typeof template === "function") {
    return template.apply(null, args);
  }
  if (typeof template === "string") {
    var str = template.replace(formatRegExp, function(x) {
      if (x === "%%") {
        return "%";
      }
      if (i >= len) {
        return x;
      }
      switch (x) {
        case "%s":
          return String(args[i++]);
        case "%d":
          return Number(args[i++]);
        case "%j":
          try {
            return JSON.stringify(args[i++]);
          } catch (_) {
            return "[Circular]";
          }
          break;
        default:
          return x;
      }
    });
    return str;
  }
  return template;
}
function isNativeStringType(type4) {
  return type4 === "string" || type4 === "url" || type4 === "hex" || type4 === "email" || type4 === "date" || type4 === "pattern";
}
function isEmptyValue(value, type4) {
  if (value === void 0 || value === null) {
    return true;
  }
  if (type4 === "array" && Array.isArray(value) && !value.length) {
    return true;
  }
  if (isNativeStringType(type4) && typeof value === "string" && !value) {
    return true;
  }
  return false;
}
function asyncParallelArray(arr, func, callback) {
  var results = [];
  var total = 0;
  var arrLength = arr.length;
  function count(errors) {
    results.push.apply(results, errors || []);
    total++;
    if (total === arrLength) {
      callback(results);
    }
  }
  arr.forEach(function(a) {
    func(a, count);
  });
}
function asyncSerialArray(arr, func, callback) {
  var index = 0;
  var arrLength = arr.length;
  function next(errors) {
    if (errors && errors.length) {
      callback(errors);
      return;
    }
    var original = index;
    index = index + 1;
    if (original < arrLength) {
      func(arr[original], next);
    } else {
      callback([]);
    }
  }
  next([]);
}
function flattenObjArr(objArr) {
  var ret = [];
  Object.keys(objArr).forEach(function(k) {
    ret.push.apply(ret, objArr[k] || []);
  });
  return ret;
}
var AsyncValidationError = function(_Error) {
  _inheritsLoose(AsyncValidationError2, _Error);
  function AsyncValidationError2(errors, fields) {
    var _this;
    _this = _Error.call(this, "Async Validation Error") || this;
    _this.errors = errors;
    _this.fields = fields;
    return _this;
  }
  return AsyncValidationError2;
}(_wrapNativeSuper(Error));
function asyncMap(objArr, option, func, callback, source) {
  if (option.first) {
    var _pending = new Promise(function(resolve, reject) {
      var next = function next2(errors) {
        callback(errors);
        return errors.length ? reject(new AsyncValidationError(errors, convertFieldsError(errors))) : resolve(source);
      };
      var flattenArr = flattenObjArr(objArr);
      asyncSerialArray(flattenArr, func, next);
    });
    _pending["catch"](function(e) {
      return e;
    });
    return _pending;
  }
  var firstFields = option.firstFields === true ? Object.keys(objArr) : option.firstFields || [];
  var objArrKeys = Object.keys(objArr);
  var objArrLength = objArrKeys.length;
  var total = 0;
  var results = [];
  var pending = new Promise(function(resolve, reject) {
    var next = function next2(errors) {
      results.push.apply(results, errors);
      total++;
      if (total === objArrLength) {
        callback(results);
        return results.length ? reject(new AsyncValidationError(results, convertFieldsError(results))) : resolve(source);
      }
    };
    if (!objArrKeys.length) {
      callback(results);
      resolve(source);
    }
    objArrKeys.forEach(function(key) {
      var arr = objArr[key];
      if (firstFields.indexOf(key) !== -1) {
        asyncSerialArray(arr, func, next);
      } else {
        asyncParallelArray(arr, func, next);
      }
    });
  });
  pending["catch"](function(e) {
    return e;
  });
  return pending;
}
function isErrorObj(obj) {
  return !!(obj && obj.message !== void 0);
}
function getValue(value, path) {
  var v = value;
  for (var i = 0; i < path.length; i++) {
    if (v == void 0) {
      return v;
    }
    v = v[path[i]];
  }
  return v;
}
function complementError(rule, source) {
  return function(oe) {
    var fieldValue;
    if (rule.fullFields) {
      fieldValue = getValue(source, rule.fullFields);
    } else {
      fieldValue = source[oe.field || rule.fullField];
    }
    if (isErrorObj(oe)) {
      oe.field = oe.field || rule.fullField;
      oe.fieldValue = fieldValue;
      return oe;
    }
    return {
      message: typeof oe === "function" ? oe() : oe,
      fieldValue,
      field: oe.field || rule.fullField
    };
  };
}
function deepMerge(target, source) {
  if (source) {
    for (var s in source) {
      if (source.hasOwnProperty(s)) {
        var value = source[s];
        if (typeof value === "object" && typeof target[s] === "object") {
          target[s] = _extends2({}, target[s], value);
        } else {
          target[s] = value;
        }
      }
    }
  }
  return target;
}
var required$1 = function required(rule, value, source, errors, options, type4) {
  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value, type4 || rule.type))) {
    errors.push(format(options.messages.required, rule.fullField));
  }
};
var whitespace = function whitespace2(rule, value, source, errors, options) {
  if (/^\s+$/.test(value) || value === "") {
    errors.push(format(options.messages.whitespace, rule.fullField));
  }
};
var urlReg;
var getUrlRegex = function() {
  if (urlReg) {
    return urlReg;
  }
  var word = "[a-fA-F\\d:]";
  var b = function b2(options) {
    return options && options.includeBoundaries ? "(?:(?<=\\s|^)(?=" + word + ")|(?<=" + word + ")(?=\\s|$))" : "";
  };
  var v4 = "(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}";
  var v6seg = "[a-fA-F\\d]{1,4}";
  var v6 = ("\n(?:\n(?:" + v6seg + ":){7}(?:" + v6seg + "|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:" + v6seg + ":){6}(?:" + v4 + "|:" + v6seg + "|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:" + v6seg + ":){5}(?::" + v4 + "|(?::" + v6seg + "){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:" + v6seg + ":){4}(?:(?::" + v6seg + "){0,1}:" + v4 + "|(?::" + v6seg + "){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:" + v6seg + ":){3}(?:(?::" + v6seg + "){0,2}:" + v4 + "|(?::" + v6seg + "){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:" + v6seg + ":){2}(?:(?::" + v6seg + "){0,3}:" + v4 + "|(?::" + v6seg + "){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:" + v6seg + ":){1}(?:(?::" + v6seg + "){0,4}:" + v4 + "|(?::" + v6seg + "){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::" + v6seg + "){0,5}:" + v4 + "|(?::" + v6seg + "){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n").replace(/\s*\/\/.*$/gm, "").replace(/\n/g, "").trim();
  var v46Exact = new RegExp("(?:^" + v4 + "$)|(?:^" + v6 + "$)");
  var v4exact = new RegExp("^" + v4 + "$");
  var v6exact = new RegExp("^" + v6 + "$");
  var ip = function ip2(options) {
    return options && options.exact ? v46Exact : new RegExp("(?:" + b(options) + v4 + b(options) + ")|(?:" + b(options) + v6 + b(options) + ")", "g");
  };
  ip.v4 = function(options) {
    return options && options.exact ? v4exact : new RegExp("" + b(options) + v4 + b(options), "g");
  };
  ip.v6 = function(options) {
    return options && options.exact ? v6exact : new RegExp("" + b(options) + v6 + b(options), "g");
  };
  var protocol = "(?:(?:[a-z]+:)?//)";
  var auth = "(?:\\S+(?::\\S*)?@)?";
  var ipv4 = ip.v4().source;
  var ipv6 = ip.v6().source;
  var host = "(?:(?:[a-z\\u00a1-\\uffff0-9][-_]*)*[a-z\\u00a1-\\uffff0-9]+)";
  var domain = "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*";
  var tld = "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))";
  var port = "(?::\\d{2,5})?";
  var path = '(?:[/?#][^\\s"]*)?';
  var regex = "(?:" + protocol + "|www\\.)" + auth + "(?:localhost|" + ipv4 + "|" + ipv6 + "|" + host + domain + tld + ")" + port + path;
  urlReg = new RegExp("(?:^" + regex + "$)", "i");
  return urlReg;
};
var pattern$2 = {
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+\.)+[a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}))$/,
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
};
var types = {
  integer: function integer(value) {
    return types.number(value) && parseInt(value, 10) === value;
  },
  "float": function float(value) {
    return types.number(value) && !types.integer(value);
  },
  array: function array(value) {
    return Array.isArray(value);
  },
  regexp: function regexp(value) {
    if (value instanceof RegExp) {
      return true;
    }
    try {
      return !!new RegExp(value);
    } catch (e) {
      return false;
    }
  },
  date: function date(value) {
    return typeof value.getTime === "function" && typeof value.getMonth === "function" && typeof value.getYear === "function" && !isNaN(value.getTime());
  },
  number: function number(value) {
    if (isNaN(value)) {
      return false;
    }
    return typeof value === "number";
  },
  object: function object(value) {
    return typeof value === "object" && !types.array(value);
  },
  method: function method(value) {
    return typeof value === "function";
  },
  email: function email(value) {
    return typeof value === "string" && value.length <= 320 && !!value.match(pattern$2.email);
  },
  url: function url(value) {
    return typeof value === "string" && value.length <= 2048 && !!value.match(getUrlRegex());
  },
  hex: function hex(value) {
    return typeof value === "string" && !!value.match(pattern$2.hex);
  }
};
var type$1 = function type(rule, value, source, errors, options) {
  if (rule.required && value === void 0) {
    required$1(rule, value, source, errors, options);
    return;
  }
  var custom = ["integer", "float", "array", "regexp", "object", "method", "email", "number", "date", "url", "hex"];
  var ruleType = rule.type;
  if (custom.indexOf(ruleType) > -1) {
    if (!types[ruleType](value)) {
      errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));
    }
  } else if (ruleType && typeof value !== rule.type) {
    errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));
  }
};
var range = function range2(rule, value, source, errors, options) {
  var len = typeof rule.len === "number";
  var min3 = typeof rule.min === "number";
  var max3 = typeof rule.max === "number";
  var spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
  var val = value;
  var key = null;
  var num = typeof value === "number";
  var str = typeof value === "string";
  var arr = Array.isArray(value);
  if (num) {
    key = "number";
  } else if (str) {
    key = "string";
  } else if (arr) {
    key = "array";
  }
  if (!key) {
    return false;
  }
  if (arr) {
    val = value.length;
  }
  if (str) {
    val = value.replace(spRegexp, "_").length;
  }
  if (len) {
    if (val !== rule.len) {
      errors.push(format(options.messages[key].len, rule.fullField, rule.len));
    }
  } else if (min3 && !max3 && val < rule.min) {
    errors.push(format(options.messages[key].min, rule.fullField, rule.min));
  } else if (max3 && !min3 && val > rule.max) {
    errors.push(format(options.messages[key].max, rule.fullField, rule.max));
  } else if (min3 && max3 && (val < rule.min || val > rule.max)) {
    errors.push(format(options.messages[key].range, rule.fullField, rule.min, rule.max));
  }
};
var ENUM$1 = "enum";
var enumerable$1 = function enumerable(rule, value, source, errors, options) {
  rule[ENUM$1] = Array.isArray(rule[ENUM$1]) ? rule[ENUM$1] : [];
  if (rule[ENUM$1].indexOf(value) === -1) {
    errors.push(format(options.messages[ENUM$1], rule.fullField, rule[ENUM$1].join(", ")));
  }
};
var pattern$1 = function pattern(rule, value, source, errors, options) {
  if (rule.pattern) {
    if (rule.pattern instanceof RegExp) {
      rule.pattern.lastIndex = 0;
      if (!rule.pattern.test(value)) {
        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    } else if (typeof rule.pattern === "string") {
      var _pattern = new RegExp(rule.pattern);
      if (!_pattern.test(value)) {
        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    }
  }
};
var rules = {
  required: required$1,
  whitespace,
  type: type$1,
  range,
  "enum": enumerable$1,
  pattern: pattern$1
};
var string = function string2(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, "string") && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options, "string");
    if (!isEmptyValue(value, "string")) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
      rules.pattern(rule, value, source, errors, options);
      if (rule.whitespace === true) {
        rules.whitespace(rule, value, source, errors, options);
      }
    }
  }
  callback(errors);
};
var method2 = function method3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var number2 = function number3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (value === "") {
      value = void 0;
    }
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var _boolean = function _boolean2(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var regexp2 = function regexp3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (!isEmptyValue(value)) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var integer2 = function integer3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var floatFn = function floatFn2(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var array2 = function array3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((value === void 0 || value === null) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options, "array");
    if (value !== void 0 && value !== null) {
      rules.type(rule, value, source, errors, options);
      rules.range(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var object2 = function object3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var ENUM = "enum";
var enumerable2 = function enumerable3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (value !== void 0) {
      rules[ENUM](rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var pattern2 = function pattern3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, "string") && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (!isEmptyValue(value, "string")) {
      rules.pattern(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var date2 = function date3(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, "date") && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
    if (!isEmptyValue(value, "date")) {
      var dateObject;
      if (value instanceof Date) {
        dateObject = value;
      } else {
        dateObject = new Date(value);
      }
      rules.type(rule, dateObject, source, errors, options);
      if (dateObject) {
        rules.range(rule, dateObject.getTime(), source, errors, options);
      }
    }
  }
  callback(errors);
};
var required2 = function required3(rule, value, callback, source, options) {
  var errors = [];
  var type4 = Array.isArray(value) ? "array" : typeof value;
  rules.required(rule, value, source, errors, options, type4);
  callback(errors);
};
var type2 = function type3(rule, value, callback, source, options) {
  var ruleType = rule.type;
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value, ruleType) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options, ruleType);
    if (!isEmptyValue(value, ruleType)) {
      rules.type(rule, value, source, errors, options);
    }
  }
  callback(errors);
};
var any = function any2(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (isEmptyValue(value) && !rule.required) {
      return callback();
    }
    rules.required(rule, value, source, errors, options);
  }
  callback(errors);
};
var validators = {
  string,
  method: method2,
  number: number2,
  "boolean": _boolean,
  regexp: regexp2,
  integer: integer2,
  "float": floatFn,
  array: array2,
  object: object2,
  "enum": enumerable2,
  pattern: pattern2,
  date: date2,
  url: type2,
  hex: type2,
  email: type2,
  required: required2,
  any
};
function newMessages() {
  return {
    "default": "Validation error on field %s",
    required: "%s is required",
    "enum": "%s must be one of %s",
    whitespace: "%s cannot be empty",
    date: {
      format: "%s date %s is invalid for format %s",
      parse: "%s date could not be parsed, %s is invalid ",
      invalid: "%s date %s is invalid"
    },
    types: {
      string: "%s is not a %s",
      method: "%s is not a %s (function)",
      array: "%s is not an %s",
      object: "%s is not an %s",
      number: "%s is not a %s",
      date: "%s is not a %s",
      "boolean": "%s is not a %s",
      integer: "%s is not an %s",
      "float": "%s is not a %s",
      regexp: "%s is not a valid %s",
      email: "%s is not a valid %s",
      url: "%s is not a valid %s",
      hex: "%s is not a valid %s"
    },
    string: {
      len: "%s must be exactly %s characters",
      min: "%s must be at least %s characters",
      max: "%s cannot be longer than %s characters",
      range: "%s must be between %s and %s characters"
    },
    number: {
      len: "%s must equal %s",
      min: "%s cannot be less than %s",
      max: "%s cannot be greater than %s",
      range: "%s must be between %s and %s"
    },
    array: {
      len: "%s must be exactly %s in length",
      min: "%s cannot be less than %s in length",
      max: "%s cannot be greater than %s in length",
      range: "%s must be between %s and %s in length"
    },
    pattern: {
      mismatch: "%s value %s does not match pattern %s"
    },
    clone: function clone() {
      var cloned = JSON.parse(JSON.stringify(this));
      cloned.clone = this.clone;
      return cloned;
    }
  };
}
var messages = newMessages();
var Schema = function() {
  function Schema2(descriptor) {
    this.rules = null;
    this._messages = messages;
    this.define(descriptor);
  }
  var _proto = Schema2.prototype;
  _proto.define = function define2(rules2) {
    var _this = this;
    if (!rules2) {
      throw new Error("Cannot configure a schema with no rules");
    }
    if (typeof rules2 !== "object" || Array.isArray(rules2)) {
      throw new Error("Rules must be an object");
    }
    this.rules = {};
    Object.keys(rules2).forEach(function(name) {
      var item = rules2[name];
      _this.rules[name] = Array.isArray(item) ? item : [item];
    });
  };
  _proto.messages = function messages2(_messages) {
    if (_messages) {
      this._messages = deepMerge(newMessages(), _messages);
    }
    return this._messages;
  };
  _proto.validate = function validate(source_, o, oc) {
    var _this2 = this;
    if (o === void 0) {
      o = {};
    }
    if (oc === void 0) {
      oc = function oc2() {
      };
    }
    var source = source_;
    var options = o;
    var callback = oc;
    if (typeof options === "function") {
      callback = options;
      options = {};
    }
    if (!this.rules || Object.keys(this.rules).length === 0) {
      if (callback) {
        callback(null, source);
      }
      return Promise.resolve(source);
    }
    function complete(results) {
      var errors = [];
      var fields = {};
      function add(e) {
        if (Array.isArray(e)) {
          var _errors;
          errors = (_errors = errors).concat.apply(_errors, e);
        } else {
          errors.push(e);
        }
      }
      for (var i = 0; i < results.length; i++) {
        add(results[i]);
      }
      if (!errors.length) {
        callback(null, source);
      } else {
        fields = convertFieldsError(errors);
        callback(errors, fields);
      }
    }
    if (options.messages) {
      var messages$1 = this.messages();
      if (messages$1 === messages) {
        messages$1 = newMessages();
      }
      deepMerge(messages$1, options.messages);
      options.messages = messages$1;
    } else {
      options.messages = this.messages();
    }
    var series = {};
    var keys = options.keys || Object.keys(this.rules);
    keys.forEach(function(z) {
      var arr = _this2.rules[z];
      var value = source[z];
      arr.forEach(function(r) {
        var rule = r;
        if (typeof rule.transform === "function") {
          if (source === source_) {
            source = _extends2({}, source);
          }
          value = source[z] = rule.transform(value);
        }
        if (typeof rule === "function") {
          rule = {
            validator: rule
          };
        } else {
          rule = _extends2({}, rule);
        }
        rule.validator = _this2.getValidationMethod(rule);
        if (!rule.validator) {
          return;
        }
        rule.field = z;
        rule.fullField = rule.fullField || z;
        rule.type = _this2.getType(rule);
        series[z] = series[z] || [];
        series[z].push({
          rule,
          value,
          source,
          field: z
        });
      });
    });
    var errorFields = {};
    return asyncMap(series, options, function(data, doIt) {
      var rule = data.rule;
      var deep = (rule.type === "object" || rule.type === "array") && (typeof rule.fields === "object" || typeof rule.defaultField === "object");
      deep = deep && (rule.required || !rule.required && data.value);
      rule.field = data.field;
      function addFullField(key, schema) {
        return _extends2({}, schema, {
          fullField: rule.fullField + "." + key,
          fullFields: rule.fullFields ? [].concat(rule.fullFields, [key]) : [key]
        });
      }
      function cb(e) {
        if (e === void 0) {
          e = [];
        }
        var errorList = Array.isArray(e) ? e : [e];
        if (!options.suppressWarning && errorList.length) {
          Schema2.warning("async-validator:", errorList);
        }
        if (errorList.length && rule.message !== void 0) {
          errorList = [].concat(rule.message);
        }
        var filledErrors = errorList.map(complementError(rule, source));
        if (options.first && filledErrors.length) {
          errorFields[rule.field] = 1;
          return doIt(filledErrors);
        }
        if (!deep) {
          doIt(filledErrors);
        } else {
          if (rule.required && !data.value) {
            if (rule.message !== void 0) {
              filledErrors = [].concat(rule.message).map(complementError(rule, source));
            } else if (options.error) {
              filledErrors = [options.error(rule, format(options.messages.required, rule.field))];
            }
            return doIt(filledErrors);
          }
          var fieldsSchema = {};
          if (rule.defaultField) {
            Object.keys(data.value).map(function(key) {
              fieldsSchema[key] = rule.defaultField;
            });
          }
          fieldsSchema = _extends2({}, fieldsSchema, data.rule.fields);
          var paredFieldsSchema = {};
          Object.keys(fieldsSchema).forEach(function(field) {
            var fieldSchema = fieldsSchema[field];
            var fieldSchemaList = Array.isArray(fieldSchema) ? fieldSchema : [fieldSchema];
            paredFieldsSchema[field] = fieldSchemaList.map(addFullField.bind(null, field));
          });
          var schema = new Schema2(paredFieldsSchema);
          schema.messages(options.messages);
          if (data.rule.options) {
            data.rule.options.messages = options.messages;
            data.rule.options.error = options.error;
          }
          schema.validate(data.value, data.rule.options || options, function(errs) {
            var finalErrors = [];
            if (filledErrors && filledErrors.length) {
              finalErrors.push.apply(finalErrors, filledErrors);
            }
            if (errs && errs.length) {
              finalErrors.push.apply(finalErrors, errs);
            }
            doIt(finalErrors.length ? finalErrors : null);
          });
        }
      }
      var res;
      if (rule.asyncValidator) {
        res = rule.asyncValidator(rule, data.value, cb, data.source, options);
      } else if (rule.validator) {
        try {
          res = rule.validator(rule, data.value, cb, data.source, options);
        } catch (error) {
          console.error == null ? void 0 : console.error(error);
          if (!options.suppressValidatorError) {
            setTimeout(function() {
              throw error;
            }, 0);
          }
          cb(error.message);
        }
        if (res === true) {
          cb();
        } else if (res === false) {
          cb(typeof rule.message === "function" ? rule.message(rule.fullField || rule.field) : rule.message || (rule.fullField || rule.field) + " fails");
        } else if (res instanceof Array) {
          cb(res);
        } else if (res instanceof Error) {
          cb(res.message);
        }
      }
      if (res && res.then) {
        res.then(function() {
          return cb();
        }, function(e) {
          return cb(e);
        });
      }
    }, function(results) {
      complete(results);
    }, source);
  };
  _proto.getType = function getType(rule) {
    if (rule.type === void 0 && rule.pattern instanceof RegExp) {
      rule.type = "pattern";
    }
    if (typeof rule.validator !== "function" && rule.type && !validators.hasOwnProperty(rule.type)) {
      throw new Error(format("Unknown rule type %s", rule.type));
    }
    return rule.type || "string";
  };
  _proto.getValidationMethod = function getValidationMethod(rule) {
    if (typeof rule.validator === "function") {
      return rule.validator;
    }
    var keys = Object.keys(rule);
    var messageIndex = keys.indexOf("message");
    if (messageIndex !== -1) {
      keys.splice(messageIndex, 1);
    }
    if (keys.length === 1 && keys[0] === "required") {
      return validators.required;
    }
    return validators[this.getType(rule)] || void 0;
  };
  return Schema2;
}();
Schema.register = function register(type4, validator) {
  if (typeof validator !== "function") {
    throw new Error("Cannot register a validator by type, validator is not a function");
  }
  validators[type4] = validator;
};
Schema.warning = warning2;
Schema.messages = messages;
Schema.validators = validators;

// node_modules/rc-field-form/es/utils/validateUtil.js
var React64 = __toESM(require_react());

// node_modules/rc-field-form/es/utils/messages.js
var typeTemplate = "'${name}' is not a valid ${type}";
var defaultValidateMessages = {
  default: "Validation error on field '${name}'",
  required: "'${name}' is required",
  enum: "'${name}' must be one of [${enum}]",
  whitespace: "'${name}' cannot be empty",
  date: {
    format: "'${name}' is invalid for format date",
    parse: "'${name}' could not be parsed as date",
    invalid: "'${name}' is invalid date"
  },
  types: {
    string: typeTemplate,
    method: typeTemplate,
    array: typeTemplate,
    object: typeTemplate,
    number: typeTemplate,
    date: typeTemplate,
    boolean: typeTemplate,
    integer: typeTemplate,
    float: typeTemplate,
    regexp: typeTemplate,
    email: typeTemplate,
    url: typeTemplate,
    hex: typeTemplate
  },
  string: {
    len: "'${name}' must be exactly ${len} characters",
    min: "'${name}' must be at least ${min} characters",
    max: "'${name}' cannot be longer than ${max} characters",
    range: "'${name}' must be between ${min} and ${max} characters"
  },
  number: {
    len: "'${name}' must equal ${len}",
    min: "'${name}' cannot be less than ${min}",
    max: "'${name}' cannot be greater than ${max}",
    range: "'${name}' must be between ${min} and ${max}"
  },
  array: {
    len: "'${name}' must be exactly ${len} in length",
    min: "'${name}' cannot be less than ${min} in length",
    max: "'${name}' cannot be greater than ${max} in length",
    range: "'${name}' must be between ${min} and ${max} in length"
  },
  pattern: {
    mismatch: "'${name}' does not match pattern ${pattern}"
  }
};

// node_modules/rc-util/es/utils/get.js
function get(entity, path) {
  var current = entity;
  for (var i = 0; i < path.length; i += 1) {
    if (current === null || current === void 0) {
      return void 0;
    }
    current = current[path[i]];
  }
  return current;
}

// node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}

// node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

// node_modules/@babel/runtime/helpers/esm/toArray.js
function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}

// node_modules/rc-util/es/utils/set.js
function internalSet(entity, paths, value, removeIfUndefined) {
  if (!paths.length) {
    return value;
  }
  var _paths = _toArray(paths), path = _paths[0], restPath = _paths.slice(1);
  var clone;
  if (!entity && typeof path === "number") {
    clone = [];
  } else if (Array.isArray(entity)) {
    clone = _toConsumableArray(entity);
  } else {
    clone = _objectSpread22({}, entity);
  }
  if (removeIfUndefined && value === void 0 && restPath.length === 1) {
    delete clone[path][restPath[0]];
  } else {
    clone[path] = internalSet(clone[path], restPath, value, removeIfUndefined);
  }
  return clone;
}
function set(entity, paths, value) {
  var removeIfUndefined = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
  if (paths.length && removeIfUndefined && value === void 0 && !get(entity, paths.slice(0, -1))) {
    return entity;
  }
  return internalSet(entity, paths, value, removeIfUndefined);
}

// node_modules/rc-field-form/es/utils/cloneDeep.js
function cloneDeep(val) {
  if (Array.isArray(val)) {
    return cloneArrayDeep(val);
  } else if (_typeof(val) === "object" && val !== null) {
    return cloneObjectDeep(val);
  }
  return val;
}
function cloneObjectDeep(val) {
  if (Object.getPrototypeOf(val) === Object.prototype) {
    var res = {};
    for (var key in val) {
      res[key] = cloneDeep(val[key]);
    }
    return res;
  }
  return val;
}
function cloneArrayDeep(val) {
  return val.map(function(item) {
    return cloneDeep(item);
  });
}
var cloneDeep_default = cloneDeep;

// node_modules/rc-field-form/es/utils/valueUtil.js
function getNamePath(path) {
  return toArray2(path);
}
function getValue2(store, namePath) {
  var value = get(store, namePath);
  return value;
}
function setValue(store, namePath, value) {
  var removeIfUndefined = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
  var newStore = set(store, namePath, value, removeIfUndefined);
  return newStore;
}
function cloneByNamePathList(store, namePathList) {
  var newStore = {};
  namePathList.forEach(function(namePath) {
    var value = getValue2(store, namePath);
    newStore = setValue(newStore, namePath, value);
  });
  return newStore;
}
function containsNamePath(namePathList, namePath) {
  return namePathList && namePathList.some(function(path) {
    return matchNamePath(path, namePath);
  });
}
function isObject(obj) {
  return _typeof(obj) === "object" && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;
}
function internalSetValues(store, values) {
  var newStore = Array.isArray(store) ? _toConsumableArray(store) : _objectSpread22({}, store);
  if (!values) {
    return newStore;
  }
  Object.keys(values).forEach(function(key) {
    var prevValue = newStore[key];
    var value = values[key];
    var recursive = isObject(prevValue) && isObject(value);
    newStore[key] = recursive ? internalSetValues(prevValue, value || {}) : cloneDeep_default(value);
  });
  return newStore;
}
function setValues(store) {
  for (var _len = arguments.length, restValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    restValues[_key - 1] = arguments[_key];
  }
  return restValues.reduce(function(current, newStore) {
    return internalSetValues(current, newStore);
  }, store);
}
function matchNamePath(namePath, changedNamePath) {
  if (!namePath || !changedNamePath || namePath.length !== changedNamePath.length) {
    return false;
  }
  return namePath.every(function(nameUnit, i) {
    return changedNamePath[i] === nameUnit;
  });
}
function isSimilar(source, target) {
  if (source === target) {
    return true;
  }
  if (!source && target || source && !target) {
    return false;
  }
  if (!source || !target || _typeof(source) !== "object" || _typeof(target) !== "object") {
    return false;
  }
  var sourceKeys = Object.keys(source);
  var targetKeys = Object.keys(target);
  var keys = new Set([].concat(_toConsumableArray(sourceKeys), _toConsumableArray(targetKeys)));
  return _toConsumableArray(keys).every(function(key) {
    var sourceValue = source[key];
    var targetValue = target[key];
    if (typeof sourceValue === "function" && typeof targetValue === "function") {
      return true;
    }
    return sourceValue === targetValue;
  });
}
function defaultGetValueFromEvent(valuePropName) {
  var event = arguments.length <= 1 ? void 0 : arguments[1];
  if (event && event.target && _typeof(event.target) === "object" && valuePropName in event.target) {
    return event.target[valuePropName];
  }
  return event;
}
function move(array4, moveIndex, toIndex) {
  var length = array4.length;
  if (moveIndex < 0 || moveIndex >= length || toIndex < 0 || toIndex >= length) {
    return array4;
  }
  var item = array4[moveIndex];
  var diff = moveIndex - toIndex;
  if (diff > 0) {
    return [].concat(_toConsumableArray(array4.slice(0, toIndex)), [item], _toConsumableArray(array4.slice(toIndex, moveIndex)), _toConsumableArray(array4.slice(moveIndex + 1, length)));
  }
  if (diff < 0) {
    return [].concat(_toConsumableArray(array4.slice(0, moveIndex)), _toConsumableArray(array4.slice(moveIndex + 1, toIndex + 1)), [item], _toConsumableArray(array4.slice(toIndex + 1, length)));
  }
  return array4;
}

// node_modules/rc-field-form/es/utils/validateUtil.js
var AsyncValidator = Schema;
function replaceMessage(template, kv) {
  return template.replace(/\$\{\w+\}/g, function(str) {
    var key = str.slice(2, -1);
    return kv[key];
  });
}
var CODE_LOGIC_ERROR = "CODE_LOGIC_ERROR";
function validateRule(_x, _x2, _x3, _x4, _x5) {
  return _validateRule.apply(this, arguments);
}
function _validateRule() {
  _validateRule = _asyncToGenerator(_regeneratorRuntime().mark(function _callee2(name, value, rule, options, messageVariables) {
    var cloneRule, originValidator, subRuleField, validator, messages2, result, subResults, kv, fillVariableResult;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            cloneRule = _objectSpread22({}, rule);
            delete cloneRule.ruleIndex;
            if (cloneRule.validator) {
              originValidator = cloneRule.validator;
              cloneRule.validator = function() {
                try {
                  return originValidator.apply(void 0, arguments);
                } catch (error) {
                  console.error(error);
                  return Promise.reject(CODE_LOGIC_ERROR);
                }
              };
            }
            subRuleField = null;
            if (cloneRule && cloneRule.type === "array" && cloneRule.defaultField) {
              subRuleField = cloneRule.defaultField;
              delete cloneRule.defaultField;
            }
            validator = new AsyncValidator(_defineProperty2({}, name, [cloneRule]));
            messages2 = setValues({}, defaultValidateMessages, options.validateMessages);
            validator.messages(messages2);
            result = [];
            _context2.prev = 9;
            _context2.next = 12;
            return Promise.resolve(validator.validate(_defineProperty2({}, name, value), _objectSpread22({}, options)));
          case 12:
            _context2.next = 17;
            break;
          case 14:
            _context2.prev = 14;
            _context2.t0 = _context2["catch"](9);
            if (_context2.t0.errors) {
              result = _context2.t0.errors.map(function(_ref4, index) {
                var message = _ref4.message;
                var mergedMessage = message === CODE_LOGIC_ERROR ? messages2.default : message;
                return React64.isValidElement(mergedMessage) ? React64.cloneElement(mergedMessage, {
                  key: "error_".concat(index)
                }) : mergedMessage;
              });
            }
          case 17:
            if (!(!result.length && subRuleField)) {
              _context2.next = 22;
              break;
            }
            _context2.next = 20;
            return Promise.all(value.map(function(subValue, i) {
              return validateRule("".concat(name, ".").concat(i), subValue, subRuleField, options, messageVariables);
            }));
          case 20:
            subResults = _context2.sent;
            return _context2.abrupt("return", subResults.reduce(function(prev, errors) {
              return [].concat(_toConsumableArray(prev), _toConsumableArray(errors));
            }, []));
          case 22:
            kv = _objectSpread22(_objectSpread22({}, rule), {}, {
              name,
              enum: (rule.enum || []).join(", ")
            }, messageVariables);
            fillVariableResult = result.map(function(error) {
              if (typeof error === "string") {
                return replaceMessage(error, kv);
              }
              return error;
            });
            return _context2.abrupt("return", fillVariableResult);
          case 25:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[9, 14]]);
  }));
  return _validateRule.apply(this, arguments);
}
function validateRules(namePath, value, rules2, options, validateFirst, messageVariables) {
  var name = namePath.join(".");
  var filledRules = rules2.map(function(currentRule, ruleIndex) {
    var originValidatorFunc = currentRule.validator;
    var cloneRule = _objectSpread22(_objectSpread22({}, currentRule), {}, {
      ruleIndex
    });
    if (originValidatorFunc) {
      cloneRule.validator = function(rule, val, callback) {
        var hasPromise = false;
        var wrappedCallback = function wrappedCallback2() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          Promise.resolve().then(function() {
            warning_default(!hasPromise, "Your validator function has already return a promise. `callback` will be ignored.");
            if (!hasPromise) {
              callback.apply(void 0, args);
            }
          });
        };
        var promise = originValidatorFunc(rule, val, wrappedCallback);
        hasPromise = promise && typeof promise.then === "function" && typeof promise.catch === "function";
        warning_default(hasPromise, "`callback` is deprecated. Please return a promise instead.");
        if (hasPromise) {
          promise.then(function() {
            callback();
          }).catch(function(err) {
            callback(err || " ");
          });
        }
      };
    }
    return cloneRule;
  }).sort(function(_ref, _ref2) {
    var w1 = _ref.warningOnly, i1 = _ref.ruleIndex;
    var w2 = _ref2.warningOnly, i2 = _ref2.ruleIndex;
    if (!!w1 === !!w2) {
      return i1 - i2;
    }
    if (w1) {
      return 1;
    }
    return -1;
  });
  var summaryPromise;
  if (validateFirst === true) {
    summaryPromise = new Promise(function() {
      var _ref3 = _asyncToGenerator(_regeneratorRuntime().mark(function _callee(resolve, reject) {
        var i, rule, errors;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                i = 0;
              case 1:
                if (!(i < filledRules.length)) {
                  _context.next = 12;
                  break;
                }
                rule = filledRules[i];
                _context.next = 5;
                return validateRule(name, value, rule, options, messageVariables);
              case 5:
                errors = _context.sent;
                if (!errors.length) {
                  _context.next = 9;
                  break;
                }
                reject([{
                  errors,
                  rule
                }]);
                return _context.abrupt("return");
              case 9:
                i += 1;
                _context.next = 1;
                break;
              case 12:
                resolve([]);
              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      return function(_x6, _x7) {
        return _ref3.apply(this, arguments);
      };
    }());
  } else {
    var rulePromises = filledRules.map(function(rule) {
      return validateRule(name, value, rule, options, messageVariables).then(function(errors) {
        return {
          errors,
          rule
        };
      });
    });
    summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function(errors) {
      return Promise.reject(errors);
    });
  }
  summaryPromise.catch(function(e) {
    return e;
  });
  return summaryPromise;
}
function finishOnAllFailed(_x8) {
  return _finishOnAllFailed.apply(this, arguments);
}
function _finishOnAllFailed() {
  _finishOnAllFailed = _asyncToGenerator(_regeneratorRuntime().mark(function _callee3(rulePromises) {
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            return _context3.abrupt("return", Promise.all(rulePromises).then(function(errorsList) {
              var _ref5;
              var errors = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(errorsList));
              return errors;
            }));
          case 1:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _finishOnAllFailed.apply(this, arguments);
}
function finishOnFirstFailed(_x9) {
  return _finishOnFirstFailed.apply(this, arguments);
}
function _finishOnFirstFailed() {
  _finishOnFirstFailed = _asyncToGenerator(_regeneratorRuntime().mark(function _callee4(rulePromises) {
    var count;
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            count = 0;
            return _context4.abrupt("return", new Promise(function(resolve) {
              rulePromises.forEach(function(promise) {
                promise.then(function(ruleError) {
                  if (ruleError.errors.length) {
                    resolve([ruleError]);
                  }
                  count += 1;
                  if (count === rulePromises.length) {
                    resolve([]);
                  }
                });
              });
            }));
          case 2:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _finishOnFirstFailed.apply(this, arguments);
}

// node_modules/rc-field-form/es/Field.js
var _excluded2 = ["name"];
var EMPTY_ERRORS = [];
function requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {
  if (typeof shouldUpdate === "function") {
    return shouldUpdate(prev, next, "source" in info ? {
      source: info.source
    } : {});
  }
  return prevValue !== nextValue;
}
var Field = function(_React$Component) {
  _inherits(Field2, _React$Component);
  var _super = _createSuper(Field2);
  function Field2(props) {
    var _this;
    _classCallCheck(this, Field2);
    _this = _super.call(this, props);
    _this.state = {
      resetCount: 0
    };
    _this.cancelRegisterFunc = null;
    _this.mounted = false;
    _this.touched = false;
    _this.dirty = false;
    _this.validatePromise = null;
    _this.prevValidating = void 0;
    _this.errors = EMPTY_ERRORS;
    _this.warnings = EMPTY_ERRORS;
    _this.cancelRegister = function() {
      var _this$props = _this.props, preserve = _this$props.preserve, isListField = _this$props.isListField, name = _this$props.name;
      if (_this.cancelRegisterFunc) {
        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));
      }
      _this.cancelRegisterFunc = null;
    };
    _this.getNamePath = function() {
      var _this$props2 = _this.props, name = _this$props2.name, fieldContext = _this$props2.fieldContext;
      var _fieldContext$prefixN = fieldContext.prefixName, prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;
      return name !== void 0 ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];
    };
    _this.getRules = function() {
      var _this$props3 = _this.props, _this$props3$rules = _this$props3.rules, rules2 = _this$props3$rules === void 0 ? [] : _this$props3$rules, fieldContext = _this$props3.fieldContext;
      return rules2.map(function(rule) {
        if (typeof rule === "function") {
          return rule(fieldContext);
        }
        return rule;
      });
    };
    _this.refresh = function() {
      if (!_this.mounted)
        return;
      _this.setState(function(_ref) {
        var resetCount = _ref.resetCount;
        return {
          resetCount: resetCount + 1
        };
      });
    };
    _this.triggerMetaEvent = function(destroy) {
      var onMetaChange = _this.props.onMetaChange;
      onMetaChange === null || onMetaChange === void 0 ? void 0 : onMetaChange(_objectSpread22(_objectSpread22({}, _this.getMeta()), {}, {
        destroy
      }));
    };
    _this.onStoreChange = function(prevStore, namePathList, info) {
      var _this$props4 = _this.props, shouldUpdate = _this$props4.shouldUpdate, _this$props4$dependen = _this$props4.dependencies, dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen, onReset = _this$props4.onReset;
      var store = info.store;
      var namePath = _this.getNamePath();
      var prevValue = _this.getValue(prevStore);
      var curValue = _this.getValue(store);
      var namePathMatch = namePathList && containsNamePath(namePathList, namePath);
      if (info.type === "valueUpdate" && info.source === "external" && prevValue !== curValue) {
        _this.touched = true;
        _this.dirty = true;
        _this.validatePromise = null;
        _this.errors = EMPTY_ERRORS;
        _this.warnings = EMPTY_ERRORS;
        _this.triggerMetaEvent();
      }
      switch (info.type) {
        case "reset":
          if (!namePathList || namePathMatch) {
            _this.touched = false;
            _this.dirty = false;
            _this.validatePromise = null;
            _this.errors = EMPTY_ERRORS;
            _this.warnings = EMPTY_ERRORS;
            _this.triggerMetaEvent();
            onReset === null || onReset === void 0 ? void 0 : onReset();
            _this.refresh();
            return;
          }
          break;
        case "remove": {
          if (shouldUpdate) {
            _this.reRender();
            return;
          }
          break;
        }
        case "setField": {
          if (namePathMatch) {
            var data = info.data;
            if ("touched" in data) {
              _this.touched = data.touched;
            }
            if ("validating" in data && !("originRCField" in data)) {
              _this.validatePromise = data.validating ? Promise.resolve([]) : null;
            }
            if ("errors" in data) {
              _this.errors = data.errors || EMPTY_ERRORS;
            }
            if ("warnings" in data) {
              _this.warnings = data.warnings || EMPTY_ERRORS;
            }
            _this.dirty = true;
            _this.triggerMetaEvent();
            _this.reRender();
            return;
          }
          if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {
            _this.reRender();
            return;
          }
          break;
        }
        case "dependenciesUpdate": {
          var dependencyList = dependencies.map(getNamePath);
          if (dependencyList.some(function(dependency) {
            return containsNamePath(info.relatedFields, dependency);
          })) {
            _this.reRender();
            return;
          }
          break;
        }
        default:
          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {
            _this.reRender();
            return;
          }
          break;
      }
      if (shouldUpdate === true) {
        _this.reRender();
      }
    };
    _this.validateRules = function(options) {
      var namePath = _this.getNamePath();
      var currentValue = _this.getValue();
      var rootPromise = Promise.resolve().then(function() {
        if (!_this.mounted) {
          return [];
        }
        var _this$props5 = _this.props, _this$props5$validate = _this$props5.validateFirst, validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate, messageVariables = _this$props5.messageVariables;
        var _ref2 = options || {}, triggerName = _ref2.triggerName;
        var filteredRules = _this.getRules();
        if (triggerName) {
          filteredRules = filteredRules.filter(function(rule) {
            var validateTrigger = rule.validateTrigger;
            if (!validateTrigger) {
              return true;
            }
            var triggerList = toArray2(validateTrigger);
            return triggerList.includes(triggerName);
          });
        }
        var promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);
        promise.catch(function(e) {
          return e;
        }).then(function() {
          var ruleErrors = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : EMPTY_ERRORS;
          if (_this.validatePromise === rootPromise) {
            _this.validatePromise = null;
            var nextErrors = [];
            var nextWarnings = [];
            ruleErrors.forEach(function(_ref3) {
              var warningOnly = _ref3.rule.warningOnly, _ref3$errors = _ref3.errors, errors = _ref3$errors === void 0 ? EMPTY_ERRORS : _ref3$errors;
              if (warningOnly) {
                nextWarnings.push.apply(nextWarnings, _toConsumableArray(errors));
              } else {
                nextErrors.push.apply(nextErrors, _toConsumableArray(errors));
              }
            });
            _this.errors = nextErrors;
            _this.warnings = nextWarnings;
            _this.triggerMetaEvent();
            _this.reRender();
          }
        });
        return promise;
      });
      _this.validatePromise = rootPromise;
      _this.dirty = true;
      _this.errors = EMPTY_ERRORS;
      _this.warnings = EMPTY_ERRORS;
      _this.triggerMetaEvent();
      _this.reRender();
      return rootPromise;
    };
    _this.isFieldValidating = function() {
      return !!_this.validatePromise;
    };
    _this.isFieldTouched = function() {
      return _this.touched;
    };
    _this.isFieldDirty = function() {
      if (_this.dirty || _this.props.initialValue !== void 0) {
        return true;
      }
      var fieldContext = _this.props.fieldContext;
      var _fieldContext$getInte = fieldContext.getInternalHooks(HOOK_MARK), getInitialValue = _fieldContext$getInte.getInitialValue;
      if (getInitialValue(_this.getNamePath()) !== void 0) {
        return true;
      }
      return false;
    };
    _this.getErrors = function() {
      return _this.errors;
    };
    _this.getWarnings = function() {
      return _this.warnings;
    };
    _this.isListField = function() {
      return _this.props.isListField;
    };
    _this.isList = function() {
      return _this.props.isList;
    };
    _this.isPreserve = function() {
      return _this.props.preserve;
    };
    _this.getMeta = function() {
      _this.prevValidating = _this.isFieldValidating();
      var meta = {
        touched: _this.isFieldTouched(),
        validating: _this.prevValidating,
        errors: _this.errors,
        warnings: _this.warnings,
        name: _this.getNamePath()
      };
      return meta;
    };
    _this.getOnlyChild = function(children) {
      if (typeof children === "function") {
        var meta = _this.getMeta();
        return _objectSpread22(_objectSpread22({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.props.fieldContext))), {}, {
          isFunction: true
        });
      }
      var childList = toArray(children);
      if (childList.length !== 1 || !React65.isValidElement(childList[0])) {
        return {
          child: childList,
          isFunction: false
        };
      }
      return {
        child: childList[0],
        isFunction: false
      };
    };
    _this.getValue = function(store) {
      var getFieldsValue = _this.props.fieldContext.getFieldsValue;
      var namePath = _this.getNamePath();
      return getValue2(store || getFieldsValue(true), namePath);
    };
    _this.getControlled = function() {
      var childProps = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var _this$props6 = _this.props, trigger = _this$props6.trigger, validateTrigger = _this$props6.validateTrigger, getValueFromEvent = _this$props6.getValueFromEvent, normalize2 = _this$props6.normalize, valuePropName = _this$props6.valuePropName, getValueProps = _this$props6.getValueProps, fieldContext = _this$props6.fieldContext;
      var mergedValidateTrigger = validateTrigger !== void 0 ? validateTrigger : fieldContext.validateTrigger;
      var namePath = _this.getNamePath();
      var getInternalHooks3 = fieldContext.getInternalHooks, getFieldsValue = fieldContext.getFieldsValue;
      var _getInternalHooks = getInternalHooks3(HOOK_MARK), dispatch = _getInternalHooks.dispatch;
      var value = _this.getValue();
      var mergedGetValueProps = getValueProps || function(val) {
        return _defineProperty2({}, valuePropName, val);
      };
      var originTriggerFunc = childProps[trigger];
      var control = _objectSpread22(_objectSpread22({}, childProps), mergedGetValueProps(value));
      control[trigger] = function() {
        _this.touched = true;
        _this.dirty = true;
        _this.triggerMetaEvent();
        var newValue;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        if (getValueFromEvent) {
          newValue = getValueFromEvent.apply(void 0, args);
        } else {
          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));
        }
        if (normalize2) {
          newValue = normalize2(newValue, value, getFieldsValue(true));
        }
        dispatch({
          type: "updateValue",
          namePath,
          value: newValue
        });
        if (originTriggerFunc) {
          originTriggerFunc.apply(void 0, args);
        }
      };
      var validateTriggerList = toArray2(mergedValidateTrigger || []);
      validateTriggerList.forEach(function(triggerName) {
        var originTrigger = control[triggerName];
        control[triggerName] = function() {
          if (originTrigger) {
            originTrigger.apply(void 0, arguments);
          }
          var rules2 = _this.props.rules;
          if (rules2 && rules2.length) {
            dispatch({
              type: "validateField",
              namePath,
              triggerName
            });
          }
        };
      });
      return control;
    };
    if (props.fieldContext) {
      var getInternalHooks2 = props.fieldContext.getInternalHooks;
      var _getInternalHooks2 = getInternalHooks2(HOOK_MARK), initEntityValue = _getInternalHooks2.initEntityValue;
      initEntityValue(_assertThisInitialized(_this));
    }
    return _this;
  }
  _createClass(Field2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props7 = this.props, shouldUpdate = _this$props7.shouldUpdate, fieldContext = _this$props7.fieldContext;
      this.mounted = true;
      if (fieldContext) {
        var getInternalHooks2 = fieldContext.getInternalHooks;
        var _getInternalHooks3 = getInternalHooks2(HOOK_MARK), registerField = _getInternalHooks3.registerField;
        this.cancelRegisterFunc = registerField(this);
      }
      if (shouldUpdate === true) {
        this.reRender();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cancelRegister();
      this.triggerMetaEvent(true);
      this.mounted = false;
    }
  }, {
    key: "reRender",
    value: function reRender() {
      if (!this.mounted)
        return;
      this.forceUpdate();
    }
  }, {
    key: "render",
    value: function render2() {
      var resetCount = this.state.resetCount;
      var children = this.props.children;
      var _this$getOnlyChild = this.getOnlyChild(children), child = _this$getOnlyChild.child, isFunction = _this$getOnlyChild.isFunction;
      var returnChildNode;
      if (isFunction) {
        returnChildNode = child;
      } else if (React65.isValidElement(child)) {
        returnChildNode = React65.cloneElement(child, this.getControlled(child.props));
      } else {
        warning_default(!child, "`children` of Field is not validate ReactElement.");
        returnChildNode = child;
      }
      return React65.createElement(React65.Fragment, {
        key: resetCount
      }, returnChildNode);
    }
  }]);
  return Field2;
}(React65.Component);
Field.contextType = FieldContext_default;
Field.defaultProps = {
  trigger: "onChange",
  valuePropName: "value"
};
function WrapperField(_ref5) {
  var name = _ref5.name, restProps = _objectWithoutProperties2(_ref5, _excluded2);
  var fieldContext = React65.useContext(FieldContext_default);
  var namePath = name !== void 0 ? getNamePath(name) : void 0;
  var key = "keep";
  if (!restProps.isListField) {
    key = "_".concat((namePath || []).join("_"));
  }
  if (restProps.preserve === false && restProps.isListField && namePath.length <= 1) {
    warning_default(false, "`preserve` should not apply on Form.List fields.");
  }
  return React65.createElement(Field, _extends({
    key,
    name: namePath
  }, restProps, {
    fieldContext
  }));
}
var Field_default = WrapperField;

// node_modules/rc-field-form/es/List.js
var React67 = __toESM(require_react());

// node_modules/rc-field-form/es/ListContext.js
var React66 = __toESM(require_react());
var ListContext = React66.createContext(null);
var ListContext_default = ListContext;

// node_modules/rc-field-form/es/List.js
var List2 = function List3(_ref) {
  var name = _ref.name, initialValue = _ref.initialValue, children = _ref.children, rules2 = _ref.rules, validateTrigger = _ref.validateTrigger;
  var context = React67.useContext(FieldContext_default);
  var keyRef = React67.useRef({
    keys: [],
    id: 0
  });
  var keyManager = keyRef.current;
  var prefixName = React67.useMemo(function() {
    var parentPrefixName = getNamePath(context.prefixName) || [];
    return [].concat(_toConsumableArray(parentPrefixName), _toConsumableArray(getNamePath(name)));
  }, [context.prefixName, name]);
  var fieldContext = React67.useMemo(function() {
    return _objectSpread22(_objectSpread22({}, context), {}, {
      prefixName
    });
  }, [context, prefixName]);
  var listContext = React67.useMemo(function() {
    return {
      getKey: function getKey(namePath) {
        var len = prefixName.length;
        var pathName = namePath[len];
        return [keyManager.keys[pathName], namePath.slice(len + 1)];
      }
    };
  }, [prefixName]);
  if (typeof children !== "function") {
    warning_default(false, "Form.List only accepts function as children.");
    return null;
  }
  var shouldUpdate = function shouldUpdate2(prevValue, nextValue, _ref2) {
    var source = _ref2.source;
    if (source === "internal") {
      return false;
    }
    return prevValue !== nextValue;
  };
  return React67.createElement(ListContext_default.Provider, {
    value: listContext
  }, React67.createElement(FieldContext_default.Provider, {
    value: fieldContext
  }, React67.createElement(Field_default, {
    name: [],
    shouldUpdate,
    rules: rules2,
    validateTrigger,
    initialValue,
    isList: true
  }, function(_ref3, meta) {
    var _ref3$value = _ref3.value, value = _ref3$value === void 0 ? [] : _ref3$value, onChange = _ref3.onChange;
    var getFieldValue = context.getFieldValue;
    var getNewValue = function getNewValue2() {
      var values = getFieldValue(prefixName || []);
      return values || [];
    };
    var operations = {
      add: function add(defaultValue, index) {
        var newValue = getNewValue();
        if (index >= 0 && index <= newValue.length) {
          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys.slice(0, index)), [keyManager.id], _toConsumableArray(keyManager.keys.slice(index)));
          onChange([].concat(_toConsumableArray(newValue.slice(0, index)), [defaultValue], _toConsumableArray(newValue.slice(index))));
        } else {
          if (index < 0 || index > newValue.length) {
            warning_default(false, "The second parameter of the add function should be a valid positive number.");
          }
          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys), [keyManager.id]);
          onChange([].concat(_toConsumableArray(newValue), [defaultValue]));
        }
        keyManager.id += 1;
      },
      remove: function remove(index) {
        var newValue = getNewValue();
        var indexSet = new Set(Array.isArray(index) ? index : [index]);
        if (indexSet.size <= 0) {
          return;
        }
        keyManager.keys = keyManager.keys.filter(function(_, keysIndex) {
          return !indexSet.has(keysIndex);
        });
        onChange(newValue.filter(function(_, valueIndex) {
          return !indexSet.has(valueIndex);
        }));
      },
      move: function move2(from, to2) {
        if (from === to2) {
          return;
        }
        var newValue = getNewValue();
        if (from < 0 || from >= newValue.length || to2 < 0 || to2 >= newValue.length) {
          return;
        }
        keyManager.keys = move(keyManager.keys, from, to2);
        onChange(move(newValue, from, to2));
      }
    };
    var listValue = value || [];
    if (!Array.isArray(listValue)) {
      listValue = [];
      if (true) {
        warning_default(false, "Current value of '".concat(prefixName.join(" > "), "' is not an array type."));
      }
    }
    return children(listValue.map(function(__, index) {
      var key = keyManager.keys[index];
      if (key === void 0) {
        keyManager.keys[index] = keyManager.id;
        key = keyManager.keys[index];
        keyManager.id += 1;
      }
      return {
        name: index,
        key,
        isListField: true
      };
    }), operations, meta);
  })));
};
var List_default = List2;

// node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}

// node_modules/@babel/runtime/helpers/esm/slicedToArray.js
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

// node_modules/rc-field-form/es/useForm.js
var React68 = __toESM(require_react());

// node_modules/rc-field-form/es/utils/asyncUtil.js
function allPromiseFinish(promiseList) {
  var hasError = false;
  var count = promiseList.length;
  var results = [];
  if (!promiseList.length) {
    return Promise.resolve([]);
  }
  return new Promise(function(resolve, reject) {
    promiseList.forEach(function(promise, index) {
      promise.catch(function(e) {
        hasError = true;
        return e;
      }).then(function(result) {
        count -= 1;
        results[index] = result;
        if (count > 0) {
          return;
        }
        if (hasError) {
          reject(results);
        }
        resolve(results);
      });
    });
  });
}

// node_modules/rc-field-form/es/utils/NameMap.js
var SPLIT = "__@field_split__";
function normalize(namePath) {
  return namePath.map(function(cell) {
    return "".concat(_typeof(cell), ":").concat(cell);
  }).join(SPLIT);
}
var NameMap = function() {
  function NameMap2() {
    _classCallCheck(this, NameMap2);
    this.kvs = /* @__PURE__ */ new Map();
  }
  _createClass(NameMap2, [{
    key: "set",
    value: function set2(key, value) {
      this.kvs.set(normalize(key), value);
    }
  }, {
    key: "get",
    value: function get2(key) {
      return this.kvs.get(normalize(key));
    }
  }, {
    key: "update",
    value: function update(key, updater) {
      var origin = this.get(key);
      var next = updater(origin);
      if (!next) {
        this.delete(key);
      } else {
        this.set(key, next);
      }
    }
  }, {
    key: "delete",
    value: function _delete(key) {
      this.kvs.delete(normalize(key));
    }
  }, {
    key: "map",
    value: function map(callback) {
      return _toConsumableArray(this.kvs.entries()).map(function(_ref) {
        var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value = _ref2[1];
        var cells = key.split(SPLIT);
        return callback({
          key: cells.map(function(cell) {
            var _cell$match = cell.match(/^([^:]*):(.*)$/), _cell$match2 = _slicedToArray(_cell$match, 3), type4 = _cell$match2[1], unit = _cell$match2[2];
            return type4 === "number" ? Number(unit) : unit;
          }),
          value
        });
      });
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      var json = {};
      this.map(function(_ref3) {
        var key = _ref3.key, value = _ref3.value;
        json[key.join(".")] = value;
        return null;
      });
      return json;
    }
  }]);
  return NameMap2;
}();
var NameMap_default = NameMap;

// node_modules/rc-field-form/es/useForm.js
var _excluded3 = ["name", "errors"];
var FormStore = _createClass(function FormStore2(forceRootUpdate) {
  var _this = this;
  _classCallCheck(this, FormStore2);
  this.formHooked = false;
  this.forceRootUpdate = void 0;
  this.subscribable = true;
  this.store = {};
  this.fieldEntities = [];
  this.initialValues = {};
  this.callbacks = {};
  this.validateMessages = null;
  this.preserve = null;
  this.lastValidatePromise = null;
  this.getForm = function() {
    return {
      getFieldValue: _this.getFieldValue,
      getFieldsValue: _this.getFieldsValue,
      getFieldError: _this.getFieldError,
      getFieldWarning: _this.getFieldWarning,
      getFieldsError: _this.getFieldsError,
      isFieldsTouched: _this.isFieldsTouched,
      isFieldTouched: _this.isFieldTouched,
      isFieldValidating: _this.isFieldValidating,
      isFieldsValidating: _this.isFieldsValidating,
      resetFields: _this.resetFields,
      setFields: _this.setFields,
      setFieldsValue: _this.setFieldsValue,
      validateFields: _this.validateFields,
      submit: _this.submit,
      _init: true,
      getInternalHooks: _this.getInternalHooks
    };
  };
  this.getInternalHooks = function(key) {
    if (key === HOOK_MARK) {
      _this.formHooked = true;
      return {
        dispatch: _this.dispatch,
        initEntityValue: _this.initEntityValue,
        registerField: _this.registerField,
        useSubscribe: _this.useSubscribe,
        setInitialValues: _this.setInitialValues,
        destroyForm: _this.destroyForm,
        setCallbacks: _this.setCallbacks,
        setValidateMessages: _this.setValidateMessages,
        getFields: _this.getFields,
        setPreserve: _this.setPreserve,
        getInitialValue: _this.getInitialValue,
        registerWatch: _this.registerWatch
      };
    }
    warning_default(false, "`getInternalHooks` is internal usage. Should not call directly.");
    return null;
  };
  this.useSubscribe = function(subscribable) {
    _this.subscribable = subscribable;
  };
  this.prevWithoutPreserves = null;
  this.setInitialValues = function(initialValues, init) {
    _this.initialValues = initialValues || {};
    if (init) {
      var _this$prevWithoutPres;
      var nextStore = setValues({}, initialValues, _this.store);
      (_this$prevWithoutPres = _this.prevWithoutPreserves) === null || _this$prevWithoutPres === void 0 ? void 0 : _this$prevWithoutPres.map(function(_ref) {
        var namePath = _ref.key;
        nextStore = setValue(nextStore, namePath, getValue2(initialValues, namePath));
      });
      _this.prevWithoutPreserves = null;
      _this.updateStore(nextStore);
    }
  };
  this.destroyForm = function() {
    var prevWithoutPreserves = new NameMap_default();
    _this.getFieldEntities(true).forEach(function(entity) {
      if (!_this.isMergedPreserve(entity.isPreserve())) {
        prevWithoutPreserves.set(entity.getNamePath(), true);
      }
    });
    _this.prevWithoutPreserves = prevWithoutPreserves;
  };
  this.getInitialValue = function(namePath) {
    var initValue = getValue2(_this.initialValues, namePath);
    return namePath.length ? cloneDeep_default(initValue) : initValue;
  };
  this.setCallbacks = function(callbacks) {
    _this.callbacks = callbacks;
  };
  this.setValidateMessages = function(validateMessages) {
    _this.validateMessages = validateMessages;
  };
  this.setPreserve = function(preserve) {
    _this.preserve = preserve;
  };
  this.watchList = [];
  this.registerWatch = function(callback) {
    _this.watchList.push(callback);
    return function() {
      _this.watchList = _this.watchList.filter(function(fn) {
        return fn !== callback;
      });
    };
  };
  this.notifyWatch = function() {
    var namePath = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    if (_this.watchList.length) {
      var values = _this.getFieldsValue();
      _this.watchList.forEach(function(callback) {
        callback(values, namePath);
      });
    }
  };
  this.timeoutId = null;
  this.warningUnhooked = function() {
    if (!_this.timeoutId && typeof window !== "undefined") {
      _this.timeoutId = setTimeout(function() {
        _this.timeoutId = null;
        if (!_this.formHooked) {
          warning_default(false, "Instance created by `useForm` is not connected to any Form element. Forget to pass `form` prop?");
        }
      });
    }
  };
  this.updateStore = function(nextStore) {
    _this.store = nextStore;
  };
  this.getFieldEntities = function() {
    var pure = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    if (!pure) {
      return _this.fieldEntities;
    }
    return _this.fieldEntities.filter(function(field) {
      return field.getNamePath().length;
    });
  };
  this.getFieldsMap = function() {
    var pure = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    var cache = new NameMap_default();
    _this.getFieldEntities(pure).forEach(function(field) {
      var namePath = field.getNamePath();
      cache.set(namePath, field);
    });
    return cache;
  };
  this.getFieldEntitiesForNamePathList = function(nameList) {
    if (!nameList) {
      return _this.getFieldEntities(true);
    }
    var cache = _this.getFieldsMap(true);
    return nameList.map(function(name) {
      var namePath = getNamePath(name);
      return cache.get(namePath) || {
        INVALIDATE_NAME_PATH: getNamePath(name)
      };
    });
  };
  this.getFieldsValue = function(nameList, filterFunc) {
    _this.warningUnhooked();
    if (nameList === true && !filterFunc) {
      return _this.store;
    }
    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);
    var filteredNameList = [];
    fieldEntities.forEach(function(entity) {
      var _entity$isListField;
      var namePath = "INVALIDATE_NAME_PATH" in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath();
      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {
        return;
      }
      if (!filterFunc) {
        filteredNameList.push(namePath);
      } else {
        var meta = "getMeta" in entity ? entity.getMeta() : null;
        if (filterFunc(meta)) {
          filteredNameList.push(namePath);
        }
      }
    });
    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));
  };
  this.getFieldValue = function(name) {
    _this.warningUnhooked();
    var namePath = getNamePath(name);
    return getValue2(_this.store, namePath);
  };
  this.getFieldsError = function(nameList) {
    _this.warningUnhooked();
    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);
    return fieldEntities.map(function(entity, index) {
      if (entity && !("INVALIDATE_NAME_PATH" in entity)) {
        return {
          name: entity.getNamePath(),
          errors: entity.getErrors(),
          warnings: entity.getWarnings()
        };
      }
      return {
        name: getNamePath(nameList[index]),
        errors: [],
        warnings: []
      };
    });
  };
  this.getFieldError = function(name) {
    _this.warningUnhooked();
    var namePath = getNamePath(name);
    var fieldError = _this.getFieldsError([namePath])[0];
    return fieldError.errors;
  };
  this.getFieldWarning = function(name) {
    _this.warningUnhooked();
    var namePath = getNamePath(name);
    var fieldError = _this.getFieldsError([namePath])[0];
    return fieldError.warnings;
  };
  this.isFieldsTouched = function() {
    _this.warningUnhooked();
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var arg0 = args[0], arg1 = args[1];
    var namePathList;
    var isAllFieldsTouched = false;
    if (args.length === 0) {
      namePathList = null;
    } else if (args.length === 1) {
      if (Array.isArray(arg0)) {
        namePathList = arg0.map(getNamePath);
        isAllFieldsTouched = false;
      } else {
        namePathList = null;
        isAllFieldsTouched = arg0;
      }
    } else {
      namePathList = arg0.map(getNamePath);
      isAllFieldsTouched = arg1;
    }
    var fieldEntities = _this.getFieldEntities(true);
    var isFieldTouched = function isFieldTouched2(field) {
      return field.isFieldTouched();
    };
    if (!namePathList) {
      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);
    }
    var map = new NameMap_default();
    namePathList.forEach(function(shortNamePath) {
      map.set(shortNamePath, []);
    });
    fieldEntities.forEach(function(field) {
      var fieldNamePath = field.getNamePath();
      namePathList.forEach(function(shortNamePath) {
        if (shortNamePath.every(function(nameUnit, i) {
          return fieldNamePath[i] === nameUnit;
        })) {
          map.update(shortNamePath, function(list) {
            return [].concat(_toConsumableArray(list), [field]);
          });
        }
      });
    });
    var isNamePathListTouched = function isNamePathListTouched2(entities) {
      return entities.some(isFieldTouched);
    };
    var namePathListEntities = map.map(function(_ref2) {
      var value = _ref2.value;
      return value;
    });
    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);
  };
  this.isFieldTouched = function(name) {
    _this.warningUnhooked();
    return _this.isFieldsTouched([name]);
  };
  this.isFieldsValidating = function(nameList) {
    _this.warningUnhooked();
    var fieldEntities = _this.getFieldEntities();
    if (!nameList) {
      return fieldEntities.some(function(testField) {
        return testField.isFieldValidating();
      });
    }
    var namePathList = nameList.map(getNamePath);
    return fieldEntities.some(function(testField) {
      var fieldNamePath = testField.getNamePath();
      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();
    });
  };
  this.isFieldValidating = function(name) {
    _this.warningUnhooked();
    return _this.isFieldsValidating([name]);
  };
  this.resetWithFieldInitialValue = function() {
    var info = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var cache = new NameMap_default();
    var fieldEntities = _this.getFieldEntities(true);
    fieldEntities.forEach(function(field) {
      var initialValue = field.props.initialValue;
      var namePath = field.getNamePath();
      if (initialValue !== void 0) {
        var records = cache.get(namePath) || /* @__PURE__ */ new Set();
        records.add({
          entity: field,
          value: initialValue
        });
        cache.set(namePath, records);
      }
    });
    var resetWithFields = function resetWithFields2(entities) {
      entities.forEach(function(field) {
        var initialValue = field.props.initialValue;
        if (initialValue !== void 0) {
          var namePath = field.getNamePath();
          var formInitialValue = _this.getInitialValue(namePath);
          if (formInitialValue !== void 0) {
            warning_default(false, "Form already set 'initialValues' with path '".concat(namePath.join("."), "'. Field can not overwrite it."));
          } else {
            var records = cache.get(namePath);
            if (records && records.size > 1) {
              warning_default(false, "Multiple Field with path '".concat(namePath.join("."), "' set 'initialValue'. Can not decide which one to pick."));
            } else if (records) {
              var originValue = _this.getFieldValue(namePath);
              if (!info.skipExist || originValue === void 0) {
                _this.updateStore(setValue(_this.store, namePath, _toConsumableArray(records)[0].value));
              }
            }
          }
        }
      });
    };
    var requiredFieldEntities;
    if (info.entities) {
      requiredFieldEntities = info.entities;
    } else if (info.namePathList) {
      requiredFieldEntities = [];
      info.namePathList.forEach(function(namePath) {
        var records = cache.get(namePath);
        if (records) {
          var _requiredFieldEntitie;
          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function(r) {
            return r.entity;
          })));
        }
      });
    } else {
      requiredFieldEntities = fieldEntities;
    }
    resetWithFields(requiredFieldEntities);
  };
  this.resetFields = function(nameList) {
    _this.warningUnhooked();
    var prevStore = _this.store;
    if (!nameList) {
      _this.updateStore(setValues({}, _this.initialValues));
      _this.resetWithFieldInitialValue();
      _this.notifyObservers(prevStore, null, {
        type: "reset"
      });
      _this.notifyWatch();
      return;
    }
    var namePathList = nameList.map(getNamePath);
    namePathList.forEach(function(namePath) {
      var initialValue = _this.getInitialValue(namePath);
      _this.updateStore(setValue(_this.store, namePath, initialValue));
    });
    _this.resetWithFieldInitialValue({
      namePathList
    });
    _this.notifyObservers(prevStore, namePathList, {
      type: "reset"
    });
    _this.notifyWatch(namePathList);
  };
  this.setFields = function(fields) {
    _this.warningUnhooked();
    var prevStore = _this.store;
    var namePathList = [];
    fields.forEach(function(fieldData) {
      var name = fieldData.name, errors = fieldData.errors, data = _objectWithoutProperties2(fieldData, _excluded3);
      var namePath = getNamePath(name);
      namePathList.push(namePath);
      if ("value" in data) {
        _this.updateStore(setValue(_this.store, namePath, data.value));
      }
      _this.notifyObservers(prevStore, [namePath], {
        type: "setField",
        data: fieldData
      });
    });
    _this.notifyWatch(namePathList);
  };
  this.getFields = function() {
    var entities = _this.getFieldEntities(true);
    var fields = entities.map(function(field) {
      var namePath = field.getNamePath();
      var meta = field.getMeta();
      var fieldData = _objectSpread22(_objectSpread22({}, meta), {}, {
        name: namePath,
        value: _this.getFieldValue(namePath)
      });
      Object.defineProperty(fieldData, "originRCField", {
        value: true
      });
      return fieldData;
    });
    return fields;
  };
  this.initEntityValue = function(entity) {
    var initialValue = entity.props.initialValue;
    if (initialValue !== void 0) {
      var namePath = entity.getNamePath();
      var prevValue = getValue2(_this.store, namePath);
      if (prevValue === void 0) {
        _this.updateStore(setValue(_this.store, namePath, initialValue));
      }
    }
  };
  this.isMergedPreserve = function(fieldPreserve) {
    var mergedPreserve = fieldPreserve !== void 0 ? fieldPreserve : _this.preserve;
    return mergedPreserve !== null && mergedPreserve !== void 0 ? mergedPreserve : true;
  };
  this.registerField = function(entity) {
    _this.fieldEntities.push(entity);
    var namePath = entity.getNamePath();
    _this.notifyWatch([namePath]);
    if (entity.props.initialValue !== void 0) {
      var prevStore = _this.store;
      _this.resetWithFieldInitialValue({
        entities: [entity],
        skipExist: true
      });
      _this.notifyObservers(prevStore, [entity.getNamePath()], {
        type: "valueUpdate",
        source: "internal"
      });
    }
    return function(isListField, preserve) {
      var subNamePath = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      _this.fieldEntities = _this.fieldEntities.filter(function(item) {
        return item !== entity;
      });
      if (!_this.isMergedPreserve(preserve) && (!isListField || subNamePath.length > 1)) {
        var defaultValue = isListField ? void 0 : _this.getInitialValue(namePath);
        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function(field) {
          return !matchNamePath(field.getNamePath(), namePath);
        })) {
          var _prevStore = _this.store;
          _this.updateStore(setValue(_prevStore, namePath, defaultValue, true));
          _this.notifyObservers(_prevStore, [namePath], {
            type: "remove"
          });
          _this.triggerDependenciesUpdate(_prevStore, namePath);
        }
      }
      _this.notifyWatch([namePath]);
    };
  };
  this.dispatch = function(action) {
    switch (action.type) {
      case "updateValue": {
        var namePath = action.namePath, value = action.value;
        _this.updateValue(namePath, value);
        break;
      }
      case "validateField": {
        var _namePath = action.namePath, triggerName = action.triggerName;
        _this.validateFields([_namePath], {
          triggerName
        });
        break;
      }
      default:
    }
  };
  this.notifyObservers = function(prevStore, namePathList, info) {
    if (_this.subscribable) {
      var mergedInfo = _objectSpread22(_objectSpread22({}, info), {}, {
        store: _this.getFieldsValue(true)
      });
      _this.getFieldEntities().forEach(function(_ref3) {
        var onStoreChange = _ref3.onStoreChange;
        onStoreChange(prevStore, namePathList, mergedInfo);
      });
    } else {
      _this.forceRootUpdate();
    }
  };
  this.triggerDependenciesUpdate = function(prevStore, namePath) {
    var childrenFields = _this.getDependencyChildrenFields(namePath);
    if (childrenFields.length) {
      _this.validateFields(childrenFields);
    }
    _this.notifyObservers(prevStore, childrenFields, {
      type: "dependenciesUpdate",
      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))
    });
    return childrenFields;
  };
  this.updateValue = function(name, value) {
    var namePath = getNamePath(name);
    var prevStore = _this.store;
    _this.updateStore(setValue(_this.store, namePath, value));
    _this.notifyObservers(prevStore, [namePath], {
      type: "valueUpdate",
      source: "internal"
    });
    _this.notifyWatch([namePath]);
    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath);
    var onValuesChange = _this.callbacks.onValuesChange;
    if (onValuesChange) {
      var changedValues = cloneByNamePathList(_this.store, [namePath]);
      onValuesChange(changedValues, _this.getFieldsValue());
    }
    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));
  };
  this.setFieldsValue = function(store) {
    _this.warningUnhooked();
    var prevStore = _this.store;
    if (store) {
      var nextStore = setValues(_this.store, store);
      _this.updateStore(nextStore);
    }
    _this.notifyObservers(prevStore, null, {
      type: "valueUpdate",
      source: "external"
    });
    _this.notifyWatch();
  };
  this.getDependencyChildrenFields = function(rootNamePath) {
    var children = /* @__PURE__ */ new Set();
    var childrenFields = [];
    var dependencies2fields = new NameMap_default();
    _this.getFieldEntities().forEach(function(field) {
      var dependencies = field.props.dependencies;
      (dependencies || []).forEach(function(dependency) {
        var dependencyNamePath = getNamePath(dependency);
        dependencies2fields.update(dependencyNamePath, function() {
          var fields = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : /* @__PURE__ */ new Set();
          fields.add(field);
          return fields;
        });
      });
    });
    var fillChildren = function fillChildren2(namePath) {
      var fields = dependencies2fields.get(namePath) || /* @__PURE__ */ new Set();
      fields.forEach(function(field) {
        if (!children.has(field)) {
          children.add(field);
          var fieldNamePath = field.getNamePath();
          if (field.isFieldDirty() && fieldNamePath.length) {
            childrenFields.push(fieldNamePath);
            fillChildren2(fieldNamePath);
          }
        }
      });
    };
    fillChildren(rootNamePath);
    return childrenFields;
  };
  this.triggerOnFieldsChange = function(namePathList, filedErrors) {
    var onFieldsChange = _this.callbacks.onFieldsChange;
    if (onFieldsChange) {
      var fields = _this.getFields();
      if (filedErrors) {
        var cache = new NameMap_default();
        filedErrors.forEach(function(_ref4) {
          var name = _ref4.name, errors = _ref4.errors;
          cache.set(name, errors);
        });
        fields.forEach(function(field) {
          field.errors = cache.get(field.name) || field.errors;
        });
      }
      var changedFields = fields.filter(function(_ref5) {
        var fieldName = _ref5.name;
        return containsNamePath(namePathList, fieldName);
      });
      onFieldsChange(changedFields, fields);
    }
  };
  this.validateFields = function(nameList, options) {
    _this.warningUnhooked();
    var provideNameList = !!nameList;
    var namePathList = provideNameList ? nameList.map(getNamePath) : [];
    var promiseList = [];
    _this.getFieldEntities(true).forEach(function(field) {
      if (!provideNameList) {
        namePathList.push(field.getNamePath());
      }
      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {
        var namePath = field.getNamePath();
        if (namePath.every(function(nameUnit, i) {
          return nameList[i] === nameUnit || nameList[i] === void 0;
        })) {
          namePathList.push(namePath);
        }
      }
      if (!field.props.rules || !field.props.rules.length) {
        return;
      }
      var fieldNamePath = field.getNamePath();
      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {
        var promise = field.validateRules(_objectSpread22({
          validateMessages: _objectSpread22(_objectSpread22({}, defaultValidateMessages), _this.validateMessages)
        }, options));
        promiseList.push(promise.then(function() {
          return {
            name: fieldNamePath,
            errors: [],
            warnings: []
          };
        }).catch(function(ruleErrors) {
          var mergedErrors = [];
          var mergedWarnings = [];
          ruleErrors.forEach(function(_ref6) {
            var warningOnly = _ref6.rule.warningOnly, errors = _ref6.errors;
            if (warningOnly) {
              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));
            } else {
              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));
            }
          });
          if (mergedErrors.length) {
            return Promise.reject({
              name: fieldNamePath,
              errors: mergedErrors,
              warnings: mergedWarnings
            });
          }
          return {
            name: fieldNamePath,
            errors: mergedErrors,
            warnings: mergedWarnings
          };
        }));
      }
    });
    var summaryPromise = allPromiseFinish(promiseList);
    _this.lastValidatePromise = summaryPromise;
    summaryPromise.catch(function(results) {
      return results;
    }).then(function(results) {
      var resultNamePathList = results.map(function(_ref7) {
        var name = _ref7.name;
        return name;
      });
      _this.notifyObservers(_this.store, resultNamePathList, {
        type: "validateFinish"
      });
      _this.triggerOnFieldsChange(resultNamePathList, results);
    });
    var returnPromise = summaryPromise.then(function() {
      if (_this.lastValidatePromise === summaryPromise) {
        return Promise.resolve(_this.getFieldsValue(namePathList));
      }
      return Promise.reject([]);
    }).catch(function(results) {
      var errorList = results.filter(function(result) {
        return result && result.errors.length;
      });
      return Promise.reject({
        values: _this.getFieldsValue(namePathList),
        errorFields: errorList,
        outOfDate: _this.lastValidatePromise !== summaryPromise
      });
    });
    returnPromise.catch(function(e) {
      return e;
    });
    return returnPromise;
  };
  this.submit = function() {
    _this.warningUnhooked();
    _this.validateFields().then(function(values) {
      var onFinish = _this.callbacks.onFinish;
      if (onFinish) {
        try {
          onFinish(values);
        } catch (err) {
          console.error(err);
        }
      }
    }).catch(function(e) {
      var onFinishFailed = _this.callbacks.onFinishFailed;
      if (onFinishFailed) {
        onFinishFailed(e);
      }
    });
  };
  this.forceRootUpdate = forceRootUpdate;
});
function useForm(form) {
  var formRef = React68.useRef();
  var _React$useState = React68.useState({}), _React$useState2 = _slicedToArray(_React$useState, 2), forceUpdate = _React$useState2[1];
  if (!formRef.current) {
    if (form) {
      formRef.current = form;
    } else {
      var forceReRender = function forceReRender2() {
        forceUpdate({});
      };
      var formStore = new FormStore(forceReRender);
      formRef.current = formStore.getForm();
    }
  }
  return [formRef.current];
}
var useForm_default = useForm;

// node_modules/rc-field-form/es/Form.js
var React70 = __toESM(require_react());

// node_modules/rc-field-form/es/FormContext.js
var React69 = __toESM(require_react());
var FormContext = React69.createContext({
  triggerFormChange: function triggerFormChange() {
  },
  triggerFormFinish: function triggerFormFinish() {
  },
  registerForm: function registerForm() {
  },
  unregisterForm: function unregisterForm() {
  }
});
var FormProvider = function FormProvider2(_ref) {
  var validateMessages = _ref.validateMessages, onFormChange = _ref.onFormChange, onFormFinish = _ref.onFormFinish, children = _ref.children;
  var formContext = React69.useContext(FormContext);
  var formsRef = React69.useRef({});
  return React69.createElement(FormContext.Provider, {
    value: _objectSpread22(_objectSpread22({}, formContext), {}, {
      validateMessages: _objectSpread22(_objectSpread22({}, formContext.validateMessages), validateMessages),
      triggerFormChange: function triggerFormChange2(name, changedFields) {
        if (onFormChange) {
          onFormChange(name, {
            changedFields,
            forms: formsRef.current
          });
        }
        formContext.triggerFormChange(name, changedFields);
      },
      triggerFormFinish: function triggerFormFinish2(name, values) {
        if (onFormFinish) {
          onFormFinish(name, {
            values,
            forms: formsRef.current
          });
        }
        formContext.triggerFormFinish(name, values);
      },
      registerForm: function registerForm2(name, form) {
        if (name) {
          formsRef.current = _objectSpread22(_objectSpread22({}, formsRef.current), {}, _defineProperty2({}, name, form));
        }
        formContext.registerForm(name, form);
      },
      unregisterForm: function unregisterForm2(name) {
        var newForms = _objectSpread22({}, formsRef.current);
        delete newForms[name];
        formsRef.current = newForms;
        formContext.unregisterForm(name);
      }
    })
  }, children);
};
var FormContext_default = FormContext;

// node_modules/rc-field-form/es/Form.js
var _excluded4 = ["name", "initialValues", "fields", "form", "preserve", "children", "component", "validateMessages", "validateTrigger", "onValuesChange", "onFieldsChange", "onFinish", "onFinishFailed"];
var Form = function Form2(_ref, ref) {
  var name = _ref.name, initialValues = _ref.initialValues, fields = _ref.fields, form = _ref.form, preserve = _ref.preserve, children = _ref.children, _ref$component = _ref.component, Component2 = _ref$component === void 0 ? "form" : _ref$component, validateMessages = _ref.validateMessages, _ref$validateTrigger = _ref.validateTrigger, validateTrigger = _ref$validateTrigger === void 0 ? "onChange" : _ref$validateTrigger, onValuesChange = _ref.onValuesChange, _onFieldsChange = _ref.onFieldsChange, _onFinish = _ref.onFinish, onFinishFailed = _ref.onFinishFailed, restProps = _objectWithoutProperties2(_ref, _excluded4);
  var formContext = React70.useContext(FormContext_default);
  var _useForm = useForm_default(form), _useForm2 = _slicedToArray(_useForm, 1), formInstance = _useForm2[0];
  var _formInstance$getInte = formInstance.getInternalHooks(HOOK_MARK), useSubscribe = _formInstance$getInte.useSubscribe, setInitialValues = _formInstance$getInte.setInitialValues, setCallbacks = _formInstance$getInte.setCallbacks, setValidateMessages = _formInstance$getInte.setValidateMessages, setPreserve = _formInstance$getInte.setPreserve, destroyForm = _formInstance$getInte.destroyForm;
  React70.useImperativeHandle(ref, function() {
    return formInstance;
  });
  React70.useEffect(function() {
    formContext.registerForm(name, formInstance);
    return function() {
      formContext.unregisterForm(name);
    };
  }, [formContext, formInstance, name]);
  setValidateMessages(_objectSpread22(_objectSpread22({}, formContext.validateMessages), validateMessages));
  setCallbacks({
    onValuesChange,
    onFieldsChange: function onFieldsChange(changedFields) {
      formContext.triggerFormChange(name, changedFields);
      if (_onFieldsChange) {
        for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          rest[_key - 1] = arguments[_key];
        }
        _onFieldsChange.apply(void 0, [changedFields].concat(rest));
      }
    },
    onFinish: function onFinish(values2) {
      formContext.triggerFormFinish(name, values2);
      if (_onFinish) {
        _onFinish(values2);
      }
    },
    onFinishFailed
  });
  setPreserve(preserve);
  var mountRef = React70.useRef(null);
  setInitialValues(initialValues, !mountRef.current);
  if (!mountRef.current) {
    mountRef.current = true;
  }
  React70.useEffect(function() {
    return destroyForm;
  }, []);
  var childrenNode;
  var childrenRenderProps = typeof children === "function";
  if (childrenRenderProps) {
    var values = formInstance.getFieldsValue(true);
    childrenNode = children(values, formInstance);
  } else {
    childrenNode = children;
  }
  useSubscribe(!childrenRenderProps);
  var prevFieldsRef = React70.useRef();
  React70.useEffect(function() {
    if (!isSimilar(prevFieldsRef.current || [], fields || [])) {
      formInstance.setFields(fields || []);
    }
    prevFieldsRef.current = fields;
  }, [fields, formInstance]);
  var formContextValue = React70.useMemo(function() {
    return _objectSpread22(_objectSpread22({}, formInstance), {}, {
      validateTrigger
    });
  }, [formInstance, validateTrigger]);
  var wrapperNode = React70.createElement(FieldContext_default.Provider, {
    value: formContextValue
  }, childrenNode);
  if (Component2 === false) {
    return wrapperNode;
  }
  return React70.createElement(Component2, _extends({}, restProps, {
    onSubmit: function onSubmit(event) {
      event.preventDefault();
      event.stopPropagation();
      formInstance.submit();
    },
    onReset: function onReset(event) {
      var _restProps$onReset;
      event.preventDefault();
      formInstance.resetFields();
      (_restProps$onReset = restProps.onReset) === null || _restProps$onReset === void 0 ? void 0 : _restProps$onReset.call(restProps, event);
    }
  }), wrapperNode);
};
var Form_default = Form;

// node_modules/rc-field-form/es/useWatch.js
var import_react73 = __toESM(require_react());
function stringify(value) {
  try {
    return JSON.stringify(value);
  } catch (err) {
    return Math.random();
  }
}
function useWatch() {
  var dependencies = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var form = arguments.length > 1 ? arguments[1] : void 0;
  var _useState = (0, import_react73.useState)(), _useState2 = _slicedToArray(_useState, 2), value = _useState2[0], setValue2 = _useState2[1];
  var valueStr = (0, import_react73.useMemo)(function() {
    return stringify(value);
  }, [value]);
  var valueStrRef = (0, import_react73.useRef)(valueStr);
  valueStrRef.current = valueStr;
  var fieldContext = (0, import_react73.useContext)(FieldContext_default);
  var formInstance = form || fieldContext;
  var isValidForm = formInstance && formInstance._init;
  if (true) {
    warning_default(isValidForm, "useWatch requires a form instance since it can not auto detect from context.");
  }
  var namePath = getNamePath(dependencies);
  var namePathRef = (0, import_react73.useRef)(namePath);
  namePathRef.current = namePath;
  (0, import_react73.useEffect)(function() {
    if (!isValidForm) {
      return;
    }
    var getFieldsValue = formInstance.getFieldsValue, getInternalHooks2 = formInstance.getInternalHooks;
    var _getInternalHooks = getInternalHooks2(HOOK_MARK), registerWatch = _getInternalHooks.registerWatch;
    var cancelRegister = registerWatch(function(store) {
      var newValue = getValue2(store, namePathRef.current);
      var nextValueStr = stringify(newValue);
      if (valueStrRef.current !== nextValueStr) {
        valueStrRef.current = nextValueStr;
        setValue2(newValue);
      }
    });
    var initialValue = getValue2(getFieldsValue(), namePathRef.current);
    setValue2(initialValue);
    return cancelRegister;
  }, []);
  return value;
}
var useWatch_default = useWatch;

// node_modules/rc-field-form/es/index.js
var InternalForm = React71.forwardRef(Form_default);
var RefForm = InternalForm;
RefForm.FormProvider = FormProvider;
RefForm.Field = Field_default;
RefForm.List = List_default;
RefForm.useForm = useForm_default;
RefForm.useWatch = useWatch_default;
var es_default = RefForm;

// node_modules/antd-mobile/es/components/form/context.js
var import_react74 = __toESM(require_react());
var defaultFormContext = {
  name: void 0,
  hasFeedback: true,
  layout: "vertical",
  requiredMarkStyle: "asterisk",
  disabled: false
};
var FormContext2 = import_react74.default.createContext(defaultFormContext);
var NoStyleItemContext = import_react74.default.createContext(null);

// node_modules/antd-mobile/es/components/form/header.js
var Header = () => null;

// node_modules/antd-mobile/es/components/form/form.js
var import_merge = __toESM(require_merge());

// node_modules/antd-mobile/es/components/form/form-array.js
var import_react75 = __toESM(require_react());
var FormArray = (props) => {
  return import_react75.default.createElement(List_default, {
    name: props.name,
    initialValue: props.initialValue
  }, (rcFields, operation) => {
    const fields = rcFields.map((field) => ({
      index: field.name,
      key: field.key
    }));
    const children = props.children(fields, operation).map((child, index) => {
      var _a;
      return import_react75.default.createElement(list_default, {
        key: fields[index].key,
        mode: "card",
        header: (_a = props.renderHeader) === null || _a === void 0 ? void 0 : _a.call(props, fields[index], operation)
      }, child);
    });
    if (props.renderAdd) {
      children.push(import_react75.default.createElement(list_default, {
        key: "add",
        mode: "card"
      }, import_react75.default.createElement(list_default.Item, {
        className: "adm-form-list-operation",
        onClick: () => {
          props.onAdd ? props.onAdd(operation) : operation.add();
        },
        arrow: false
      }, props.renderAdd())));
    }
    return import_react75.default.createElement(import_react75.default.Fragment, null, children);
  });
};

// node_modules/antd-mobile/es/components/form/form.js
var classPrefix31 = "adm-form";
var defaultProps26 = defaultFormContext;
var Form3 = (0, import_react76.forwardRef)((p, ref) => {
  const props = mergeProps(defaultProps26, p);
  const {
    className,
    style,
    hasFeedback,
    children,
    layout,
    footer,
    mode,
    disabled,
    requiredMarkStyle
  } = props, formProps = __rest(props, ["className", "style", "hasFeedback", "children", "layout", "footer", "mode", "disabled", "requiredMarkStyle"]);
  const {
    locale
  } = useConfig();
  const validateMessages = (0, import_react76.useMemo)(() => (0, import_merge.default)({}, locale.Form.defaultValidateMessages, formProps.validateMessages), [locale.Form.defaultValidateMessages, formProps.validateMessages]);
  const lists = [];
  let currentHeader = null;
  let items = [];
  let count = 0;
  function collect() {
    if (items.length === 0)
      return;
    count += 1;
    lists.push(import_react76.default.createElement(list_default, {
      header: currentHeader,
      key: count,
      mode
    }, items));
    items = [];
  }
  traverseReactNode(props.children, (child) => {
    if (import_react76.default.isValidElement(child)) {
      if (child.type === Header) {
        collect();
        currentHeader = child.props.children;
        return;
      }
      if (child.type === FormArray) {
        collect();
        lists.push(child);
        return;
      }
    }
    items.push(child);
  });
  collect();
  return import_react76.default.createElement(es_default, Object.assign({
    className: (0, import_classnames25.default)(classPrefix31, className),
    style,
    ref
  }, formProps, {
    validateMessages
  }), import_react76.default.createElement(FormContext2.Provider, {
    value: {
      name: formProps.name,
      hasFeedback,
      layout,
      requiredMarkStyle,
      disabled
    }
  }, lists), footer && import_react76.default.createElement("div", {
    className: `${classPrefix31}-footer`
  }, footer));
});

// node_modules/antd-mobile/es/components/form/form-item.js
var import_react81 = __toESM(require_react());
var import_classnames28 = __toESM(require_classnames());
var import_FieldContext7 = __toESM(require_FieldContext());

// node_modules/antd-mobile/es/components/form/utils.js
var import_react_is3 = __toESM(require_react_is2());
function toArray3(candidate) {
  if (candidate === void 0 || candidate === false)
    return [];
  return Array.isArray(candidate) ? candidate : [candidate];
}
function shouldConstruct(Component2) {
  const prototype = Component2.prototype;
  return !!(prototype && prototype.isReactComponent);
}
function isSimpleFunctionComponent(type4) {
  return typeof type4 === "function" && !shouldConstruct(type4) && type4.defaultProps === void 0;
}
function isSafeSetRefComponent(component) {
  if ((0, import_react_is3.isFragment)(component))
    return false;
  if ((0, import_react_is3.isMemo)(component))
    return isSafeSetRefComponent(component.type);
  return !isSimpleFunctionComponent(component.type);
}

// node_modules/antd-mobile/es/components/popover/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/popover/popover.css";
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/popover/popover-menu.css";

// node_modules/antd-mobile/es/components/popover/popover-menu.js
var import_react80 = __toESM(require_react());
var import_classnames27 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/popover/popover.js
var import_react79 = __toESM(require_react());
var import_classnames26 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/popover/arrow.js
var import_react77 = __toESM(require_react());
var Arrow = (0, import_react77.memo)((props) => {
  return withNativeProps(props, import_react77.default.createElement("svg", {
    viewBox: "0 0 30 16"
  }, import_react77.default.createElement("g", {
    fill: "currentColor"
  }, import_react77.default.createElement("path", {
    d: "M0,0 L30,0 L18.07289,14.312538 C16.65863,16.009645 14.13637,16.238942 12.43926,14.824685 C12.25341,14.669808 12.08199,14.49839 11.92711,14.312538 L0,0 L0,0 Z"
  }))));
});

// node_modules/@floating-ui/core/dist/floating-ui.core.esm.js
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "x" : "y";
}
function getLengthFromAxis(axis) {
  return axis === "y" ? "height" : "width";
}
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref;
  const commonX = reference.x + reference.width / 2 - floating.width / 2;
  const commonY = reference.y + reference.height / 2 - floating.height / 2;
  const mainAxis = getMainAxisFromPlacement(placement);
  const length = getLengthFromAxis(mainAxis);
  const commonAlign = reference[length] / 2 - floating[length] / 2;
  const side = getSide(placement);
  const isVertical = mainAxis === "x";
  let coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference, floating, config2) => {
  const {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config2;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating));
  if (true) {
    if (platform2 == null) {
      console.error(["Floating UI: `platform` property was not passed to config. If you", "want to use Floating UI on the web, install @floating-ui/dom", "instead of the /core package. Otherwise, you can create your own", "`platform`: https://floating-ui.com/docs/platform"].join(" "));
    }
    if (middleware.filter((_ref) => {
      let {
        name
      } = _ref;
      return name === "autoPlacement" || name === "flip";
    }).length > 1) {
      throw new Error(["Floating UI: duplicate `flip` and/or `autoPlacement`", "middleware detected. This will lead to an infinite loop. Ensure only", "one of either has been passed to the `middleware` array."].join(" "));
    }
  }
  let rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  });
  let {
    x,
    y
  } = computeCoordsFromPlacement(rects, placement, rtl);
  let statefulPlacement = placement;
  let middlewareData = {};
  let resetCount = 0;
  for (let i = 0; i < middleware.length; i++) {
    const {
      name,
      fn
    } = middleware[i];
    const {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x,
      y,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    x = nextX != null ? nextX : x;
    y = nextY != null ? nextY : y;
    middlewareData = __spreadProps(__spreadValues({}, middlewareData), {
      [name]: __spreadValues(__spreadValues({}, middlewareData[name]), data)
    });
    if (true) {
      if (resetCount > 50) {
        console.warn(["Floating UI: The middleware lifecycle appears to be running in an", "infinite loop. This is usually caused by a `reset` continually", "being returned without a break condition."].join(" "));
      }
    }
    if (reset && resetCount <= 50) {
      resetCount++;
      if (typeof reset === "object") {
        if (reset.placement) {
          statefulPlacement = reset.placement;
        }
        if (reset.rects) {
          rects = reset.rects === true ? await platform2.getElementRects({
            reference,
            floating,
            strategy
          }) : reset.rects;
        }
        ({
          x,
          y
        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));
      }
      i = -1;
      continue;
    }
  }
  return {
    x,
    y,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
function expandPaddingObject(padding) {
  return __spreadValues({
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  }, padding);
}
function getSideObjectFromPadding(padding) {
  return typeof padding !== "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  return __spreadProps(__spreadValues({}, rect), {
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}
async function detectOverflow(middlewareArguments, options) {
  var _await$platform$isEle;
  if (options === void 0) {
    options = {};
  }
  const {
    x,
    y,
    platform: platform2,
    rects,
    elements,
    strategy
  } = middlewareArguments;
  const {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = false,
    padding = 0
  } = options;
  const paddingObject = getSideObjectFromPadding(padding);
  const altContext = elementContext === "floating" ? "reference" : "floating";
  const element = elements[altBoundary ? altContext : elementContext];
  const clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: ((_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  }));
  const elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect: elementContext === "floating" ? __spreadProps(__spreadValues({}, rects.floating), {
      x,
      y
    }) : rects.reference,
    offsetParent: await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating)),
    strategy
  }) : rects[elementContext]);
  return {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
}
var min = Math.min;
var max = Math.max;
function within(min$1, value, max$1) {
  return max(min$1, min(value, max$1));
}
var arrow = (options) => ({
  name: "arrow",
  options,
  async fn(middlewareArguments) {
    const {
      element,
      padding = 0
    } = options != null ? options : {};
    const {
      x,
      y,
      placement,
      rects,
      platform: platform2
    } = middlewareArguments;
    if (element == null) {
      if (true) {
        console.warn("Floating UI: No `element` was passed to the `arrow` middleware.");
      }
      return {};
    }
    const paddingObject = getSideObjectFromPadding(padding);
    const coords = {
      x,
      y
    };
    const axis = getMainAxisFromPlacement(placement);
    const alignment = getAlignment(placement);
    const length = getLengthFromAxis(axis);
    const arrowDimensions = await platform2.getDimensions(element);
    const minProp = axis === "y" ? "top" : "left";
    const maxProp = axis === "y" ? "bottom" : "right";
    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];
    const startDiff = coords[axis] - rects.reference[axis];
    const arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element));
    let clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
    if (clientSize === 0) {
      clientSize = rects.floating[length];
    }
    const centerToReference = endDiff / 2 - startDiff / 2;
    const min3 = paddingObject[minProp];
    const max3 = clientSize - arrowDimensions[length] - paddingObject[maxProp];
    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;
    const offset2 = within(min3, center, max3);
    const alignmentPadding = alignment === "start" ? paddingObject[minProp] : paddingObject[maxProp];
    const shouldAddOffset = alignmentPadding > 0 && center !== offset2 && rects.reference[length] <= rects.floating[length];
    const alignmentOffset = shouldAddOffset ? center < min3 ? min3 - center : max3 - center : 0;
    return {
      [axis]: coords[axis] - alignmentOffset,
      data: {
        [axis]: offset2,
        centerOffset: center - offset2
      }
    };
  }
});
var hash$1 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (matched) => hash$1[matched]);
}
function getAlignmentSides(placement, rects, rtl) {
  if (rtl === void 0) {
    rtl = false;
  }
  const alignment = getAlignment(placement);
  const mainAxis = getMainAxisFromPlacement(placement);
  const length = getLengthFromAxis(mainAxis);
  let mainAlignmentSide = mainAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  if (rects.reference[length] > rects.floating[length]) {
    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);
  }
  return {
    main: mainAlignmentSide,
    cross: getOppositePlacement(mainAlignmentSide)
  };
}
var hash = {
  start: "end",
  end: "start"
};
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (matched) => hash[matched]);
}
var sides = ["top", "right", "bottom", "left"];
var allPlacements = sides.reduce((acc, side) => acc.concat(side, side + "-start", side + "-end"), []);
function getExpandedPlacements(placement) {
  const oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
var flip = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "flip",
    options,
    async fn(middlewareArguments) {
      var _middlewareData$flip;
      const {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = middlewareArguments;
      const _a = options, {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        flipAlignment = true
      } = _a, detectOverflowOptions = __objRest(_a, [
        "mainAxis",
        "crossAxis",
        "fallbackPlacements",
        "fallbackStrategy",
        "flipAlignment"
      ]);
      const side = getSide(placement);
      const isBasePlacement = side === initialPlacement;
      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      const placements = [initialPlacement, ...fallbackPlacements];
      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);
      const overflows = [];
      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis) {
        overflows.push(overflow[side]);
      }
      if (checkCrossAxis) {
        const {
          main,
          cross
        } = getAlignmentSides(placement, rects, await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)));
        overflows.push(overflow[main], overflow[cross]);
      }
      overflowsData = [...overflowsData, {
        placement,
        overflows
      }];
      if (!overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip$, _middlewareData$flip2;
        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;
        const nextPlacement = placements[nextIndex];
        if (nextPlacement) {
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        }
        let resetPlacement = "bottom";
        switch (fallbackStrategy) {
          case "bestFit": {
            var _overflowsData$map$so;
            const placement2 = (_overflowsData$map$so = overflowsData.map((d) => [d, d.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;
            if (placement2) {
              resetPlacement = placement2;
            }
            break;
          }
          case "initialPlacement":
            resetPlacement = initialPlacement;
            break;
        }
        if (placement !== resetPlacement) {
          return {
            reset: {
              placement: resetPlacement
            }
          };
        }
      }
      return {};
    }
  };
};
function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return sides.some((side) => overflow[side] >= 0);
}
var hide = function(_temp) {
  let _a = _temp === void 0 ? {} : _temp, {
    strategy = "referenceHidden"
  } = _a, detectOverflowOptions = __objRest(_a, [
    "strategy"
  ]);
  return {
    name: "hide",
    async fn(middlewareArguments) {
      const {
        rects
      } = middlewareArguments;
      switch (strategy) {
        case "referenceHidden": {
          const overflow = await detectOverflow(middlewareArguments, __spreadProps(__spreadValues({}, detectOverflowOptions), {
            elementContext: "reference"
          }));
          const offsets = getSideOffsets(overflow, rects.reference);
          return {
            data: {
              referenceHiddenOffsets: offsets,
              referenceHidden: isAnySideFullyClipped(offsets)
            }
          };
        }
        case "escaped": {
          const overflow = await detectOverflow(middlewareArguments, __spreadProps(__spreadValues({}, detectOverflowOptions), {
            altBoundary: true
          }));
          const offsets = getSideOffsets(overflow, rects.floating);
          return {
            data: {
              escapedOffsets: offsets,
              escaped: isAnySideFullyClipped(offsets)
            }
          };
        }
        default: {
          return {};
        }
      }
    }
  };
};
async function convertValueToCoords(middlewareArguments, value) {
  const {
    placement,
    platform: platform2,
    elements
  } = middlewareArguments;
  const rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating));
  const side = getSide(placement);
  const alignment = getAlignment(placement);
  const isVertical = getMainAxisFromPlacement(placement) === "x";
  const mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1;
  const crossAxisMulti = rtl && isVertical ? -1 : 1;
  const rawValue = typeof value === "function" ? value(middlewareArguments) : value;
  let {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue === "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : __spreadValues({
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null
  }, rawValue);
  if (alignment && typeof alignmentAxis === "number") {
    crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis;
  }
  return isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var offset = function(value) {
  if (value === void 0) {
    value = 0;
  }
  return {
    name: "offset",
    options: value,
    async fn(middlewareArguments) {
      const {
        x,
        y
      } = middlewareArguments;
      const diffCoords = await convertValueToCoords(middlewareArguments, value);
      return {
        x: x + diffCoords.x,
        y: y + diffCoords.y,
        data: diffCoords
      };
    }
  };
};
function getCrossAxis(axis) {
  return axis === "x" ? "y" : "x";
}
var shift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    name: "shift",
    options,
    async fn(middlewareArguments) {
      const {
        x,
        y,
        placement
      } = middlewareArguments;
      const _a = options, {
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = false,
        limiter = {
          fn: (_ref) => {
            let {
              x: x2,
              y: y2
            } = _ref;
            return {
              x: x2,
              y: y2
            };
          }
        }
      } = _a, detectOverflowOptions = __objRest(_a, [
        "mainAxis",
        "crossAxis",
        "limiter"
      ]);
      const coords = {
        x,
        y
      };
      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);
      const mainAxis = getMainAxisFromPlacement(getSide(placement));
      const crossAxis = getCrossAxis(mainAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        const minSide = mainAxis === "y" ? "top" : "left";
        const maxSide = mainAxis === "y" ? "bottom" : "right";
        const min3 = mainAxisCoord + overflow[minSide];
        const max3 = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = within(min3, mainAxisCoord, max3);
      }
      if (checkCrossAxis) {
        const minSide = crossAxis === "y" ? "top" : "left";
        const maxSide = crossAxis === "y" ? "bottom" : "right";
        const min3 = crossAxisCoord + overflow[minSide];
        const max3 = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = within(min3, crossAxisCoord, max3);
      }
      const limitedCoords = limiter.fn(__spreadProps(__spreadValues({}, middlewareArguments), {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      }));
      return __spreadProps(__spreadValues({}, limitedCoords), {
        data: {
          x: limitedCoords.x - x,
          y: limitedCoords.y - y
        }
      });
    }
  };
};
var limitShift = function(options) {
  if (options === void 0) {
    options = {};
  }
  return {
    options,
    fn(middlewareArguments) {
      const {
        x,
        y,
        placement,
        rects,
        middlewareData
      } = middlewareArguments;
      const {
        offset: offset2 = 0,
        mainAxis: checkMainAxis = true,
        crossAxis: checkCrossAxis = true
      } = options;
      const coords = {
        x,
        y
      };
      const mainAxis = getMainAxisFromPlacement(placement);
      const crossAxis = getCrossAxis(mainAxis);
      let mainAxisCoord = coords[mainAxis];
      let crossAxisCoord = coords[crossAxis];
      const rawOffset = typeof offset2 === "function" ? offset2(__spreadProps(__spreadValues({}, rects), {
        placement
      })) : offset2;
      const computedOffset = typeof rawOffset === "number" ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : __spreadValues({
        mainAxis: 0,
        crossAxis: 0
      }, rawOffset);
      if (checkMainAxis) {
        const len = mainAxis === "y" ? "height" : "width";
        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;
        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        if (mainAxisCoord < limitMin) {
          mainAxisCoord = limitMin;
        } else if (mainAxisCoord > limitMax) {
          mainAxisCoord = limitMax;
        }
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;
        const len = mainAxis === "y" ? "width" : "height";
        const isOriginSide = ["top", "left"].includes(getSide(placement));
        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);
        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        if (crossAxisCoord < limitMin) {
          crossAxisCoord = limitMin;
        } else if (crossAxisCoord > limitMax) {
          crossAxisCoord = limitMax;
        }
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
};

// node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js
function isWindow(value) {
  return value && value.document && value.location && value.alert && value.setInterval;
}
function getWindow(node) {
  if (node == null) {
    return window;
  }
  if (!isWindow(node)) {
    const ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node;
}
function getComputedStyle$1(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeName(node) {
  return isWindow(node) ? "" : node ? (node.nodeName || "").toLowerCase() : "";
}
function getUAString() {
  const uaData = navigator.userAgentData;
  if (uaData != null && uaData.brands) {
    return uaData.brands.map((item) => item.brand + "/" + item.version).join(" ");
  }
  return navigator.userAgent;
}
function isHTMLElement(value) {
  return value instanceof getWindow(value).HTMLElement;
}
function isElement(value) {
  return value instanceof getWindow(value).Element;
}
function isNode(value) {
  return value instanceof getWindow(value).Node;
}
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  const OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}
function isOverflowElement(element) {
  const {
    overflow,
    overflowX,
    overflowY
  } = getComputedStyle$1(element);
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isContainingBlock(element) {
  const isFirefox = /firefox/i.test(getUAString());
  const css = getComputedStyle$1(element);
  return css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].includes(css.willChange) || isFirefox && css.willChange === "filter" || isFirefox && (css.filter ? css.filter !== "none" : false);
}
function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}
var min2 = Math.min;
var max2 = Math.max;
var round = Math.round;
function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  const clientRect = element.getBoundingClientRect();
  let scaleX = 1;
  let scaleY = 1;
  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }
  const win = isElement(element) ? getWindow(element) : window;
  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;
  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;
  const width = clientRect.width / scaleX;
  const height = clientRect.height / scaleY;
  return {
    width,
    height,
    top: y,
    right: x + width,
    bottom: y + height,
    left: x,
    x,
    y
  };
}
function getDocumentElement(node) {
  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;
}
function getNodeScroll(element) {
  if (isElement(element)) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }
  return {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
}
function isScaled(element) {
  const rect = getBoundingClientRect(element);
  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  const rect = getBoundingClientRect(element, isOffsetParentAnElement && isScaled(offsetParent), strategy === "fixed");
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent, true);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html") {
    return node;
  }
  return node.assignedSlot || node.parentNode || (isShadowRoot(node) ? node.host : null) || getDocumentElement(node);
}
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || getComputedStyle(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && !["html", "body"].includes(getNodeName(currentNode))) {
    if (isContainingBlock(currentNode)) {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
function getOffsetParent(element) {
  const window2 = getWindow(element);
  let offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle(offsetParent).position === "static" && !isContainingBlock(offsetParent))) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}
function getDimensions(element) {
  if (isHTMLElement(element)) {
    return {
      width: element.offsetWidth,
      height: element.offsetHeight
    };
  }
  const rect = getBoundingClientRect(element);
  return {
    width: rect.width,
    height: rect.height
  };
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref;
  const isOffsetParentAnElement = isHTMLElement(offsetParent);
  const documentElement = getDocumentElement(offsetParent);
  if (offsetParent === documentElement) {
    return rect;
  }
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") {
    if (getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      const offsetRect = getBoundingClientRect(offsetParent, true);
      offsets.x = offsetRect.x + offsetParent.clientLeft;
      offsets.y = offsetRect.y + offsetParent.clientTop;
    }
  }
  return __spreadProps(__spreadValues({}, rect), {
    x: rect.x - scroll.scrollLeft + offsets.x,
    y: rect.y - scroll.scrollTop + offsets.y
  });
}
function getViewportRect(element, strategy) {
  const win = getWindow(element);
  const html = getDocumentElement(element);
  const visualViewport = win.visualViewport;
  let width = html.clientWidth;
  let height = html.clientHeight;
  let x = 0;
  let y = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    const layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === "fixed") {
      x = visualViewport.offsetLeft;
      y = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getDocumentRect(element) {
  var _element$ownerDocumen;
  const html = getDocumentElement(element);
  const scroll = getNodeScroll(element);
  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  const width = max2(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  const height = max2(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  let x = -scroll.scrollLeft + getWindowScrollBarX(element);
  const y = -scroll.scrollTop;
  if (getComputedStyle$1(body || html).direction === "rtl") {
    x += max2(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x,
    y
  };
}
function getNearestOverflowAncestor(node) {
  const parentNode = getParentNode(node);
  if (["html", "body", "#document"].includes(getNodeName(parentNode))) {
    return node.ownerDocument.body;
  }
  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {
    return parentNode;
  }
  return getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list) {
  var _node$ownerDocument;
  if (list === void 0) {
    list = [];
  }
  const scrollableAncestor = getNearestOverflowAncestor(node);
  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);
  const win = getWindow(scrollableAncestor);
  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;
  const updatedList = list.concat(target);
  return isBody ? updatedList : updatedList.concat(getOverflowAncestors(target));
}
function contains(parent, child) {
  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    let next = child;
    do {
      if (next && parent === next) {
        return true;
      }
      next = next.parentNode || next.host;
    } while (next);
  }
  return false;
}
function getInnerBoundingClientRect(element, strategy) {
  const clientRect = getBoundingClientRect(element, false, strategy === "fixed");
  const top = clientRect.top + element.clientTop;
  const left = clientRect.left + element.clientLeft;
  return {
    top,
    left,
    x: left,
    y: top,
    right: left + element.clientWidth,
    bottom: top + element.clientHeight,
    width: element.clientWidth,
    height: element.clientHeight
  };
}
function getClientRectFromClippingAncestor(element, clippingParent, strategy) {
  if (clippingParent === "viewport") {
    return rectToClientRect(getViewportRect(element, strategy));
  }
  if (isElement(clippingParent)) {
    return getInnerBoundingClientRect(clippingParent, strategy);
  }
  return rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
function getClippingAncestors(element) {
  const clippingAncestors = getOverflowAncestors(element);
  const canEscapeClipping = ["absolute", "fixed"].includes(getComputedStyle$1(element).position);
  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingAncestors.filter((clippingAncestors2) => isElement(clippingAncestors2) && contains(clippingAncestors2, clipperElement) && getNodeName(clippingAncestors2) !== "body");
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref;
  const mainClippingAncestors = boundary === "clippingAncestors" ? getClippingAncestors(element) : [].concat(boundary);
  const clippingAncestors = [...mainClippingAncestors, rootBoundary];
  const firstClippingAncestor = clippingAncestors[0];
  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    accRect.top = max2(rect.top, accRect.top);
    accRect.right = min2(rect.right, accRect.right);
    accRect.bottom = min2(rect.bottom, accRect.bottom);
    accRect.left = max2(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
var platform = {
  getClippingRect,
  convertOffsetParentRelativeRectToViewportRelativeRect,
  isElement,
  getDimensions,
  getOffsetParent,
  getDocumentElement,
  getElementRects: (_ref) => {
    let {
      reference,
      floating,
      strategy
    } = _ref;
    return {
      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),
      floating: __spreadProps(__spreadValues({}, getDimensions(floating)), {
        x: 0,
        y: 0
      })
    };
  },
  getClientRects: (element) => Array.from(element.getClientRects()),
  isRTL: (element) => getComputedStyle$1(element).direction === "rtl"
};
function autoUpdate(reference, floating, update, options) {
  if (options === void 0) {
    options = {};
  }
  const {
    ancestorScroll: _ancestorScroll = true,
    ancestorResize: _ancestorResize = true,
    elementResize = true,
    animationFrame = false
  } = options;
  const ancestorScroll = _ancestorScroll && !animationFrame;
  const ancestorResize = _ancestorResize && !animationFrame;
  const ancestors = ancestorScroll || ancestorResize ? [...isElement(reference) ? getOverflowAncestors(reference) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: true
    });
    ancestorResize && ancestor.addEventListener("resize", update);
  });
  let observer = null;
  if (elementResize) {
    observer = new ResizeObserver(update);
    isElement(reference) && !animationFrame && observer.observe(reference);
    observer.observe(floating);
  }
  let frameId;
  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  if (animationFrame) {
    frameLoop();
  }
  function frameLoop() {
    const nextRefRect = getBoundingClientRect(reference);
    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {
      update();
    }
    prevRefRect = nextRefRect;
    frameId = requestAnimationFrame(frameLoop);
  }
  if (!elementResize) {
    update();
  }
  return () => {
    var _observer;
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update);
      ancestorResize && ancestor.removeEventListener("resize", update);
    });
    (_observer = observer) == null ? void 0 : _observer.disconnect();
    observer = null;
    if (animationFrame) {
      cancelAnimationFrame(frameId);
    }
  };
}
var computePosition2 = (reference, floating, options) => computePosition(reference, floating, __spreadValues({
  platform
}, options));

// node_modules/antd-mobile/es/components/popover/wrapper.js
var import_react78 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
var Wrapper = class extends import_react78.default.Component {
  constructor() {
    super(...arguments);
    this.element = null;
  }
  componentDidMount() {
    this.componentDidUpdate();
  }
  componentDidUpdate() {
    const node = (0, import_react_dom.findDOMNode)(this);
    if (node instanceof Element) {
      this.element = node;
    } else {
      this.element = null;
    }
  }
  render() {
    return import_react78.default.Children.only(this.props.children);
  }
};

// node_modules/antd-mobile/es/components/popover/normalize-placement.js
var record = {
  "topLeft": "top-start",
  "topRight": "top-end",
  "bottomLeft": "bottom-start",
  "bottomRight": "bottom-end",
  "leftTop": "left-start",
  "leftBottom": "left-end",
  "rightTop": "right-start",
  "rightBottom": "right-end"
};
function normalizePlacement(placement) {
  var _a;
  return (_a = record[placement]) !== null && _a !== void 0 ? _a : placement;
}

// node_modules/antd-mobile/es/utils/convert-px.js
var tenPxTester = null;
var tester = null;
if (canUseDom) {
  tenPxTester = document.createElement("div");
  tenPxTester.className = "adm-px-tester";
  tenPxTester.style.setProperty("--size", "10");
  document.body.appendChild(tenPxTester);
  tester = document.createElement("div");
  tester.className = "adm-px-tester";
  document.body.appendChild(tester);
  if (isDev) {
    if (window.getComputedStyle(tester).position !== "fixed") {
      devError("Global", "The px tester is not rendering properly. Please make sure you have imported `antd-mobile/es/global`.");
    }
  }
}
function convertPx(px) {
  if (tenPxTester === null || tester === null)
    return px;
  if (tenPxTester.getBoundingClientRect().height === 10) {
    return px;
  }
  tester.style.setProperty("--size", px.toString());
  return tester.getBoundingClientRect().height;
}

// node_modules/antd-mobile/es/components/popover/popover.js
var classPrefix32 = `adm-popover`;
var defaultProps27 = {
  placement: "top",
  defaultVisible: false,
  stopPropagation: ["click"],
  getContainer: () => document.body
};
var Popover = (0, import_react79.forwardRef)((p, ref) => {
  const props = mergeProps(defaultProps27, p);
  const {
    mode = "light"
  } = props;
  const placement = normalizePlacement(props.placement);
  const [visible, setVisible] = usePropsValue({
    value: props.visible,
    defaultValue: props.defaultVisible,
    onChange: props.onVisibleChange
  });
  (0, import_react79.useImperativeHandle)(ref, () => {
    return {
      show: () => setVisible(true),
      hide: () => setVisible(false),
      visible
    };
  }, [visible]);
  const targetRef = (0, import_react79.useRef)(null);
  const floatingRef = (0, import_react79.useRef)(null);
  const arrowRef = (0, import_react79.useRef)(null);
  const floating = withStopPropagation(props.stopPropagation, withNativeProps(props, import_react79.default.createElement("div", {
    className: (0, import_classnames26.default)(classPrefix32, `${classPrefix32}-${mode}`, !visible && `${classPrefix32}-hidden`),
    ref: floatingRef
  }, import_react79.default.createElement("div", {
    className: `${classPrefix32}-arrow`,
    ref: arrowRef
  }, import_react79.default.createElement(Arrow, {
    className: `${classPrefix32}-arrow-icon`
  })), import_react79.default.createElement("div", {
    className: `${classPrefix32}-inner`
  }, import_react79.default.createElement("div", {
    className: `${classPrefix32}-inner-content`
  }, props.content)))));
  const [targetElement, setTargetElement] = (0, import_react79.useState)(null);
  function update() {
    var _a, _b, _c;
    return __awaiter(this, void 0, void 0, function* () {
      const target = (_b = (_a = targetRef.current) === null || _a === void 0 ? void 0 : _a.element) !== null && _b !== void 0 ? _b : null;
      const floating2 = floatingRef.current;
      const arrowElement = arrowRef.current;
      setTargetElement(target);
      if (!target || !floating2 || !arrowElement)
        return;
      const {
        x,
        y,
        placement: realPlacement,
        middlewareData
      } = yield computePosition2(target, floating2, {
        placement,
        middleware: [offset(convertPx(12)), shift({
          padding: convertPx(4),
          crossAxis: false,
          limiter: limitShift()
        }), flip(), hide(), arrow({
          element: arrowElement,
          padding: convertPx(12)
        })]
      });
      Object.assign(floating2.style, {
        left: `${x}px`,
        top: `${y}px`
      });
      const side = realPlacement.split("-")[0];
      const arrowSide = {
        top: "bottom",
        right: "left",
        bottom: "top",
        left: "right"
      }[side];
      const {
        x: arrowX,
        y: arrowY
      } = (_c = middlewareData.arrow) !== null && _c !== void 0 ? _c : {};
      Object.assign(arrowElement.style, {
        left: arrowX != null ? `${arrowX}px` : "",
        top: arrowY != null ? `${arrowY}px` : "",
        right: "",
        bottom: "",
        [arrowSide]: `-${convertPx(8)}px`
      });
      const arrowRotate = {
        top: "0deg",
        bottom: "180deg",
        left: "270deg",
        right: "90deg"
      }[side];
      arrowElement.style.setProperty("--arrow-icon-rotate", arrowRotate);
    });
  }
  useIsomorphicLayoutEffect_default(() => {
    update();
  });
  (0, import_react79.useEffect)(() => {
    if (!targetElement)
      return;
    if (!props.trigger)
      return;
    function handleClick() {
      setVisible((v) => !v);
    }
    targetElement.addEventListener("click", handleClick);
    return () => {
      targetElement.removeEventListener("click", handleClick);
    };
  }, [targetElement, props.trigger]);
  (0, import_react79.useEffect)(() => {
    const floatingElement = floatingRef.current;
    if (!targetElement || !floatingElement)
      return;
    return autoUpdate(targetElement, floatingElement, update, {
      elementResize: typeof ResizeObserver !== "undefined"
    });
  }, [targetElement]);
  useClickAway(() => {
    if (!props.trigger)
      return;
    setVisible(false);
  }, () => {
    var _a;
    return (_a = targetRef.current) === null || _a === void 0 ? void 0 : _a.element;
  });
  const shouldRender = useShouldRender(visible, false, props.destroyOnHide);
  return import_react79.default.createElement(import_react79.default.Fragment, null, import_react79.default.createElement(Wrapper, {
    ref: targetRef
  }, props.children), shouldRender && renderToContainer(props.getContainer, floating));
});

// node_modules/antd-mobile/es/components/popover/popover-menu.js
var classPrefix33 = `adm-popover-menu`;
var PopoverMenu = (0, import_react80.forwardRef)((props, ref) => {
  const innerRef = (0, import_react80.useRef)(null);
  (0, import_react80.useImperativeHandle)(ref, () => innerRef.current, []);
  const onClick = (0, import_react80.useCallback)((e) => {
    var _a;
    const {
      onAction
    } = props;
    if (onAction) {
      onAction(e);
    }
    (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.hide();
  }, [props.onAction]);
  const overlay = (0, import_react80.useMemo)(() => {
    return import_react80.default.createElement("div", {
      className: `${classPrefix33}-list`
    }, import_react80.default.createElement("div", {
      className: `${classPrefix33}-list-inner`
    }, props.actions.map((action, index) => {
      var _a;
      return import_react80.default.createElement("a", {
        key: (_a = action.key) !== null && _a !== void 0 ? _a : index,
        className: (0, import_classnames27.default)(`${classPrefix33}-item`, "adm-plain-anchor", action.disabled && `${classPrefix33}-item-disabled`),
        onClick: () => {
          var _a2;
          if (action.disabled)
            return;
          onClick(action);
          (_a2 = action.onClick) === null || _a2 === void 0 ? void 0 : _a2.call(action);
        }
      }, action.icon && import_react80.default.createElement("div", {
        className: `${classPrefix33}-item-icon`
      }, action.icon), import_react80.default.createElement("div", {
        className: `${classPrefix33}-item-text`
      }, action.text));
    })));
  }, [props.actions, onClick]);
  return import_react80.default.createElement(Popover, Object.assign({
    ref: innerRef
  }, props, {
    className: (0, import_classnames27.default)(classPrefix33, props.className),
    content: overlay
  }), props.children);
});

// node_modules/antd-mobile/es/components/popover/index.js
var popover_default = attachPropertiesToComponent(Popover, {
  Menu: PopoverMenu
});

// node_modules/antd-mobile/es/utils/undefined-fallback.js
function undefinedFallback(...items) {
  let i;
  for (i = 0; i < items.length; i++) {
    if (items[i] !== void 0)
      break;
  }
  return items[i];
}

// node_modules/antd-mobile/es/components/form/form-item.js
var NAME_SPLIT = "__SPLIT__";
var classPrefix34 = `adm-form-item`;
var MemoInput = import_react81.default.memo(({
  children
}) => children, (prev, next) => prev.value === next.value && prev.update === next.update);
var FormItemLayout = (props) => {
  var _a;
  const {
    className,
    style,
    extra,
    label,
    help,
    required: required4,
    children,
    htmlFor,
    hidden,
    arrow: arrow2,
    childElementPosition = "normal"
  } = props;
  const context = (0, import_react81.useContext)(FormContext2);
  const {
    locale
  } = useConfig();
  const hasFeedback = props.hasFeedback !== void 0 ? props.hasFeedback : context.hasFeedback;
  const layout = props.layout || context.layout;
  const disabled = (_a = props.disabled) !== null && _a !== void 0 ? _a : context.disabled;
  const requiredMark = (() => {
    const {
      requiredMarkStyle
    } = context;
    switch (requiredMarkStyle) {
      case "asterisk":
        return required4 && import_react81.default.createElement("span", {
          className: `${classPrefix34}-required-asterisk`
        }, "*");
      case "text-required":
        return required4 && import_react81.default.createElement("span", {
          className: `${classPrefix34}-required-text`
        }, "(", locale.Form.required, ")");
      case "text-optional":
        return !required4 && import_react81.default.createElement("span", {
          className: `${classPrefix34}-required-text`
        }, "(", locale.Form.optional, ")");
      default:
        return null;
    }
  })();
  const labelElement = label ? import_react81.default.createElement("label", {
    className: `${classPrefix34}-label`,
    htmlFor
  }, label, requiredMark, help && import_react81.default.createElement(popover_default, {
    content: help,
    mode: "dark",
    trigger: "click"
  }, import_react81.default.createElement("span", {
    className: `${classPrefix34}-label-help`,
    onClick: (e) => {
      e.preventDefault();
    }
  }, import_react81.default.createElement(QuestionCircleOutline_default, null)))) : null;
  const description = props.description || hasFeedback ? import_react81.default.createElement(import_react81.default.Fragment, null, props.description, hasFeedback && import_react81.default.createElement(import_react81.default.Fragment, null, props.errors.map((error, index) => import_react81.default.createElement("div", {
    key: `error-${index}`,
    className: `${classPrefix34}-feedback-error`
  }, error)), props.warnings.map((warning4, index) => import_react81.default.createElement("div", {
    key: `warning-${index}`,
    className: `${classPrefix34}-feedback-warning`
  }, warning4)))) : null;
  return import_react81.default.createElement(list_default.Item, {
    style,
    title: layout === "vertical" && labelElement,
    prefix: layout === "horizontal" && labelElement,
    extra,
    description,
    className: (0, import_classnames28.default)(classPrefix34, className, `${classPrefix34}-${layout}`, {
      [`${classPrefix34}-hidden`]: hidden,
      [`${classPrefix34}-has-error`]: props.errors.length
    }),
    disabled,
    onClick: props.onClick,
    clickable: props.clickable,
    arrow: arrow2
  }, import_react81.default.createElement("div", {
    className: (0, import_classnames28.default)(`${classPrefix34}-child`, `${classPrefix34}-child-position-${childElementPosition}`)
  }, import_react81.default.createElement("div", {
    className: (0, import_classnames28.default)(`${classPrefix34}-child-inner`)
  }, children)));
};
var FormItem = (props) => {
  const {
    className,
    style,
    label,
    help,
    extra,
    hasFeedback,
    name,
    required: required4,
    noStyle,
    hidden,
    layout,
    childElementPosition,
    description,
    disabled,
    rules: rules2,
    children,
    messageVariables,
    trigger = "onChange",
    validateTrigger = trigger,
    onClick,
    shouldUpdate,
    dependencies,
    clickable,
    arrow: arrow2
  } = props, fieldProps = __rest(props, ["className", "style", "label", "help", "extra", "hasFeedback", "name", "required", "noStyle", "hidden", "layout", "childElementPosition", "description", "disabled", "rules", "children", "messageVariables", "trigger", "validateTrigger", "onClick", "shouldUpdate", "dependencies", "clickable", "arrow"]);
  const {
    name: formName
  } = (0, import_react81.useContext)(FormContext2);
  const {
    validateTrigger: contextValidateTrigger
  } = (0, import_react81.useContext)(import_FieldContext7.default);
  const mergedValidateTrigger = undefinedFallback(validateTrigger, contextValidateTrigger, trigger);
  const widgetRef = (0, import_react81.useRef)(null);
  const updateRef = (0, import_react81.useRef)(0);
  updateRef.current += 1;
  const [subMetas, setSubMetas] = (0, import_react81.useState)({});
  const onSubMetaChange = (0, import_react81.useCallback)((subMeta, namePath) => {
    setSubMetas((prevSubMetas) => {
      const nextSubMetas = Object.assign({}, prevSubMetas);
      const nameKey = namePath.join(NAME_SPLIT);
      if (subMeta.destroy) {
        delete nextSubMetas[nameKey];
      } else {
        nextSubMetas[nameKey] = subMeta;
      }
      return nextSubMetas;
    });
  }, [setSubMetas]);
  function renderLayout(baseChildren, fieldId, meta, isRequired) {
    var _a, _b;
    if (noStyle && !hidden) {
      return baseChildren;
    }
    const curErrors = (_a = meta === null || meta === void 0 ? void 0 : meta.errors) !== null && _a !== void 0 ? _a : [];
    const errors = Object.keys(subMetas).reduce((subErrors, key) => {
      var _a2, _b2;
      const errors2 = (_b2 = (_a2 = subMetas[key]) === null || _a2 === void 0 ? void 0 : _a2.errors) !== null && _b2 !== void 0 ? _b2 : [];
      if (errors2.length) {
        subErrors = [...subErrors, ...errors2];
      }
      return subErrors;
    }, curErrors);
    const curWarnings = (_b = meta === null || meta === void 0 ? void 0 : meta.warnings) !== null && _b !== void 0 ? _b : [];
    const warnings = Object.keys(subMetas).reduce((subWarnings, key) => {
      var _a2, _b2;
      const warnings2 = (_b2 = (_a2 = subMetas[key]) === null || _a2 === void 0 ? void 0 : _a2.warnings) !== null && _b2 !== void 0 ? _b2 : [];
      if (warnings2.length) {
        subWarnings = [...subWarnings, ...warnings2];
      }
      return subWarnings;
    }, curWarnings);
    return import_react81.default.createElement(FormItemLayout, {
      className,
      style,
      label,
      extra,
      help,
      description,
      required: isRequired,
      disabled,
      hasFeedback,
      htmlFor: fieldId,
      errors,
      warnings,
      onClick: onClick && ((e) => onClick(e, widgetRef)),
      hidden,
      layout,
      childElementPosition,
      clickable,
      arrow: arrow2
    }, import_react81.default.createElement(NoStyleItemContext.Provider, {
      value: onSubMetaChange
    }, baseChildren));
  }
  const isRenderProps = typeof children === "function";
  if (!name && !isRenderProps && !props.dependencies) {
    return renderLayout(children);
  }
  let Variables = {};
  Variables.label = typeof label === "string" ? label : "";
  if (messageVariables) {
    Variables = Object.assign(Object.assign({}, Variables), messageVariables);
  }
  const notifyParentMetaChange = (0, import_react81.useContext)(NoStyleItemContext);
  const onMetaChange = (meta) => {
    if (noStyle && notifyParentMetaChange) {
      const namePath = meta.name;
      notifyParentMetaChange(meta, namePath);
    }
  };
  return import_react81.default.createElement(Field_default, Object.assign({}, fieldProps, {
    name,
    shouldUpdate,
    dependencies,
    rules: rules2,
    trigger,
    validateTrigger: mergedValidateTrigger,
    onMetaChange,
    messageVariables: Variables
  }), (control, meta, context) => {
    let childNode = null;
    const isRequired = required4 !== void 0 ? required4 : rules2 && rules2.some((rule) => !!(rule && typeof rule === "object" && rule.required));
    const nameList = toArray3(name).length && meta ? meta.name : [];
    const fieldId = (nameList.length > 0 && formName ? [formName, ...nameList] : nameList).join("_");
    if (shouldUpdate && dependencies) {
      devWarning("Form.Item", "`shouldUpdate` and `dependencies` shouldn't be used together.");
    }
    if (isRenderProps) {
      if ((shouldUpdate || dependencies) && !name) {
        childNode = children(context);
      } else {
        if (!(shouldUpdate || dependencies)) {
          devWarning("Form.Item", "`children` of render props only work with `shouldUpdate` or `dependencies`.");
        }
        if (name) {
          devWarning("Form.Item", "Do not use `name` with `children` of render props since it's not a field.");
        }
      }
    } else if (dependencies && !name) {
      devWarning("Form.Item", "Must set `name` or use render props when `dependencies` is set.");
    } else if (import_react81.default.isValidElement(children)) {
      if (children.props.defaultValue) {
        devWarning("Form.Item", "`defaultValue` will not work on controlled Field. You should use `initialValues` of Form instead.");
      }
      const childProps = Object.assign(Object.assign({}, children.props), control);
      if (isSafeSetRefComponent(children)) {
        childProps.ref = (instance) => {
          const originRef = children.ref;
          if (originRef) {
            if (typeof originRef === "function") {
              originRef(instance);
            }
            if ("current" in originRef) {
              originRef.current = instance;
            }
          }
          widgetRef.current = instance;
        };
      }
      if (!childProps.id) {
        childProps.id = fieldId;
      }
      const triggers = /* @__PURE__ */ new Set([...toArray3(trigger), ...toArray3(mergedValidateTrigger)]);
      triggers.forEach((eventName) => {
        childProps[eventName] = (...args) => {
          var _a, _b, _c;
          (_a = control[eventName]) === null || _a === void 0 ? void 0 : _a.call(control, ...args);
          (_c = (_b = children.props)[eventName]) === null || _c === void 0 ? void 0 : _c.call(_b, ...args);
        };
      });
      childNode = import_react81.default.createElement(MemoInput, {
        value: control[props.valuePropName || "value"],
        update: updateRef.current
      }, import_react81.default.cloneElement(children, childProps));
    } else {
      if (name) {
        devWarning("Form.Item", "`name` is only used for validate React element. If you are using Form.Item as layout display, please remove `name` instead.");
      }
      childNode = children;
    }
    return renderLayout(childNode, fieldId, meta, isRequired);
  });
};

// node_modules/antd-mobile/es/components/form/form-subscribe.js
var import_react82 = __toESM(require_react());
var FormSubscribe = (props) => {
  const update = useUpdate_default();
  const form = (0, import_react82.useContext)(FieldContext_default);
  return import_react82.default.createElement(import_react82.default.Fragment, null, props.children(form.getFieldsValue(props.to), form), props.to.map((namePath) => import_react82.default.createElement(Watcher, {
    key: namePath.toString(),
    form,
    namePath,
    onChange: update
  })));
};
var Watcher = (0, import_react82.memo)((props) => {
  const value = useWatch_default(props.namePath, props.form);
  useIsomorphicUpdateLayoutEffect(() => {
    props.onChange();
  }, [value]);
  return null;
});

// node_modules/antd-mobile/es/components/form/index.js
var form_default = attachPropertiesToComponent(Form3, {
  Item: FormItem,
  Subscribe: FormSubscribe,
  Header,
  Array: FormArray,
  useForm: useForm_default,
  useWatch: useWatch_default
});

// node_modules/antd-mobile/es/components/grid/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/grid/grid.css";

// node_modules/antd-mobile/es/components/grid/grid.js
var import_react83 = __toESM(require_react());
var classPrefix35 = `adm-grid`;
var Grid = (props) => {
  const style = {
    "--columns": props.columns.toString()
  };
  const {
    gap
  } = props;
  if (gap !== void 0) {
    if (Array.isArray(gap)) {
      style["--gap-horizontal"] = toCSSLength(gap[0]);
      style["--gap-vertical"] = toCSSLength(gap[1]);
    } else {
      style["--gap"] = toCSSLength(gap);
    }
  }
  return withNativeProps(props, import_react83.default.createElement("div", {
    className: classPrefix35,
    style
  }, props.children));
};
var GridItem = (p) => {
  const props = mergeProps({
    span: 1
  }, p);
  const itemStyle = {
    "--item-span": props.span
  };
  return withNativeProps(props, import_react83.default.createElement("div", {
    className: `${classPrefix35}-item`,
    style: itemStyle,
    onClick: props.onClick
  }, props.children));
};

// node_modules/antd-mobile/es/components/grid/index.js
var grid_default = attachPropertiesToComponent(Grid, {
  Item: GridItem
});

// node_modules/antd-mobile/es/components/image-uploader/image-uploader.js
var import_react93 = __toESM(require_react());

// node_modules/antd-mobile/es/components/image-viewer/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/image-viewer/image-viewer.css";

// node_modules/antd-mobile/es/components/image-viewer/image-viewer.js
var import_react88 = __toESM(require_react());

// node_modules/antd-mobile/es/components/image-viewer/slide.js
var import_react85 = __toESM(require_react());

// node_modules/antd-mobile/es/utils/use-drag-and-pinch.js
var useDragAndPinch = createUseGesture([dragAction, pinchAction]);

// node_modules/antd-mobile/es/components/image-viewer/slide.js
var classPrefix36 = `adm-image-viewer`;
var Slide = (props) => {
  const {
    dragLockRef
  } = props;
  const controlRef = (0, import_react85.useRef)(null);
  const imgRef = (0, import_react85.useRef)(null);
  const [{
    zoom,
    x,
    y
  }, api] = useSpring(() => ({
    zoom: 1,
    x: 0,
    y: 0,
    config: {
      tension: 200
    }
  }));
  const pinchLockRef = (0, import_react85.useRef)(false);
  function boundXY([x2, y2], rubberband3) {
    const currentZoom = zoom.get();
    let xOffset = 0, yOffset = 0;
    if (imgRef.current && controlRef.current) {
      xOffset = ((currentZoom * imgRef.current.width || 0) - controlRef.current.clientWidth) / 2;
      yOffset = ((currentZoom * imgRef.current.height || 0) - controlRef.current.clientHeight) / 2;
    }
    xOffset = xOffset > 0 ? xOffset : 0;
    yOffset = yOffset > 0 ? yOffset : 0;
    const bounds = {
      left: -xOffset,
      right: xOffset,
      top: -yOffset,
      bottom: yOffset
    };
    if (rubberband3) {
      return [rubberbandIfOutOfBounds2(x2, bounds.left, bounds.right, currentZoom * 50), rubberbandIfOutOfBounds2(y2, bounds.top, bounds.bottom, currentZoom * 50)];
    } else {
      return [bound(x2, bounds.left, bounds.right), bound(y2, bounds.top, bounds.bottom)];
    }
  }
  useDragAndPinch({
    onDrag: (state) => {
      if (state.tap && state.elapsedTime > 0 && state.elapsedTime < 1e3) {
        props.onTap();
        return;
      }
      const currentZoom = zoom.get();
      if (dragLockRef) {
        dragLockRef.current = currentZoom !== 1;
      }
      if (!pinchLockRef.current && currentZoom <= 1) {
        api.start({
          x: 0,
          y: 0
        });
      } else {
        if (state.last) {
          const [x2, y2] = boundXY([state.offset[0] + state.velocity[0] * state.direction[0] * 200, state.offset[1] + state.velocity[1] * state.direction[1] * 200], false);
          api.start({
            x: x2,
            y: y2
          });
        } else {
          const [x2, y2] = boundXY(state.offset, true);
          api.start({
            x: x2,
            y: y2,
            immediate: true
          });
        }
      }
    },
    onPinch: (state) => {
      var _a;
      pinchLockRef.current = !state.last;
      const [d] = state.offset;
      if (d < 0)
        return;
      const nextZoom = state.last ? bound(d, 1, props.maxZoom) : d;
      api.start({
        zoom: nextZoom,
        immediate: !state.last
      });
      (_a = props.onZoomChange) === null || _a === void 0 ? void 0 : _a.call(props, nextZoom);
      if (state.last && nextZoom <= 1) {
        api.start({
          x: 0,
          y: 0
        });
        if (dragLockRef) {
          dragLockRef.current = false;
        }
      } else {
        if (dragLockRef) {
          dragLockRef.current = true;
        }
      }
    }
  }, {
    target: controlRef,
    drag: {
      from: () => [x.get(), y.get()],
      pointer: {
        touch: true
      }
    },
    pinch: {
      from: () => [zoom.get(), 0],
      pointer: {
        touch: true
      }
    }
  });
  return import_react85.default.createElement("div", {
    className: `${classPrefix36}-slide`,
    onPointerMove: (e) => {
      if (zoom.get() !== 1) {
        e.stopPropagation();
      }
    }
  }, import_react85.default.createElement("div", {
    className: `${classPrefix36}-control`,
    ref: controlRef
  }, import_react85.default.createElement(animated.div, {
    className: `${classPrefix36}-image-wrapper`,
    style: {
      translateX: x,
      translateY: y,
      scale: zoom
    }
  }, import_react85.default.createElement("img", {
    ref: imgRef,
    src: props.image,
    draggable: false,
    alt: props.image
  }))));
};

// node_modules/antd-mobile/es/components/image-viewer/slides.js
var import_react86 = __toESM(require_react());
var classPrefix37 = `adm-image-viewer`;
var Slides = (0, import_react86.forwardRef)((props, ref) => {
  const slideWidth = window.innerWidth + convertPx(16);
  const [{
    x
  }, api] = useSpring(() => ({
    x: props.defaultIndex * slideWidth,
    config: {
      tension: 250,
      clamp: true
    }
  }));
  const count = props.images.length;
  function swipeTo(index, immediate = false) {
    var _a;
    const i = bound(index, 0, count - 1);
    (_a = props.onIndexChange) === null || _a === void 0 ? void 0 : _a.call(props, i);
    api.start({
      x: i * slideWidth,
      immediate
    });
  }
  (0, import_react86.useImperativeHandle)(ref, () => ({
    swipeTo
  }));
  const dragLockRef = (0, import_react86.useRef)(false);
  const bind = useDrag((state) => {
    if (dragLockRef.current)
      return;
    const [offsetX] = state.offset;
    if (state.last) {
      const minIndex = Math.floor(offsetX / slideWidth);
      const maxIndex = minIndex + 1;
      const velocityOffset = Math.min(state.velocity[0] * 2e3, slideWidth) * state.direction[0];
      swipeTo(bound(Math.round((offsetX + velocityOffset) / slideWidth), minIndex, maxIndex));
    } else {
      api.start({
        x: offsetX,
        immediate: true
      });
    }
  }, {
    transform: ([x2, y]) => [-x2, y],
    from: () => [x.get(), 0],
    bounds: () => {
      return {
        left: 0,
        right: (count - 1) * slideWidth
      };
    },
    rubberband: true,
    axis: "x",
    pointer: {
      touch: true
    }
  });
  return import_react86.default.createElement("div", Object.assign({
    className: `${classPrefix37}-slides`
  }, bind()), import_react86.default.createElement(animated.div, {
    className: `${classPrefix37}-indicator`
  }, x.to((v) => {
    const index = bound(Math.round(v / slideWidth), 0, count - 1);
    return `${index + 1} / ${count}`;
  })), import_react86.default.createElement(animated.div, {
    className: `${classPrefix37}-slides-inner`,
    style: {
      x: x.to((x2) => -x2)
    }
  }, props.images.map((image) => import_react86.default.createElement(Slide, {
    key: image,
    image,
    onTap: props.onTap,
    maxZoom: props.maxZoom,
    onZoomChange: (zoom) => {
      if (zoom !== 1) {
        const index = Math.round(x.get() / slideWidth);
        api.start({
          x: index * slideWidth
        });
      }
    },
    dragLockRef
  }))));
});

// node_modules/antd-mobile/es/components/image-viewer/image-viewer.js
var classPrefix38 = `adm-image-viewer`;
var defaultProps28 = {
  maxZoom: 3,
  getContainer: null,
  visible: false
};
var ImageViewer = (p) => {
  var _a;
  const props = mergeProps(defaultProps28, p);
  const node = import_react88.default.createElement(mask_default, {
    visible: props.visible,
    disableBodyScroll: false,
    opacity: "thick",
    afterClose: props.afterClose
  }, import_react88.default.createElement("div", {
    className: `${classPrefix38}-content`
  }, props.image && import_react88.default.createElement(Slide, {
    image: props.image,
    onTap: () => {
      var _a2;
      (_a2 = props.onClose) === null || _a2 === void 0 ? void 0 : _a2.call(props);
    },
    maxZoom: props.maxZoom
  })), props.image && import_react88.default.createElement("div", {
    className: `${classPrefix38}-footer`
  }, (_a = props.renderFooter) === null || _a === void 0 ? void 0 : _a.call(props, props.image), import_react88.default.createElement(safe_area_default, {
    position: "bottom"
  })));
  return renderToContainer(props.getContainer, node);
};
var multiDefaultProps = Object.assign(Object.assign({}, defaultProps28), {
  defaultIndex: 0
});
var MultiImageViewer = (0, import_react88.forwardRef)((p, ref) => {
  var _a;
  const props = mergeProps(multiDefaultProps, p);
  const [index, setIndex] = (0, import_react88.useState)(props.defaultIndex);
  const slidesRef = (0, import_react88.useRef)(null);
  (0, import_react88.useImperativeHandle)(ref, () => ({
    swipeTo: (index2, immediate) => {
      var _a2;
      setIndex(index2);
      (_a2 = slidesRef.current) === null || _a2 === void 0 ? void 0 : _a2.swipeTo(index2, immediate);
    }
  }));
  const onSlideChange = (0, import_react88.useCallback)((index2) => {
    var _a2;
    setIndex(index2);
    (_a2 = props.onIndexChange) === null || _a2 === void 0 ? void 0 : _a2.call(props, index2);
  }, [props.onIndexChange]);
  const node = import_react88.default.createElement(mask_default, {
    visible: props.visible,
    disableBodyScroll: false,
    opacity: "thick",
    afterClose: props.afterClose
  }, import_react88.default.createElement("div", {
    className: `${classPrefix38}-content`
  }, props.images && import_react88.default.createElement(Slides, {
    ref: slidesRef,
    defaultIndex: index,
    onIndexChange: onSlideChange,
    images: props.images,
    onTap: () => {
      var _a2;
      (_a2 = props.onClose) === null || _a2 === void 0 ? void 0 : _a2.call(props);
    },
    maxZoom: props.maxZoom
  })), props.images && import_react88.default.createElement("div", {
    className: `${classPrefix38}-footer`
  }, (_a = props.renderFooter) === null || _a === void 0 ? void 0 : _a.call(props, props.images[index], index), import_react88.default.createElement(safe_area_default, {
    position: "bottom"
  })));
  return renderToContainer(props.getContainer, node);
});

// node_modules/antd-mobile/es/components/image-viewer/methods.js
var import_react89 = __toESM(require_react());
var handlerSet = /* @__PURE__ */ new Set();
function showImageViewer(props) {
  clearImageViewer();
  const handler = renderImperatively(import_react89.default.createElement(ImageViewer, Object.assign({}, props, {
    afterClose: () => {
      var _a;
      handlerSet.delete(handler);
      (_a = props.afterClose) === null || _a === void 0 ? void 0 : _a.call(props);
    }
  })));
  handlerSet.add(handler);
  return handler;
}
function showMultiImageViewer(props) {
  clearImageViewer();
  const handler = renderImperatively(import_react89.default.createElement(MultiImageViewer, Object.assign({}, props, {
    afterClose: () => {
      var _a;
      handlerSet.delete(handler);
      (_a = props.afterClose) === null || _a === void 0 ? void 0 : _a.call(props);
    }
  })));
  handlerSet.add(handler);
  return handler;
}
function clearImageViewer() {
  handlerSet.forEach((handler) => {
    handler.close();
  });
  handlerSet.clear();
}

// node_modules/antd-mobile/es/components/image-viewer/index.js
var Multi = attachPropertiesToComponent(MultiImageViewer, {
  show: showMultiImageViewer
});
var image_viewer_default = attachPropertiesToComponent(ImageViewer, {
  Multi,
  show: showImageViewer,
  clear: clearImageViewer
});

// node_modules/antd-mobile/es/components/image-uploader/preview-item.js
var import_react91 = __toESM(require_react());
var import_classnames29 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/spin-loading/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/spin-loading/spin-loading.css";

// node_modules/antd-mobile/es/components/spin-loading/spin-loading.js
var import_react90 = __toESM(require_react());

// node_modules/antd-mobile/es/utils/reduce-and-restore-motion.js
var import_shim = __toESM(require_shim());
var reduced = false;
var subscribers = /* @__PURE__ */ new Set();
function notify() {
  subscribers.forEach((subscriber) => {
    subscriber();
  });
}
function reduceMotion() {
  reduced = true;
  notify();
  globals.assign({
    skipAnimation: true
  });
}
function restoreMotion() {
  reduced = false;
  notify();
  globals.assign({
    skipAnimation: false
  });
}
function isMotionReduced() {
  return reduced;
}
function useMotionReduced() {
  return (0, import_shim.useSyncExternalStore)((onStoreChange) => {
    subscribers.add(onStoreChange);
    return () => {
      subscribers.delete(onStoreChange);
    };
  }, isMotionReduced);
}

// node_modules/antd-mobile/es/components/spin-loading/spin-loading.js
var classPrefix39 = "adm-spin-loading";
var colorRecord2 = {
  default: "var(--adm-color-weak)",
  primary: "var(--adm-color-primary)",
  white: "var(--adm-color-white)"
};
var defaultProps29 = {
  color: "default"
};
var circumference = 15 * 3.14159265358979 * 2;
var SpinLoading = (0, import_react90.memo)((p) => {
  var _a;
  const props = mergeProps(defaultProps29, p);
  const motionReduced = useMotionReduced();
  const {
    percent
  } = useSpring({
    cancel: motionReduced,
    loop: {
      reverse: true
    },
    from: {
      percent: 80
    },
    to: {
      percent: 30
    },
    config: {
      duration: 1200
    }
  });
  return withNativeProps(props, import_react90.default.createElement(animated.div, {
    className: classPrefix39,
    style: {
      "--color": (_a = colorRecord2[props.color]) !== null && _a !== void 0 ? _a : props.color,
      "--percent": percent
    }
  }, import_react90.default.createElement("svg", {
    className: `${classPrefix39}-svg`,
    viewBox: "0 0 32 32"
  }, import_react90.default.createElement(animated.circle, {
    className: `${classPrefix39}-fill`,
    fill: "transparent",
    strokeWidth: "2",
    strokeDasharray: circumference,
    strokeDashoffset: percent,
    strokeLinecap: "square",
    r: 15,
    cx: 16,
    cy: 16
  }))));
});

// node_modules/antd-mobile/es/components/spin-loading/index.js
var spin_loading_default = SpinLoading;

// node_modules/antd-mobile/es/components/image-uploader/preview-item.js
var classPrefix40 = `adm-image-uploader`;
var PreviewItem = (props) => {
  const {
    locale
  } = useConfig();
  const {
    url: url2,
    file,
    deletable,
    onDelete,
    imageFit
  } = props;
  const src = (0, import_react91.useMemo)(() => {
    if (url2) {
      return url2;
    }
    if (file) {
      return URL.createObjectURL(file);
    }
    return "";
  }, [url2, file]);
  function renderLoading() {
    return props.status === "pending" && import_react91.default.createElement("div", {
      className: `${classPrefix40}-cell-mask`
    }, import_react91.default.createElement("span", {
      className: `${classPrefix40}-cell-loading`
    }, import_react91.default.createElement(spin_loading_default, {
      color: "white"
    }), import_react91.default.createElement("span", {
      className: `${classPrefix40}-cell-mask-message`
    }, locale.ImageUploader.uploading)));
  }
  function renderDelete() {
    return deletable && import_react91.default.createElement("span", {
      className: `${classPrefix40}-cell-delete`,
      onClick: onDelete
    }, import_react91.default.createElement(CloseOutline_default, {
      className: `${classPrefix40}-cell-delete-icon`
    }));
  }
  return import_react91.default.createElement("div", {
    className: (0, import_classnames29.default)(`${classPrefix40}-cell`, props.status === "fail" && `${classPrefix40}-cell-fail`)
  }, import_react91.default.createElement(image_default, {
    className: `${classPrefix40}-cell-image`,
    src,
    fit: imageFit,
    onClick: props.onClick
  }), renderLoading(), renderDelete());
};
var preview_item_default = PreviewItem;

// node_modules/antd-mobile/es/components/space/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/space/space.css";

// node_modules/antd-mobile/es/components/space/space.js
var import_react92 = __toESM(require_react());
var import_classnames30 = __toESM(require_classnames());
var classPrefix41 = `adm-space`;
var defaultProps30 = {
  direction: "horizontal"
};
var Space = (p) => {
  const props = mergeProps(defaultProps30, p);
  const {
    direction,
    onClick
  } = props;
  return withNativeProps(props, import_react92.default.createElement("div", {
    className: (0, import_classnames30.default)(classPrefix41, {
      [`${classPrefix41}-wrap`]: props.wrap,
      [`${classPrefix41}-block`]: props.block,
      [`${classPrefix41}-${direction}`]: true,
      [`${classPrefix41}-align-${props.align}`]: !!props.align,
      [`${classPrefix41}-justify-${props.justify}`]: !!props.justify
    }),
    onClick
  }, import_react92.default.Children.map(props.children, (child) => {
    return child !== null && child !== void 0 && import_react92.default.createElement("div", {
      className: `${classPrefix41}-item`
    }, child);
  })));
};

// node_modules/antd-mobile/es/components/space/index.js
var space_default = Space;

// node_modules/antd-mobile/es/components/image-uploader/image-uploader.js
var classPrefix42 = `adm-image-uploader`;
var defaultProps31 = {
  disableUpload: false,
  deletable: true,
  showUpload: true,
  multiple: false,
  maxCount: 0,
  defaultValue: [],
  accept: "image/*",
  preview: true,
  showFailed: true,
  imageFit: "cover"
};
var ImageUploader = (p) => {
  const {
    locale
  } = useConfig();
  const props = mergeProps(defaultProps31, p);
  const [value, setValue2] = usePropsValue(props);
  const [tasks, setTasks] = (0, import_react93.useState)([]);
  useIsomorphicLayoutEffect_default(() => {
    setTasks((prev) => prev.filter((task) => {
      if (task.url === void 0)
        return true;
      return !value.some((fileItem) => fileItem.url === task.url);
    }));
  }, [value]);
  const idCountRef = (0, import_react93.useRef)(0);
  const {
    maxCount,
    onPreview
  } = props;
  function processFile(file, fileList) {
    return __awaiter(this, void 0, void 0, function* () {
      const {
        beforeUpload
      } = props;
      let transformedFile = file;
      transformedFile = yield beforeUpload === null || beforeUpload === void 0 ? void 0 : beforeUpload(file, fileList);
      return transformedFile;
    });
  }
  function onChange(e) {
    var _a;
    return __awaiter(this, void 0, void 0, function* () {
      e.persist();
      const {
        files: rawFiles
      } = e.target;
      if (!rawFiles)
        return;
      let files = [].slice.call(rawFiles);
      e.target.value = "";
      if (props.beforeUpload) {
        const postFiles = files.map((file) => {
          return processFile(file, files);
        });
        yield Promise.all(postFiles).then((filesList) => {
          files = filesList.filter(Boolean);
        });
      }
      if (files.length === 0) {
        return;
      }
      if (maxCount > 0) {
        const exceed = value.length + files.length - maxCount;
        if (exceed > 0) {
          files = files.slice(0, files.length - exceed);
          (_a = props.onCountExceed) === null || _a === void 0 ? void 0 : _a.call(props, exceed);
        }
      }
      const newTasks = files.map((file) => ({
        id: idCountRef.current++,
        status: "pending",
        file
      }));
      setTasks((prev) => [...prev, ...newTasks]);
      yield Promise.all(newTasks.map((currentTask) => __awaiter(this, void 0, void 0, function* () {
        try {
          const result = yield props.upload(currentTask.file);
          setTasks((prev) => {
            return prev.map((task) => {
              if (task.id === currentTask.id) {
                return Object.assign(Object.assign({}, task), {
                  url: result.url
                });
              }
              return task;
            });
          });
          setValue2((prev) => {
            const newVal = Object.assign({}, result);
            return [...prev, newVal];
          });
        } catch (e2) {
          setTasks((prev) => {
            return prev.map((task) => {
              if (task.id === currentTask.id) {
                return Object.assign(Object.assign({}, task), {
                  status: "fail"
                });
              }
              return task;
            });
          });
          throw e2;
        }
      }))).catch((error) => console.error(error));
    });
  }
  const imageViewerHandlerRef = (0, import_react93.useRef)(null);
  function previewImage(index) {
    imageViewerHandlerRef.current = image_viewer_default.Multi.show({
      images: value.map((fileItem) => fileItem.url),
      defaultIndex: index,
      onClose: () => {
        imageViewerHandlerRef.current = null;
      }
    });
  }
  useUnmount_default(() => {
    var _a;
    (_a = imageViewerHandlerRef.current) === null || _a === void 0 ? void 0 : _a.close();
  });
  const showUpload = props.showUpload && (maxCount === 0 || value.length + tasks.length < maxCount);
  return withNativeProps(props, import_react93.default.createElement("div", {
    className: classPrefix42
  }, import_react93.default.createElement(space_default, {
    className: `${classPrefix42}-space`,
    wrap: true,
    block: true
  }, value.map((fileItem, index) => {
    var _a, _b;
    return import_react93.default.createElement(preview_item_default, {
      key: (_a = fileItem.key) !== null && _a !== void 0 ? _a : index,
      url: (_b = fileItem.thumbnailUrl) !== null && _b !== void 0 ? _b : fileItem.url,
      deletable: props.deletable,
      imageFit: props.imageFit,
      onClick: () => {
        if (props.preview) {
          previewImage(index);
        }
        onPreview && onPreview(index, fileItem);
      },
      onDelete: () => __awaiter(void 0, void 0, void 0, function* () {
        var _c;
        const canDelete = yield (_c = props.onDelete) === null || _c === void 0 ? void 0 : _c.call(props, fileItem);
        if (canDelete === false)
          return;
        setValue2(value.filter((x, i) => i !== index));
      })
    });
  }), tasks.map((task) => {
    if (!props.showFailed && task.status === "fail") {
      return null;
    }
    return import_react93.default.createElement(preview_item_default, {
      key: task.id,
      file: task.file,
      deletable: task.status !== "pending",
      status: task.status,
      imageFit: props.imageFit,
      onDelete: () => {
        setTasks(tasks.filter((x) => x.id !== task.id));
      }
    });
  }), showUpload && import_react93.default.createElement("div", {
    className: `${classPrefix42}-upload-button-wrap`
  }, props.children ? props.children : import_react93.default.createElement("span", {
    className: `${classPrefix42}-cell ${classPrefix42}-upload-button`,
    role: "button",
    "aria-label": locale.ImageUploader.upload
  }, import_react93.default.createElement("span", {
    className: `${classPrefix42}-upload-button-icon`
  }, import_react93.default.createElement(AddOutline_default, null))), !props.disableUpload && import_react93.default.createElement("input", {
    capture: props.capture,
    accept: props.accept,
    multiple: props.multiple,
    type: "file",
    className: `${classPrefix42}-input`,
    onChange,
    "aria-hidden": true
  })))));
};

// node_modules/antd-mobile/es/components/image-uploader/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/image-uploader/image-uploader.css";
var image_uploader_default = ImageUploader;

// node_modules/antd-mobile/es/components/index-bar/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/index-bar/index-bar.css";

// node_modules/antd-mobile/es/components/index-bar/panel.js
var Panel = () => null;

// node_modules/antd-mobile/es/components/index-bar/index-bar.js
var import_react95 = __toESM(require_react());
var import_classnames32 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/index-bar/sidebar.js
var import_react94 = __toESM(require_react());
var import_classnames31 = __toESM(require_classnames());
var classPrefix43 = `adm-index-bar`;
var Sidebar = (props) => {
  const [interacting, setInteracting] = (0, import_react94.useState)(false);
  return import_react94.default.createElement("div", {
    className: (0, import_classnames31.default)(`${classPrefix43}-sidebar`, {
      [`${classPrefix43}-sidebar-interacting`]: interacting
    }),
    onMouseDown: () => {
      setInteracting(true);
    },
    onMouseUp: () => {
      setInteracting(false);
    },
    onTouchStart: () => {
      setInteracting(true);
    },
    onTouchEnd: () => {
      setInteracting(false);
    },
    onTouchMove: (e) => {
      if (!interacting)
        return;
      const {
        clientX,
        clientY
      } = e.touches[0];
      const target = document.elementFromPoint(clientX, clientY);
      if (!target)
        return;
      const index = target.dataset["index"];
      if (index) {
        props.onActive(index);
      }
    }
  }, props.indexItems.map(({
    index,
    brief
  }) => {
    const active = index === props.activeIndex;
    return import_react94.default.createElement("div", {
      className: `${classPrefix43}-sidebar-row`,
      onMouseDown: () => {
        props.onActive(index);
      },
      onTouchStart: () => {
        props.onActive(index);
      },
      onMouseEnter: () => {
        if (interacting) {
          props.onActive(index);
        }
      },
      "data-index": index,
      key: index
    }, interacting && active && import_react94.default.createElement("div", {
      className: `${classPrefix43}-sidebar-bubble`
    }, brief), import_react94.default.createElement("div", {
      className: (0, import_classnames31.default)(`${classPrefix43}-sidebar-item`, {
        [`${classPrefix43}-sidebar-item-active`]: active
      }),
      "data-index": index
    }, import_react94.default.createElement("div", null, brief)));
  }));
};

// node_modules/antd-mobile/es/components/index-bar/index-bar.js
var classPrefix44 = `adm-index-bar`;
var defaultProps32 = {
  sticky: true
};
var IndexBar = (0, import_react95.forwardRef)((p, ref) => {
  const props = mergeProps(defaultProps32, p);
  const titleHeight = convertPx(35);
  const bodyRef = (0, import_react95.useRef)(null);
  const indexItems = [];
  const panels = [];
  traverseReactNode(props.children, (child) => {
    var _a;
    if (!import_react95.default.isValidElement(child))
      return;
    if (child.type !== Panel) {
      devWarning("IndexBar", "The children of `IndexBar` must be `IndexBar.Panel` components.");
      return;
    }
    indexItems.push({
      index: child.props.index,
      brief: (_a = child.props.brief) !== null && _a !== void 0 ? _a : child.props.index.charAt(0)
    });
    panels.push(withNativeProps(child.props, import_react95.default.createElement("div", {
      key: child.props.index,
      "data-index": child.props.index,
      className: `${classPrefix44}-anchor`
    }, import_react95.default.createElement("div", {
      className: `${classPrefix44}-anchor-title`
    }, child.props.title || child.props.index), child.props.children)));
  });
  const [activeIndex, setActiveIndex] = (0, import_react95.useState)(() => {
    const firstItem = indexItems[0];
    return firstItem ? firstItem.index : null;
  });
  (0, import_react95.useImperativeHandle)(ref, () => ({
    scrollTo
  }));
  function scrollTo(index) {
    var _a;
    const body = bodyRef.current;
    if (!body)
      return;
    const children = body.children;
    for (let i = 0; i < children.length; i++) {
      const panel = children.item(i);
      if (!panel)
        continue;
      const panelIndex = panel.dataset["index"];
      if (panelIndex === index) {
        body.scrollTop = panel.offsetTop;
        setActiveIndex(index);
        activeIndex !== index && ((_a = props.onIndexChange) === null || _a === void 0 ? void 0 : _a.call(props, index));
        return;
      }
    }
  }
  const {
    run: checkActiveIndex
  } = useThrottleFn_default(() => {
    var _a;
    const body = bodyRef.current;
    if (!body)
      return;
    const scrollTop = body.scrollTop;
    const elements = body.getElementsByClassName(`${classPrefix44}-anchor`);
    for (let i = 0; i < elements.length; i++) {
      const panel = elements.item(i);
      if (!panel)
        continue;
      const panelIndex = panel.dataset["index"];
      if (!panelIndex)
        continue;
      if (panel.offsetTop + panel.clientHeight - titleHeight > scrollTop) {
        setActiveIndex(panelIndex);
        activeIndex !== panelIndex && ((_a = props.onIndexChange) === null || _a === void 0 ? void 0 : _a.call(props, panelIndex));
        return;
      }
    }
  }, {
    wait: 50,
    trailing: true,
    leading: true
  });
  return withNativeProps(props, import_react95.default.createElement("div", {
    className: (0, import_classnames32.default)(`${classPrefix44}`, {
      [`${classPrefix44}-sticky`]: props.sticky
    })
  }, import_react95.default.createElement(Sidebar, {
    indexItems,
    activeIndex,
    onActive: (index) => {
      scrollTo(index);
    }
  }), import_react95.default.createElement("div", {
    className: `${classPrefix44}-body`,
    ref: bodyRef,
    onScroll: checkActiveIndex
  }, panels)));
});

// node_modules/antd-mobile/es/components/index-bar/index.js
var index_bar_default = attachPropertiesToComponent(IndexBar, {
  Panel
});

// node_modules/antd-mobile/es/components/infinite-scroll/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/infinite-scroll/infinite-scroll.css";

// node_modules/antd-mobile/es/components/infinite-scroll/infinite-scroll.js
var import_react96 = __toESM(require_react());
function isWindow2(element) {
  return element === window;
}
var classPrefix45 = `adm-infinite-scroll`;
var defaultProps33 = {
  threshold: 250,
  children: (hasMore, failed, retry) => import_react96.default.createElement(InfiniteScrollContent, {
    hasMore,
    failed,
    retry
  })
};
var InfiniteScroll = (p) => {
  const props = mergeProps(defaultProps33, p);
  const [failed, setFailed] = (0, import_react96.useState)(false);
  const doLoadMore = useLockFn_default((isRetry) => __awaiter(void 0, void 0, void 0, function* () {
    try {
      yield props.loadMore(isRetry);
    } catch (e) {
      setFailed(true);
      throw e;
    }
  }));
  const elementRef = (0, import_react96.useRef)(null);
  const [flag, setFlag] = (0, import_react96.useState)({});
  const nextFlagRef = (0, import_react96.useRef)(flag);
  const [scrollParent, setScrollParent] = (0, import_react96.useState)();
  const {
    run: check
  } = useThrottleFn_default(() => __awaiter(void 0, void 0, void 0, function* () {
    if (nextFlagRef.current !== flag)
      return;
    if (!props.hasMore)
      return;
    const element = elementRef.current;
    if (!element)
      return;
    if (!element.offsetParent)
      return;
    const parent = getScrollParent(element);
    setScrollParent(parent);
    if (!parent)
      return;
    const rect = element.getBoundingClientRect();
    const elementTop = rect.top;
    const current = isWindow2(parent) ? window.innerHeight : parent.getBoundingClientRect().bottom;
    if (current >= elementTop - props.threshold) {
      const nextFlag = {};
      nextFlagRef.current = nextFlag;
      yield doLoadMore(false);
      setFlag(nextFlag);
    }
  }), {
    wait: 100,
    leading: true,
    trailing: true
  });
  (0, import_react96.useEffect)(() => {
    check();
  });
  (0, import_react96.useEffect)(() => {
    const element = elementRef.current;
    if (!element)
      return;
    if (!scrollParent)
      return;
    function onScroll() {
      check();
    }
    scrollParent.addEventListener("scroll", onScroll);
    return () => {
      scrollParent.removeEventListener("scroll", onScroll);
    };
  }, [scrollParent]);
  function retry() {
    return __awaiter(this, void 0, void 0, function* () {
      setFailed(false);
      yield doLoadMore(true);
      setFlag(nextFlagRef.current);
    });
  }
  return withNativeProps(props, import_react96.default.createElement("div", {
    className: classPrefix45,
    ref: elementRef
  }, typeof props.children === "function" ? props.children(props.hasMore, failed, retry) : props.children));
};
var InfiniteScrollContent = (props) => {
  const {
    locale
  } = useConfig();
  if (!props.hasMore) {
    return import_react96.default.createElement("span", null, locale.InfiniteScroll.noMore);
  }
  if (props.failed) {
    return import_react96.default.createElement("span", null, import_react96.default.createElement("span", {
      className: `${classPrefix45}-failed-text`
    }, locale.InfiniteScroll.failedToLoad), import_react96.default.createElement("a", {
      onClick: () => {
        props.retry();
      }
    }, locale.InfiniteScroll.retry));
  }
  return import_react96.default.createElement(import_react96.default.Fragment, null, import_react96.default.createElement("span", null, locale.common.loading), import_react96.default.createElement(dot_loading_default, null));
};

// node_modules/antd-mobile/es/components/infinite-scroll/index.js
var infinite_scroll_default = InfiniteScroll;

// node_modules/antd-mobile/es/components/input/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/input/input.css";

// node_modules/antd-mobile/es/components/input/input.js
var import_react97 = __toESM(require_react());
var import_classnames33 = __toESM(require_classnames());
var classPrefix46 = `adm-input`;
var defaultProps34 = {
  defaultValue: "",
  onlyShowClearWhenFocus: true
};
var Input = (0, import_react97.forwardRef)((p, ref) => {
  const props = mergeProps(defaultProps34, p);
  const [value, setValue2] = usePropsValue(props);
  const [hasFocus, setHasFocus] = (0, import_react97.useState)(false);
  const compositionStartRef = (0, import_react97.useRef)(false);
  const nativeInputRef = (0, import_react97.useRef)(null);
  (0, import_react97.useImperativeHandle)(ref, () => ({
    clear: () => {
      setValue2("");
    },
    focus: () => {
      var _a;
      (_a = nativeInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    },
    blur: () => {
      var _a;
      (_a = nativeInputRef.current) === null || _a === void 0 ? void 0 : _a.blur();
    },
    get nativeElement() {
      return nativeInputRef.current;
    }
  }));
  const handleKeydown = (e) => {
    var _a;
    if (props.onEnterPress && (e.code === "Enter" || e.keyCode === 13)) {
      props.onEnterPress(e);
    }
    (_a = props.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(props, e);
  };
  useIsomorphicLayoutEffect_default(() => {
    var _a;
    if (!props.enterKeyHint)
      return;
    (_a = nativeInputRef.current) === null || _a === void 0 ? void 0 : _a.setAttribute("enterkeyhint", props.enterKeyHint);
    return () => {
      var _a2;
      (_a2 = nativeInputRef.current) === null || _a2 === void 0 ? void 0 : _a2.removeAttribute("enterkeyhint");
    };
  }, [props.enterKeyHint]);
  function checkValue() {
    let nextValue = value;
    if (props.type === "number") {
      nextValue = nextValue && bound(parseFloat(nextValue), props.min, props.max).toString();
    }
    if (nextValue !== value) {
      setValue2(nextValue);
    }
  }
  const shouldShowClear = (() => {
    if (!props.clearable || !value || props.readOnly)
      return false;
    if (props.onlyShowClearWhenFocus) {
      return hasFocus;
    } else {
      return true;
    }
  })();
  return withNativeProps(props, import_react97.default.createElement("div", {
    className: (0, import_classnames33.default)(`${classPrefix46}`, props.disabled && `${classPrefix46}-disabled`)
  }, import_react97.default.createElement("input", {
    ref: nativeInputRef,
    className: `${classPrefix46}-element`,
    value,
    onChange: (e) => {
      setValue2(e.target.value);
    },
    onFocus: (e) => {
      var _a;
      setHasFocus(true);
      (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, e);
    },
    onBlur: (e) => {
      var _a;
      setHasFocus(false);
      checkValue();
      (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, e);
    },
    id: props.id,
    placeholder: props.placeholder,
    disabled: props.disabled,
    readOnly: props.readOnly,
    maxLength: props.maxLength,
    minLength: props.minLength,
    max: props.max,
    min: props.min,
    autoComplete: props.autoComplete,
    autoFocus: props.autoFocus,
    pattern: props.pattern,
    inputMode: props.inputMode,
    type: props.type,
    name: props.name,
    autoCapitalize: props.autoCapitalize,
    autoCorrect: props.autoCorrect,
    onKeyDown: handleKeydown,
    onKeyUp: props.onKeyUp,
    onCompositionStart: (e) => {
      var _a;
      compositionStartRef.current = true;
      (_a = props.onCompositionStart) === null || _a === void 0 ? void 0 : _a.call(props, e);
    },
    onCompositionEnd: (e) => {
      var _a;
      compositionStartRef.current = false;
      (_a = props.onCompositionEnd) === null || _a === void 0 ? void 0 : _a.call(props, e);
    },
    onClick: props.onClick
  }), shouldShowClear && import_react97.default.createElement("div", {
    className: `${classPrefix46}-clear`,
    onMouseDown: (e) => {
      e.preventDefault();
    },
    onClick: () => {
      var _a, _b;
      setValue2("");
      (_a = props.onClear) === null || _a === void 0 ? void 0 : _a.call(props);
      if (isIOS() && compositionStartRef.current) {
        compositionStartRef.current = false;
        (_b = nativeInputRef.current) === null || _b === void 0 ? void 0 : _b.blur();
      }
    }
  }, import_react97.default.createElement(CloseCircleFill_default, null))));
});

// node_modules/antd-mobile/es/components/input/index.js
var input_default = Input;

// node_modules/antd-mobile/es/components/jumbo-tabs/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/jumbo-tabs/jumbo-tabs.css";

// node_modules/antd-mobile/es/components/jumbo-tabs/jumbo-tabs.js
var import_react98 = __toESM(require_react());
var import_classnames34 = __toESM(require_classnames());
var classPrefix47 = `adm-jumbo-tabs`;
var JumboTab = () => {
  return null;
};
var JumboTabs = (props) => {
  var _a;
  const tabListContainerRef = (0, import_react98.useRef)(null);
  const rootRef = (0, import_react98.useRef)(null);
  const keyToIndexRecord = {};
  let firstActiveKey = null;
  const panes = [];
  traverseReactNode(props.children, (child, index) => {
    if (!import_react98.default.isValidElement(child))
      return;
    const key = child.key;
    if (typeof key !== "string")
      return;
    if (index === 0) {
      firstActiveKey = key;
    }
    const length = panes.push(child);
    keyToIndexRecord[key] = length - 1;
  });
  const [activeKey, setActiveKey] = usePropsValue({
    value: props.activeKey,
    defaultValue: (_a = props.defaultActiveKey) !== null && _a !== void 0 ? _a : firstActiveKey,
    onChange: (v) => {
      var _a2;
      if (v === null)
        return;
      (_a2 = props.onChange) === null || _a2 === void 0 ? void 0 : _a2.call(props, v);
    }
  });
  const {
    scrollLeft,
    animate
  } = useTabListScroll(tabListContainerRef, keyToIndexRecord[activeKey]);
  useResizeEffect(() => {
    animate(true);
  }, rootRef);
  return withNativeProps(props, import_react98.default.createElement("div", {
    className: classPrefix47,
    ref: rootRef
  }, import_react98.default.createElement("div", {
    className: `${classPrefix47}-header`
  }, import_react98.default.createElement(scroll_mask_default, {
    scrollTrackRef: tabListContainerRef
  }), import_react98.default.createElement(animated.div, {
    className: `${classPrefix47}-tab-list`,
    ref: tabListContainerRef,
    scrollLeft
  }, panes.map((pane) => withNativeProps(pane.props, import_react98.default.createElement("div", {
    key: pane.key,
    className: `${classPrefix47}-tab-wrapper`
  }, import_react98.default.createElement("div", {
    onClick: () => {
      const {
        key
      } = pane;
      if (pane.props.disabled)
        return;
      if (key === void 0 || key === null) {
        return;
      }
      setActiveKey(key.toString());
    },
    className: (0, import_classnames34.default)(`${classPrefix47}-tab`, {
      [`${classPrefix47}-tab-active`]: pane.key === activeKey,
      [`${classPrefix47}-tab-disabled`]: pane.props.disabled
    })
  }, import_react98.default.createElement("div", {
    className: `${classPrefix47}-tab-title`
  }, pane.props.title), import_react98.default.createElement("div", {
    className: `${classPrefix47}-tab-description`
  }, pane.props.description))))))), panes.map((pane) => {
    if (pane.props.children === void 0) {
      return null;
    }
    const active = pane.key === activeKey;
    return import_react98.default.createElement(ShouldRender, {
      key: pane.key,
      active,
      forceRender: pane.props.forceRender,
      destroyOnClose: pane.props.destroyOnClose
    }, import_react98.default.createElement("div", {
      className: `${classPrefix47}-content`,
      style: {
        display: active ? "block" : "none"
      }
    }, pane.props.children));
  })));
};

// node_modules/antd-mobile/es/components/jumbo-tabs/index.js
var jumbo_tabs_default = attachPropertiesToComponent(JumboTabs, {
  Tab: JumboTab
});

// node_modules/antd-mobile/es/components/loading/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/dot-loading/dot-loading.css";
var loading_default = DotLoading;

// node_modules/antd-mobile/es/components/modal/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/modal/modal.css";

// node_modules/antd-mobile/es/components/modal/show.js
var import_react101 = __toESM(require_react());

// node_modules/antd-mobile/es/components/modal/modal.js
var import_react100 = __toESM(require_react());
var import_classnames36 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/modal/modal-action-button.js
var import_react99 = __toESM(require_react());
var import_classnames35 = __toESM(require_classnames());
var ModalActionButton = (props) => {
  const {
    action
  } = props;
  return withNativeProps(props.action, import_react99.default.createElement(button_default, {
    key: action.key,
    onClick: props.onAction,
    className: (0, import_classnames35.default)("adm-modal-button", {
      "adm-modal-button-primary": props.action.primary
    }),
    fill: props.action.primary ? "solid" : "none",
    size: props.action.primary ? "large" : "middle",
    block: true,
    color: action.danger ? "danger" : "primary",
    loading: "auto",
    disabled: action.disabled
  }, action.text));
};

// node_modules/antd-mobile/es/components/modal/modal.js
var defaultProps35 = {
  actions: [],
  closeOnAction: false,
  closeOnMaskClick: false
};
var Modal = (p) => {
  const props = mergeProps(defaultProps35, p);
  const element = import_react100.default.createElement(import_react100.default.Fragment, null, props.showCloseButton && import_react100.default.createElement("a", {
    className: (0, import_classnames36.default)(cls2("close"), "adm-plain-anchor"),
    onClick: props.onClose
  }, import_react100.default.createElement(CloseOutline_default, null)), !!props.image && import_react100.default.createElement("div", {
    className: cls2("image-container")
  }, import_react100.default.createElement(image_default, {
    src: props.image,
    alt: "modal header image",
    width: "100%"
  })), !!props.header && import_react100.default.createElement("div", {
    className: cls2("header")
  }, import_react100.default.createElement(auto_center_default, null, props.header)), !!props.title && import_react100.default.createElement("div", {
    className: cls2("title")
  }, props.title), import_react100.default.createElement("div", {
    className: cls2("content")
  }, typeof props.content === "string" ? import_react100.default.createElement(auto_center_default, null, props.content) : props.content), import_react100.default.createElement(space_default, {
    direction: "vertical",
    block: true,
    className: (0, import_classnames36.default)(cls2("footer"), props.actions.length === 0 && cls2("footer-empty"))
  }, props.actions.map((action, index) => {
    return import_react100.default.createElement(ModalActionButton, {
      key: action.key,
      action,
      onAction: () => __awaiter(void 0, void 0, void 0, function* () {
        var _a, _b, _c;
        yield Promise.all([(_a = action.onClick) === null || _a === void 0 ? void 0 : _a.call(action), (_b = props.onAction) === null || _b === void 0 ? void 0 : _b.call(props, action, index)]);
        if (props.closeOnAction) {
          (_c = props.onClose) === null || _c === void 0 ? void 0 : _c.call(props);
        }
      })
    });
  })));
  return import_react100.default.createElement(center_popup_default, {
    className: (0, import_classnames36.default)(cls2(), props.className),
    style: props.style,
    afterClose: props.afterClose,
    afterShow: props.afterShow,
    onMaskClick: props.closeOnMaskClick ? () => {
      var _a;
      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
    } : void 0,
    visible: props.visible,
    getContainer: props.getContainer,
    bodyStyle: props.bodyStyle,
    bodyClassName: (0, import_classnames36.default)(cls2("body"), props.image && cls2("with-image"), props.bodyClassName),
    maskStyle: props.maskStyle,
    maskClassName: props.maskClassName,
    stopPropagation: props.stopPropagation,
    disableBodyScroll: props.disableBodyScroll,
    destroyOnClose: props.destroyOnClose,
    forceRender: props.forceRender
  }, element);
};
function cls2(name = "") {
  return "adm-modal" + (name && "-") + name;
}

// node_modules/antd-mobile/es/components/modal/show.js
var closeFnSet2 = /* @__PURE__ */ new Set();
function show2(props) {
  const handler = renderImperatively(import_react101.default.createElement(Modal, Object.assign({}, props, {
    afterClose: () => {
      var _a;
      closeFnSet2.delete(handler.close);
      (_a = props.afterClose) === null || _a === void 0 ? void 0 : _a.call(props);
    }
  })));
  closeFnSet2.add(handler.close);
  return handler;
}

// node_modules/antd-mobile/es/components/modal/alert.js
function alert2(p) {
  const defaultProps62 = {
    confirmText: getDefaultConfig().locale.Modal.ok
  };
  const props = mergeProps(defaultProps62, p);
  return new Promise((resolve) => {
    show2(Object.assign(Object.assign({}, props), {
      closeOnAction: true,
      actions: [{
        key: "confirm",
        text: props.confirmText,
        primary: true
      }],
      onAction: props.onConfirm,
      onClose: () => {
        var _a;
        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
        resolve();
      }
    }));
  });
}

// node_modules/antd-mobile/es/components/modal/confirm.js
var defaultProps36 = {
  confirmText: "\u786E\u8BA4",
  cancelText: "\u53D6\u6D88"
};
function confirm2(p) {
  const {
    locale
  } = getDefaultConfig();
  const props = mergeProps(defaultProps36, {
    confirmText: locale.common.confirm,
    cancelText: locale.common.cancel
  }, p);
  return new Promise((resolve) => {
    show2(Object.assign(Object.assign({}, props), {
      closeOnAction: true,
      onClose: () => {
        var _a;
        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
        resolve(false);
      },
      actions: [{
        key: "confirm",
        text: props.confirmText,
        primary: true,
        onClick: () => __awaiter(this, void 0, void 0, function* () {
          var _a;
          yield (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props);
          resolve(true);
        })
      }, {
        key: "cancel",
        text: props.cancelText,
        onClick: () => __awaiter(this, void 0, void 0, function* () {
          var _b;
          yield (_b = props.onCancel) === null || _b === void 0 ? void 0 : _b.call(props);
          resolve(false);
        })
      }]
    }));
  });
}

// node_modules/antd-mobile/es/components/modal/clear.js
function clear2() {
  closeFnSet2.forEach((close) => {
    close();
  });
}

// node_modules/antd-mobile/es/components/modal/index.js
var modal_default = attachPropertiesToComponent(Modal, {
  show: show2,
  alert: alert2,
  confirm: confirm2,
  clear: clear2
});

// node_modules/antd-mobile/es/components/nav-bar/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/nav-bar/nav-bar.css";

// node_modules/antd-mobile/es/components/nav-bar/nav-bar.js
var import_react102 = __toESM(require_react());
var import_classnames37 = __toESM(require_classnames());
var classPrefix48 = `adm-nav-bar`;
var defaultProps37 = {
  back: "",
  backArrow: true
};
var NavBar = (p) => {
  const props = mergeProps(defaultProps37, p);
  const {
    back,
    backArrow
  } = props;
  return withNativeProps(props, import_react102.default.createElement("div", {
    className: (0, import_classnames37.default)(classPrefix48)
  }, import_react102.default.createElement("div", {
    className: `${classPrefix48}-left`,
    role: "button"
  }, back !== null && import_react102.default.createElement("div", {
    className: `${classPrefix48}-back`,
    onClick: props.onBack
  }, backArrow && import_react102.default.createElement("span", {
    className: `${classPrefix48}-back-arrow`
  }, backArrow === true ? import_react102.default.createElement(LeftOutline_default, null) : backArrow), import_react102.default.createElement("span", {
    "aria-hidden": "true"
  }, back)), props.left), import_react102.default.createElement("div", {
    className: `${classPrefix48}-title`
  }, props.children), import_react102.default.createElement("div", {
    className: `${classPrefix48}-right`
  }, props.right)));
};

// node_modules/antd-mobile/es/components/nav-bar/index.js
var nav_bar_default = NavBar;

// node_modules/antd-mobile/es/components/notice-bar/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/notice-bar/notice-bar.css";

// node_modules/antd-mobile/es/components/notice-bar/notice-bar.js
var import_react103 = __toESM(require_react());
var import_classnames38 = __toESM(require_classnames());
var classPrefix49 = `adm-notice-bar`;
var defaultProps38 = {
  color: "default",
  delay: 2e3,
  speed: 50,
  icon: import_react103.default.createElement(SoundOutline_default, null)
};
var NoticeBar = (0, import_react103.memo)((p) => {
  const props = mergeProps(defaultProps38, p);
  const containerRef = (0, import_react103.useRef)(null);
  const textRef = (0, import_react103.useRef)(null);
  const [visible, setVisible] = (0, import_react103.useState)(true);
  const speed = props.speed;
  const delayLockRef = (0, import_react103.useRef)(true);
  const animatingRef = (0, import_react103.useRef)(false);
  function start() {
    if (delayLockRef.current)
      return;
    const container = containerRef.current;
    const text = textRef.current;
    if (!container || !text)
      return;
    if (container.offsetWidth >= text.offsetWidth) {
      animatingRef.current = false;
      text.style.removeProperty("transition-duration");
      text.style.removeProperty("transform");
      return;
    }
    if (animatingRef.current)
      return;
    const initial = !text.style.transform;
    text.style.transitionDuration = "0s";
    if (initial) {
      text.style.transform = "translateX(0)";
    } else {
      text.style.transform = `translateX(${container.offsetWidth}px)`;
    }
    const distance = initial ? text.offsetWidth : container.offsetWidth + text.offsetWidth;
    animatingRef.current = true;
    text.style.transitionDuration = `${Math.round(distance / speed)}s`;
    text.style.transform = `translateX(-${text.offsetWidth}px)`;
  }
  useTimeout_default(() => {
    delayLockRef.current = false;
    start();
  }, props.delay);
  useResizeEffect(() => {
    start();
  }, containerRef);
  useMutationEffect(() => {
    start();
  }, textRef, {
    subtree: true,
    childList: true,
    characterData: true
  });
  if (!visible)
    return null;
  return withNativeProps(props, import_react103.default.createElement("div", {
    className: (0, import_classnames38.default)(classPrefix49, `${classPrefix49}-${props.color}`)
  }, props.icon && import_react103.default.createElement("span", {
    className: `${classPrefix49}-left`
  }, props.icon), import_react103.default.createElement("span", {
    ref: containerRef,
    className: `${classPrefix49}-content`
  }, import_react103.default.createElement("span", {
    onTransitionEnd: () => {
      animatingRef.current = false;
      start();
    },
    ref: textRef,
    className: `${classPrefix49}-content-inner`
  }, props.content)), (props.closeable || props.extra) && import_react103.default.createElement("span", {
    className: `${classPrefix49}-right`
  }, props.extra, props.closeable && import_react103.default.createElement(CloseOutline_default, {
    className: `${classPrefix49}-close-icon`,
    onClick: () => {
      var _a;
      setVisible(false);
      (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
    }
  }))));
});

// node_modules/antd-mobile/es/components/notice-bar/index.js
var notice_bar_default = NoticeBar;

// node_modules/antd-mobile/es/components/number-keyboard/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/number-keyboard/number-keyboard.css";

// node_modules/antd-mobile/es/components/number-keyboard/number-keyboard.js
var import_react104 = __toESM(require_react());
var import_classnames39 = __toESM(require_classnames());

// node_modules/antd-mobile/es/utils/shuffle.js
function shuffle(array4) {
  const result = [...array4];
  for (let i = result.length; i > 0; i--) {
    const j = Math.floor(Math.random() * i);
    [result[i - 1], result[j]] = [result[j], result[i - 1]];
  }
  return result;
}

// node_modules/antd-mobile/es/components/number-keyboard/number-keyboard.js
var classPrefix50 = "adm-number-keyboard";
var defaultProps39 = {
  defaultVisible: false,
  randomOrder: false,
  showCloseButton: true,
  confirmText: null,
  closeOnConfirm: true,
  safeArea: true
};
var NumberKeyboard = (p) => {
  const props = mergeProps(defaultProps39, p);
  const {
    visible,
    title,
    getContainer,
    confirmText,
    customKey,
    randomOrder,
    showCloseButton,
    onInput
  } = props;
  const keyboardRef = (0, import_react104.useRef)(null);
  const keys = (0, import_react104.useMemo)(() => {
    const defaultKeys = ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
    const keyList = randomOrder ? shuffle(defaultKeys) : defaultKeys;
    keyList.push("0");
    if (confirmText) {
      keyList.push(customKey || "");
    } else {
      keyList.splice(9, 0, customKey || "");
      keyList.push("BACKSPACE");
    }
    return keyList;
  }, [customKey, confirmText, randomOrder, randomOrder && visible]);
  const timeoutRef = (0, import_react104.useRef)(-1);
  const intervalRef = (0, import_react104.useRef)(-1);
  const onDelete = useMemoizedFn_default(() => {
    var _a;
    (_a = props.onDelete) === null || _a === void 0 ? void 0 : _a.call(props);
  });
  const onBackspacePressStart = () => {
    timeoutRef.current = window.setTimeout(() => {
      onDelete();
      intervalRef.current = window.setInterval(onDelete, 150);
    }, 700);
  };
  const onBackspacePressEnd = () => {
    clearTimeout(timeoutRef.current);
    clearInterval(intervalRef.current);
  };
  const onKeyPress = (e, key) => {
    var _a, _b;
    e.preventDefault();
    switch (key) {
      case "BACKSPACE":
        onDelete === null || onDelete === void 0 ? void 0 : onDelete();
        break;
      case "OK":
        (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(props);
        if (props.closeOnConfirm) {
          (_b = props.onClose) === null || _b === void 0 ? void 0 : _b.call(props);
        }
        break;
      default:
        if (key !== "")
          onInput === null || onInput === void 0 ? void 0 : onInput(key);
        break;
    }
  };
  const renderHeader = () => {
    if (!showCloseButton && !title)
      return null;
    return import_react104.default.createElement("div", {
      className: (0, import_classnames39.default)(`${classPrefix50}-header`, {
        "with-title": !!title
      })
    }, title && import_react104.default.createElement("div", {
      className: `${classPrefix50}-title`
    }, title), showCloseButton && import_react104.default.createElement("span", {
      className: `${classPrefix50}-header-close-button`,
      onClick: () => {
        var _a;
        (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
      },
      role: "button",
      title: "CLOSE"
    }, import_react104.default.createElement(DownOutline_default, null)));
  };
  const renderKey = (key, index) => {
    const isNumberKey = /^\d$/.test(key);
    const className = (0, import_classnames39.default)(`${classPrefix50}-key`, {
      "number-key": isNumberKey,
      "sign-key": !isNumberKey && key,
      "mid-key": index === 9 && !!confirmText
    });
    return import_react104.default.createElement("div", {
      key,
      className,
      onTouchStart: () => {
        if (key === "BACKSPACE") {
          onBackspacePressStart();
        }
      },
      onTouchEnd: (e) => {
        onKeyPress(e, key);
        if (key === "BACKSPACE") {
          onBackspacePressEnd();
        }
      },
      title: key,
      role: "button"
    }, key === "BACKSPACE" ? import_react104.default.createElement(TextDeletionOutline_default, null) : key);
  };
  return import_react104.default.createElement(popup_default, {
    visible,
    getContainer,
    mask: false,
    afterClose: props.afterClose,
    afterShow: props.afterShow,
    className: `${classPrefix50}-popup`,
    stopPropagation: props.stopPropagation
  }, withNativeProps(props, import_react104.default.createElement("div", {
    ref: keyboardRef,
    className: classPrefix50,
    onMouseDown: (e) => {
      e.preventDefault();
    }
  }, renderHeader(), import_react104.default.createElement("div", {
    className: `${classPrefix50}-wrapper`
  }, import_react104.default.createElement("div", {
    className: (0, import_classnames39.default)(`${classPrefix50}-main`, {
      "confirmed-style": !!confirmText
    })
  }, keys.map(renderKey)), !!confirmText && import_react104.default.createElement("div", {
    className: `${classPrefix50}-confirm`
  }, import_react104.default.createElement("div", {
    className: `${classPrefix50}-key extra-key bs-key`,
    onTouchStart: () => {
      onBackspacePressStart();
    },
    onTouchEnd: (e) => {
      onKeyPress(e, "BACKSPACE");
      onBackspacePressEnd();
    },
    title: "BACKSPACE",
    role: "button"
  }, import_react104.default.createElement(TextDeletionOutline_default, null)), import_react104.default.createElement("div", {
    className: `${classPrefix50}-key extra-key ok-key`,
    onTouchEnd: (e) => onKeyPress(e, "OK"),
    role: "button"
  }, confirmText))), props.safeArea && import_react104.default.createElement("div", {
    className: `${classPrefix50}-footer`
  }, import_react104.default.createElement(safe_area_default, {
    position: "bottom"
  })))));
};

// node_modules/antd-mobile/es/components/number-keyboard/index.js
var number_keyboard_default = NumberKeyboard;

// node_modules/antd-mobile/es/components/page-indicator/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/page-indicator/page-indicator.css";

// node_modules/antd-mobile/es/components/page-indicator/page-indicator.js
var import_react105 = __toESM(require_react());
var import_classnames40 = __toESM(require_classnames());
var classPrefix51 = `adm-page-indicator`;
var defaultProps40 = {
  color: "primary",
  direction: "horizontal"
};
var PageIndicator = (0, import_react105.memo)((p) => {
  const props = mergeProps(defaultProps40, p);
  const dots = [];
  for (let i = 0; i < props.total; i++) {
    dots.push(import_react105.default.createElement("div", {
      key: i,
      className: (0, import_classnames40.default)(`${classPrefix51}-dot`, {
        [`${classPrefix51}-dot-active`]: props.current === i
      })
    }));
  }
  return withNativeProps(props, import_react105.default.createElement("div", {
    className: (0, import_classnames40.default)(classPrefix51, `${classPrefix51}-${props.direction}`, `${classPrefix51}-color-${props.color}`)
  }, dots));
});

// node_modules/antd-mobile/es/components/page-indicator/index.js
var page_indicator_default = PageIndicator;

// node_modules/antd-mobile/es/components/passcode-input/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/passcode-input/passcode-input.css";

// node_modules/antd-mobile/es/components/passcode-input/passcode-input.js
var import_react106 = __toESM(require_react());
var import_classnames41 = __toESM(require_classnames());
var classPrefix52 = "adm-passcode-input";
var defaultProps41 = {
  defaultValue: "",
  length: 6,
  plain: false,
  error: false,
  seperated: false,
  caret: true
};
var PasscodeInput = (0, import_react106.forwardRef)((p, ref) => {
  const props = mergeProps(defaultProps41, p);
  const cellLength = props.length > 0 && props.length < Infinity ? Math.floor(props.length) : defaultProps41.length;
  const [focused, setFocused] = (0, import_react106.useState)(false);
  const [value, setValue2] = usePropsValue(props);
  const rootRef = (0, import_react106.useRef)(null);
  const nativeInputRef = (0, import_react106.useRef)(null);
  (0, import_react106.useEffect)(() => {
    var _a;
    if (value.length >= cellLength) {
      (_a = props.onFill) === null || _a === void 0 ? void 0 : _a.call(props, value);
    }
  }, [value, cellLength]);
  const onFocus = () => {
    var _a, _b;
    if (!props.keyboard) {
      (_a = nativeInputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    }
    setFocused(true);
    (_b = props.onFocus) === null || _b === void 0 ? void 0 : _b.call(props);
  };
  (0, import_react106.useEffect)(() => {
    if (!focused)
      return;
    const timeout = window.setTimeout(() => {
      var _a;
      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.scrollIntoView({
        block: "center",
        inline: "center",
        behavior: "smooth"
      });
    }, 100);
    return () => {
      window.clearTimeout(timeout);
    };
  }, [focused]);
  const onBlur = () => {
    var _a;
    setFocused(false);
    (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props);
  };
  (0, import_react106.useImperativeHandle)(ref, () => ({
    focus: () => {
      var _a;
      return (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    },
    blur: () => {
      var _a, _b;
      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.blur();
      (_b = nativeInputRef.current) === null || _b === void 0 ? void 0 : _b.blur();
    }
  }));
  const renderCells = () => {
    const cells = [];
    const chars = value.split("");
    const caretIndex = chars.length;
    const focusedIndex = bound(chars.length, 0, cellLength - 1);
    for (let i = 0; i < cellLength; i++) {
      cells.push(import_react106.default.createElement("div", {
        className: (0, import_classnames41.default)(`${classPrefix52}-cell`, {
          caret: props.caret && caretIndex === i && focused,
          focused: focusedIndex === i && focused,
          dot: !props.plain && chars[i]
        }),
        key: i
      }, chars[i] && props.plain ? chars[i] : ""));
    }
    return cells;
  };
  const cls3 = (0, import_classnames41.default)(classPrefix52, {
    focused,
    error: props.error,
    seperated: props.seperated
  });
  return import_react106.default.createElement(import_react106.default.Fragment, null, withNativeProps(props, import_react106.default.createElement("div", {
    ref: rootRef,
    tabIndex: 0,
    className: cls3,
    onFocus,
    onBlur
  }, import_react106.default.createElement("div", {
    className: `${classPrefix52}-cell-container`
  }, renderCells()), import_react106.default.createElement("input", {
    ref: nativeInputRef,
    className: `${classPrefix52}-native-input`,
    value,
    type: "text",
    pattern: "[0-9]*",
    inputMode: "numeric",
    onChange: (e) => {
      setValue2(e.target.value.slice(0, props.length));
    }
  }))), props.keyboard && import_react106.default.cloneElement(props.keyboard, {
    visible: focused,
    onInput: (v) => {
      if (value.length < cellLength) {
        setValue2((value + v).slice(0, props.length));
      }
    },
    onDelete: () => {
      setValue2(value.slice(0, -1));
    },
    onClose: () => {
      var _a;
      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.blur();
    }
  }));
});

// node_modules/antd-mobile/es/components/passcode-input/index.js
var passcode_input_default = PasscodeInput;

// node_modules/antd-mobile/es/components/progress-bar/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/progress-bar/progress-bar.css";

// node_modules/antd-mobile/es/components/progress-bar/progress-bar.js
var import_react107 = __toESM(require_react());
var classPrefix53 = `adm-progress-bar`;
var ProgressBar = (p) => {
  const props = mergeProps({
    percent: 0
  }, p);
  const fillStyle = {
    width: `${props.percent}%`
  };
  return withNativeProps(props, import_react107.default.createElement("div", {
    className: classPrefix53
  }, import_react107.default.createElement("div", {
    className: `${classPrefix53}-trail`
  }, import_react107.default.createElement("div", {
    className: `${classPrefix53}-fill`,
    style: fillStyle
  }))));
};

// node_modules/antd-mobile/es/components/progress-bar/index.js
var progress_bar_default = ProgressBar;

// node_modules/antd-mobile/es/components/progress-circle/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/progress-circle/progress-circle.css";

// node_modules/antd-mobile/es/components/progress-circle/progress-circle.js
var import_react108 = __toESM(require_react());
var classPrefix54 = `adm-progress-circle`;
var ProgressCircle = (p) => {
  const props = mergeProps({
    percent: 0
  }, p);
  const style = {
    "--percent": props.percent.toString()
  };
  return withNativeProps(props, import_react108.default.createElement("div", {
    className: `${classPrefix54}`,
    style
  }, import_react108.default.createElement("div", {
    className: `${classPrefix54}-content`
  }, import_react108.default.createElement("svg", {
    className: `${classPrefix54}-svg`
  }, import_react108.default.createElement("circle", {
    className: `${classPrefix54}-track`,
    fill: "transparent"
  }), import_react108.default.createElement("circle", {
    className: `${classPrefix54}-fill`,
    fill: "transparent"
  })), import_react108.default.createElement("div", {
    className: `${classPrefix54}-info`
  }, props.children))));
};

// node_modules/antd-mobile/es/components/progress-circle/index.js
var progress_circle_default = ProgressCircle;

// node_modules/antd-mobile/es/components/pull-to-refresh/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/pull-to-refresh/pull-to-refresh.css";

// node_modules/antd-mobile/es/components/pull-to-refresh/pull-to-refresh.js
var import_react110 = __toESM(require_react());

// node_modules/antd-mobile/es/utils/sleep.js
var sleep = (time) => new Promise((resolve) => setTimeout(resolve, time));

// node_modules/antd-mobile/es/components/pull-to-refresh/pull-to-refresh.js
var classPrefix55 = `adm-pull-to-refresh`;
var defaultProps42 = {
  pullingText: "\u4E0B\u62C9\u5237\u65B0",
  canReleaseText: "\u91CA\u653E\u7ACB\u5373\u5237\u65B0",
  refreshingText: "\u52A0\u8F7D\u4E2D...",
  completeText: "\u5237\u65B0\u6210\u529F",
  completeDelay: 500,
  disabled: false,
  onRefresh: () => {
  }
};
var PullToRefresh = (p) => {
  var _a, _b;
  const {
    locale
  } = useConfig();
  const props = mergeProps(defaultProps42, {
    refreshingText: `${locale.common.loading}...`,
    pullingText: locale.PullToRefresh.pulling,
    canReleaseText: locale.PullToRefresh.canRelease,
    completeText: locale.PullToRefresh.complete
  }, p);
  const headHeight = (_a = props.headHeight) !== null && _a !== void 0 ? _a : convertPx(40);
  const threshold = (_b = props.threshold) !== null && _b !== void 0 ? _b : convertPx(60);
  const [status, setStatus] = (0, import_react110.useState)("pulling");
  const [springStyles, api] = useSpring(() => ({
    from: {
      height: 0
    },
    config: {
      tension: 300,
      friction: 30,
      clamp: true
    }
  }));
  const elementRef = (0, import_react110.useRef)(null);
  const pullingRef = (0, import_react110.useRef)(false);
  (0, import_react110.useEffect)(() => {
    var _a2;
    (_a2 = elementRef.current) === null || _a2 === void 0 ? void 0 : _a2.addEventListener("touchmove", () => {
    });
  }, []);
  function doRefresh() {
    return __awaiter(this, void 0, void 0, function* () {
      api.start({
        height: headHeight
      });
      setStatus("refreshing");
      try {
        yield props.onRefresh();
        setStatus("complete");
      } catch (e) {
        api.start({
          to: (next) => __awaiter(this, void 0, void 0, function* () {
            yield next({
              height: 0
            });
            setStatus("pulling");
          })
        });
        throw e;
      }
      if (props.completeDelay > 0) {
        yield sleep(props.completeDelay);
      }
      api.start({
        to: (next) => __awaiter(this, void 0, void 0, function* () {
          yield next({
            height: 0
          });
          setStatus("pulling");
        })
      });
    });
  }
  useDrag((state) => {
    if (status === "refreshing" || status === "complete")
      return;
    const {
      event
    } = state;
    if (state.last) {
      pullingRef.current = false;
      if (status === "canRelease") {
        doRefresh();
      } else {
        api.start({
          height: 0
        });
      }
      return;
    }
    const [, y] = state.movement;
    if (state.first && y > 0) {
      let getScrollTop = function(element) {
        return "scrollTop" in element ? element.scrollTop : element.scrollY;
      };
      const target = state.event.target;
      if (!target || !(target instanceof Element))
        return;
      let scrollParent = getScrollParent(target);
      while (true) {
        if (!scrollParent)
          return;
        const scrollTop = getScrollTop(scrollParent);
        if (scrollTop > 0) {
          return;
        }
        if (scrollParent instanceof Window) {
          break;
        }
        scrollParent = getScrollParent(scrollParent.parentNode);
      }
      pullingRef.current = true;
    }
    if (!pullingRef.current)
      return;
    if (event.cancelable) {
      event.preventDefault();
    }
    event.stopPropagation();
    const height = Math.max(rubberbandIfOutOfBounds2(y, 0, 0, headHeight * 5, 0.5), 0);
    api.start({
      height
    });
    setStatus(height > threshold ? "canRelease" : "pulling");
  }, {
    pointer: {
      touch: true
    },
    axis: "y",
    target: elementRef,
    enabled: !props.disabled,
    eventOptions: supportsPassive ? {
      passive: false
    } : false
  });
  const renderStatusText = () => {
    var _a2;
    if (props.renderText) {
      return (_a2 = props.renderText) === null || _a2 === void 0 ? void 0 : _a2.call(props, status);
    }
    if (status === "pulling")
      return props.pullingText;
    if (status === "canRelease")
      return props.canReleaseText;
    if (status === "refreshing")
      return props.refreshingText;
    if (status === "complete")
      return props.completeText;
  };
  return import_react110.default.createElement(animated.div, {
    ref: elementRef,
    className: classPrefix55
  }, import_react110.default.createElement(animated.div, {
    style: springStyles,
    className: `${classPrefix55}-head`
  }, import_react110.default.createElement("div", {
    className: `${classPrefix55}-head-content`,
    style: {
      height: headHeight
    }
  }, renderStatusText())), import_react110.default.createElement("div", {
    className: `${classPrefix55}-content`
  }, props.children));
};

// node_modules/antd-mobile/es/components/pull-to-refresh/index.js
var pull_to_refresh_default = PullToRefresh;

// node_modules/antd-mobile/es/components/radio/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/radio/radio.css";

// node_modules/antd-mobile/es/components/radio/group.js
var import_react112 = __toESM(require_react());

// node_modules/antd-mobile/es/components/radio/group-context.js
var import_react111 = __toESM(require_react());
var RadioGroupContext = (0, import_react111.createContext)(null);

// node_modules/antd-mobile/es/components/radio/group.js
var defaultProps43 = {
  disabled: false,
  defaultValue: null
};
var Group2 = (p) => {
  const props = mergeProps(defaultProps43, p);
  const [value, setValue2] = usePropsValue({
    value: props.value,
    defaultValue: props.defaultValue,
    onChange: (v) => {
      var _a;
      if (v === null)
        return;
      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, v);
    }
  });
  return import_react112.default.createElement(RadioGroupContext.Provider, {
    value: {
      value: value === null ? [] : [value],
      check: (v) => {
        setValue2(v);
      },
      uncheck: () => {
      },
      disabled: props.disabled
    }
  }, props.children);
};

// node_modules/antd-mobile/es/components/radio/radio.js
var import_react113 = __toESM(require_react());
var import_classnames42 = __toESM(require_classnames());
var classPrefix56 = `adm-radio`;
var defaultProps44 = {
  defaultChecked: false
};
var Radio = (p) => {
  const props = mergeProps(defaultProps44, p);
  const groupContext = (0, import_react113.useContext)(RadioGroupContext);
  let [checked, setChecked] = usePropsValue({
    value: props.checked,
    defaultValue: props.defaultChecked,
    onChange: props.onChange
  });
  let disabled = props.disabled;
  const {
    value
  } = props;
  if (groupContext && value !== void 0) {
    if (isDev) {
      if (p.checked !== void 0) {
        devWarning("Radio", "When used within `Radio.Group`, the `checked` prop of `Radio` will not work.");
      }
      if (p.defaultChecked !== void 0) {
        devWarning("Radio", "When used within `Radio.Group`, the `defaultChecked` prop of `Radio` will not work.");
      }
    }
    checked = groupContext.value.includes(value);
    setChecked = (innerChecked) => {
      var _a;
      if (innerChecked) {
        groupContext.check(value);
      } else {
        groupContext.uncheck(value);
      }
      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, innerChecked);
    };
    disabled = disabled || groupContext.disabled;
  }
  const renderIcon = () => {
    if (props.icon) {
      return import_react113.default.createElement("div", {
        className: `${classPrefix56}-custom-icon`
      }, props.icon(checked));
    }
    return import_react113.default.createElement("div", {
      className: `${classPrefix56}-icon`
    }, checked && import_react113.default.createElement(CheckIcon, null));
  };
  return withNativeProps(props, import_react113.default.createElement("label", {
    className: (0, import_classnames42.default)(classPrefix56, {
      [`${classPrefix56}-checked`]: checked,
      [`${classPrefix56}-disabled`]: disabled,
      [`${classPrefix56}-block`]: props.block
    })
  }, import_react113.default.createElement(NativeInput, {
    type: "radio",
    checked,
    onChange: setChecked,
    disabled,
    id: props.id
  }), renderIcon(), props.children && import_react113.default.createElement("div", {
    className: `${classPrefix56}-content`
  }, props.children)));
};

// node_modules/antd-mobile/es/components/radio/index.js
var radio_default = attachPropertiesToComponent(Radio, {
  Group: Group2
});

// node_modules/antd-mobile/es/components/rate/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/rate/rate.css";

// node_modules/antd-mobile/es/components/rate/rate.js
var import_react115 = __toESM(require_react());
var import_classnames43 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/rate/star.js
var import_react114 = __toESM(require_react());
var Star = () => {
  return import_react114.default.createElement("svg", {
    viewBox: "0 0 42 40",
    height: "1em",
    xmlns: "http://www.w3.org/2000/svg",
    style: {
      verticalAlign: "-0.125em"
    }
  }, import_react114.default.createElement("path", {
    d: "m21 34-10.52 5.53a2 2 0 0 1-2.902-2.108l2.01-11.714-8.511-8.296a2 2 0 0 1 1.108-3.411l11.762-1.71 5.26-10.657a2 2 0 0 1 3.586 0l5.26 10.658L39.815 14a2 2 0 0 1 1.108 3.411l-8.51 8.296 2.009 11.714a2 2 0 0 1-2.902 2.109L21 34Z",
    fill: "currentColor",
    fillRule: "evenodd"
  }));
};

// node_modules/antd-mobile/es/components/rate/rate.js
var classPrefix57 = `adm-rate`;
var defaultProps45 = {
  count: 5,
  allowHalf: false,
  character: import_react115.default.createElement(Star, null),
  defaultValue: 0,
  readOnly: false,
  allowClear: true
};
var Rate = (p) => {
  const props = mergeProps(defaultProps45, p);
  const [value, setValue2] = usePropsValue(props);
  const starList = Array(props.count).fill(null);
  function renderStar(v, half) {
    return import_react115.default.createElement("div", {
      className: (0, import_classnames43.default)(`${classPrefix57}-star`, {
        [`${classPrefix57}-star-active`]: value >= v,
        [`${classPrefix57}-star-half`]: half,
        [`${classPrefix57}-star-readonly`]: props.readOnly
      }),
      onClick: () => {
        if (props.readOnly)
          return;
        if (props.allowClear && value === v) {
          setValue2(0);
        } else {
          setValue2(v);
        }
      }
    }, props.character);
  }
  return withNativeProps(props, import_react115.default.createElement("div", {
    className: classPrefix57
  }, starList.map((_, i) => import_react115.default.createElement("div", {
    key: i,
    className: (0, import_classnames43.default)(`${classPrefix57}-box`)
  }, props.allowHalf && renderStar(i + 0.5, true), renderStar(i + 1, false)))));
};

// node_modules/antd-mobile/es/components/rate/index.js
var rate_default = Rate;

// node_modules/antd-mobile/es/components/result/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/result/result.css";

// node_modules/antd-mobile/es/components/result/result.js
var import_react116 = __toESM(require_react());
var import_classnames44 = __toESM(require_classnames());
var classPrefix58 = `adm-result`;
var iconRecord = {
  success: CheckCircleFill_default,
  error: CloseCircleFill_default,
  info: InformationCircleFill_default,
  waiting: ClockCircleFill_default,
  warning: ExclamationCircleFill_default
};
var Result = (props) => {
  const {
    status,
    title,
    description,
    icon
  } = props;
  if (!status)
    return null;
  const resultIcon = icon || import_react116.default.createElement(iconRecord[status]);
  return withNativeProps(props, import_react116.default.createElement("div", {
    className: (0, import_classnames44.default)(classPrefix58, `${classPrefix58}-${status}`)
  }, import_react116.default.createElement("div", {
    className: `${classPrefix58}-icon`
  }, resultIcon), import_react116.default.createElement("div", {
    className: `${classPrefix58}-title`
  }, title), description ? import_react116.default.createElement("div", {
    className: `${classPrefix58}-description`
  }, description) : null));
};

// node_modules/antd-mobile/es/components/result/index.js
var result_default = Result;

// node_modules/antd-mobile/es/components/search-bar/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/search-bar/search-bar.css";

// node_modules/antd-mobile/es/components/search-bar/search-bar.js
var import_react117 = __toESM(require_react());
var import_classnames45 = __toESM(require_classnames());
var classPrefix59 = `adm-search-bar`;
var defaultProps46 = {
  clearable: true,
  onlyShowClearWhenFocus: false,
  showCancelButton: false,
  defaultValue: "",
  clearOnCancel: true,
  icon: import_react117.default.createElement(SearchOutline_default, null)
};
var SearchBar = (0, import_react117.forwardRef)((p, ref) => {
  const {
    locale
  } = useConfig();
  const props = mergeProps(defaultProps46, {
    cancelText: locale.common.cancel
  }, p);
  const [value, setValue2] = usePropsValue(props);
  const [hasFocus, setHasFocus] = (0, import_react117.useState)(false);
  const inputRef = (0, import_react117.useRef)(null);
  (0, import_react117.useImperativeHandle)(ref, () => ({
    clear: () => {
      var _a;
      return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.clear();
    },
    focus: () => {
      var _a;
      return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    },
    blur: () => {
      var _a;
      return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.blur();
    },
    get nativeElement() {
      var _a, _b;
      return (_b = (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.nativeElement) !== null && _b !== void 0 ? _b : null;
    }
  }));
  const renderCancelButton = () => {
    let isShowCancel;
    if (typeof props.showCancelButton === "function") {
      isShowCancel = props.showCancelButton(hasFocus, value);
    } else {
      isShowCancel = props.showCancelButton && hasFocus;
    }
    return isShowCancel && import_react117.default.createElement("div", {
      className: `${classPrefix59}-suffix`
    }, import_react117.default.createElement(button_default, {
      fill: "none",
      className: `${classPrefix59}-cancel-button`,
      onClick: () => {
        var _a, _b, _c;
        if (props.clearOnCancel) {
          (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.clear();
        }
        (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.blur();
        (_c = props.onCancel) === null || _c === void 0 ? void 0 : _c.call(props);
      },
      onMouseDown: (e) => {
        e.preventDefault();
      }
    }, props.cancelText));
  };
  return withNativeProps(props, import_react117.default.createElement("div", {
    className: (0, import_classnames45.default)(classPrefix59, {
      [`${classPrefix59}-active`]: hasFocus
    })
  }, import_react117.default.createElement("div", {
    className: `${classPrefix59}-input-box`
  }, props.icon && import_react117.default.createElement("div", {
    className: `${classPrefix59}-input-box-icon`
  }, props.icon), import_react117.default.createElement(input_default, {
    ref: inputRef,
    className: (0, import_classnames45.default)(`${classPrefix59}-input`, {
      [`${classPrefix59}-input-without-icon`]: !props.icon
    }),
    value,
    onChange: setValue2,
    maxLength: props.maxLength,
    placeholder: props.placeholder,
    clearable: props.clearable,
    onlyShowClearWhenFocus: props.onlyShowClearWhenFocus,
    onFocus: (e) => {
      var _a;
      setHasFocus(true);
      (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, e);
    },
    onBlur: (e) => {
      var _a;
      setHasFocus(false);
      (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, e);
    },
    onClear: props.onClear,
    type: "search",
    enterKeyHint: "search",
    onEnterPress: () => {
      var _a, _b;
      (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.blur();
      (_b = props.onSearch) === null || _b === void 0 ? void 0 : _b.call(props, value);
    }
  })), renderCancelButton()));
});

// node_modules/antd-mobile/es/components/search-bar/index.js
var search_bar_default = SearchBar;

// node_modules/antd-mobile/es/components/selector/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/selector/selector.css";

// node_modules/antd-mobile/es/components/selector/selector.js
var import_classnames46 = __toESM(require_classnames());
var import_react119 = __toESM(require_react());

// node_modules/antd-mobile/es/components/selector/check-mark.js
var import_react118 = __toESM(require_react());
var CheckMark = (0, import_react118.memo)(() => {
  return import_react118.default.createElement("svg", {
    width: "17px",
    height: "13px",
    viewBox: "0 0 17 13",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg"
  }, import_react118.default.createElement("g", {
    stroke: "none",
    strokeWidth: "1",
    fill: "none",
    fillRule: "evenodd",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }, import_react118.default.createElement("g", {
    transform: "translate(-2832.000000, -1103.000000)",
    stroke: "#FFFFFF",
    strokeWidth: "3"
  }, import_react118.default.createElement("g", {
    transform: "translate(2610.000000, 955.000000)"
  }, import_react118.default.createElement("g", {
    transform: "translate(24.000000, 91.000000)"
  }, import_react118.default.createElement("g", {
    transform: "translate(179.177408, 36.687816)"
  }, import_react118.default.createElement("polyline", {
    points: "34.2767388 22 24.797043 31.4796958 21 27.6826527"
  })))))));
});

// node_modules/antd-mobile/es/components/selector/selector.js
var classPrefix60 = `adm-selector`;
var defaultProps47 = {
  multiple: false,
  defaultValue: [],
  showCheckMark: true
};
var Selector = (p) => {
  const props = mergeProps(defaultProps47, p);
  const [value, setValue2] = usePropsValue({
    value: props.value,
    defaultValue: props.defaultValue,
    onChange: (val) => {
      var _a;
      const extend = {
        get items() {
          return props.options.filter((option) => val.includes(option.value));
        }
      };
      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, val, extend);
    }
  });
  const items = props.options.map((option) => {
    const active = (value || []).includes(option.value);
    const disabled = option.disabled || props.disabled;
    const itemCls = (0, import_classnames46.default)(`${classPrefix60}-item`, {
      [`${classPrefix60}-item-active`]: active && !props.multiple,
      [`${classPrefix60}-item-multiple-active`]: active && props.multiple,
      [`${classPrefix60}-item-disabled`]: disabled
    });
    return import_react119.default.createElement("div", {
      key: option.value,
      className: itemCls,
      onClick: () => {
        if (disabled) {
          return;
        }
        if (props.multiple) {
          const val = active ? value.filter((v) => v !== option.value) : [...value, option.value];
          setValue2(val);
        } else {
          const val = active ? [] : [option.value];
          setValue2(val);
        }
      }
    }, option.label, option.description && import_react119.default.createElement("div", {
      className: `${classPrefix60}-item-description`
    }, option.description), active && props.showCheckMark && import_react119.default.createElement("div", {
      className: `${classPrefix60}-check-mark-wrapper`
    }, import_react119.default.createElement(CheckMark, null)));
  });
  return withNativeProps(props, import_react119.default.createElement("div", {
    className: classPrefix60
  }, !props.columns && import_react119.default.createElement(space_default, {
    wrap: true
  }, items), props.columns && import_react119.default.createElement(grid_default, {
    columns: props.columns,
    gap: convertPx(8)
  }, items)));
};

// node_modules/antd-mobile/es/components/selector/index.js
var selector_default = Selector;

// node_modules/antd-mobile/es/components/side-bar/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/side-bar/side-bar.css";

// node_modules/antd-mobile/es/components/side-bar/side-bar.js
var import_react121 = __toESM(require_react());
var import_classnames47 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/side-bar/corner.js
var import_react120 = __toESM(require_react());
var Corner = (0, import_react120.memo)((props) => withNativeProps(props, import_react120.default.createElement("svg", {
  viewBox: "0 0 30 30"
}, import_react120.default.createElement("g", {
  stroke: "none",
  strokeWidth: "1",
  fill: "none",
  fillRule: "evenodd"
}, import_react120.default.createElement("path", {
  d: "M30,0 C13.4314575,3.04359188e-15 -2.02906125e-15,13.4314575 0,30 L0,30 L0,0 Z",
  fill: "var(--adm-color-background)",
  transform: "translate(15.000000, 15.000000) scale(-1, -1) translate(-15.000000, -15.000000) "
})))));

// node_modules/antd-mobile/es/components/side-bar/side-bar.js
var classPrefix61 = `adm-side-bar`;
var SideBarItem = () => {
  return null;
};
var SideBar = (props) => {
  var _a;
  let firstActiveKey = null;
  const items = [];
  traverseReactNode(props.children, (child, index) => {
    if (!import_react121.default.isValidElement(child))
      return;
    const key = child.key;
    if (typeof key !== "string")
      return;
    if (index === 0) {
      firstActiveKey = key;
    }
    items.push(child);
  });
  const [activeKey, setActiveKey] = usePropsValue({
    value: props.activeKey,
    defaultValue: (_a = props.defaultActiveKey) !== null && _a !== void 0 ? _a : firstActiveKey,
    onChange: (v) => {
      var _a2;
      if (v === null)
        return;
      (_a2 = props.onChange) === null || _a2 === void 0 ? void 0 : _a2.call(props, v);
    }
  });
  const lastItem = items[items.length - 1];
  const isLastItemActive = lastItem && lastItem.key === activeKey;
  return withNativeProps(props, import_react121.default.createElement("div", {
    className: classPrefix61
  }, import_react121.default.createElement("div", {
    className: `${classPrefix61}-items`
  }, items.map((item, index) => {
    const active = item.key === activeKey;
    const isActiveNextSibling = items[index - 1] && items[index - 1].key === activeKey;
    const isActivePreviousSibling = items[index + 1] && items[index + 1].key === activeKey;
    return withNativeProps(item.props, import_react121.default.createElement("div", {
      key: item.key,
      onClick: () => {
        const {
          key
        } = item;
        if (key === void 0 || key === null || item.props.disabled)
          return;
        setActiveKey(key.toString());
      },
      className: (0, import_classnames47.default)(`${classPrefix61}-item`, {
        [`${classPrefix61}-item-active`]: active,
        [`${classPrefix61}-item-disabled`]: item.props.disabled
      })
    }, import_react121.default.createElement(import_react121.default.Fragment, null, isActiveNextSibling && import_react121.default.createElement(Corner, {
      className: `${classPrefix61}-item-corner ${classPrefix61}-item-corner-top`
    }), isActivePreviousSibling && import_react121.default.createElement(Corner, {
      className: `${classPrefix61}-item-corner ${classPrefix61}-item-corner-bottom`
    })), import_react121.default.createElement(badge_default, {
      content: item.props.badge,
      className: `${classPrefix61}-badge`
    }, import_react121.default.createElement("div", {
      className: `${classPrefix61}-item-title`
    }, active && import_react121.default.createElement("div", {
      className: `${classPrefix61}-item-highlight`
    }), item.props.title))));
  })), import_react121.default.createElement("div", {
    className: (0, import_classnames47.default)(`${classPrefix61}-extra-space`, isLastItemActive && `${classPrefix61}-item-active-next-sibling`)
  }, isLastItemActive && import_react121.default.createElement(Corner, {
    className: `${classPrefix61}-item-corner ${classPrefix61}-item-corner-top`
  }))));
};

// node_modules/antd-mobile/es/components/side-bar/index.js
var side_bar_default = attachPropertiesToComponent(SideBar, {
  Item: SideBarItem
});

// node_modules/antd-mobile/es/components/slider/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/slider/slider.css";

// node_modules/antd-mobile/es/components/slider/slider.js
var import_react127 = __toESM(require_react());
var import_classnames50 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/slider/ticks.js
var import_react122 = __toESM(require_react());
var import_classnames48 = __toESM(require_classnames());
var classPrefix62 = `adm-slider`;
var Ticks = ({
  points,
  max: max3,
  min: min3,
  upperBound,
  lowerBound
}) => {
  const range3 = max3 - min3;
  const elements = points.map((point) => {
    const offset2 = `${Math.abs(point - min3) / range3 * 100}%`;
    const isActived = point <= upperBound && point >= lowerBound;
    const style = {
      left: offset2
    };
    const pointClassName = (0, import_classnames48.default)({
      [`${classPrefix62}-tick`]: true,
      [`${classPrefix62}-tick-active`]: isActived
    });
    return import_react122.default.createElement("span", {
      className: pointClassName,
      style,
      key: point
    });
  });
  return import_react122.default.createElement("div", {
    className: `${classPrefix62}-ticks`
  }, elements);
};
var ticks_default = Ticks;

// node_modules/antd-mobile/es/components/slider/marks.js
var import_react123 = __toESM(require_react());
var import_classnames49 = __toESM(require_classnames());
var classPrefix63 = `adm-slider-mark`;
var Marks = ({
  marks,
  upperBound,
  lowerBound,
  max: max3,
  min: min3
}) => {
  const marksKeys = Object.keys(marks);
  const range3 = max3 - min3;
  const elements = marksKeys.map(parseFloat).sort((a, b) => a - b).filter((point) => point >= min3 && point <= max3).map((point) => {
    const markPoint = marks[point];
    if (!markPoint && markPoint !== 0) {
      return null;
    }
    const isActive = point <= upperBound && point >= lowerBound;
    const markClassName = (0, import_classnames49.default)({
      [`${classPrefix63}-text`]: true,
      [`${classPrefix63}-text-active`]: isActive
    });
    const style = {
      left: `${(point - min3) / range3 * 100}%`
    };
    return import_react123.default.createElement("span", {
      className: markClassName,
      style,
      key: point
    }, markPoint);
  });
  return import_react123.default.createElement("div", {
    className: classPrefix63
  }, elements);
};
var marks_default = Marks;

// node_modules/antd-mobile/es/components/slider/thumb.js
var import_react125 = __toESM(require_react());

// node_modules/antd-mobile/es/components/slider/thumb-icon.js
var import_react124 = __toESM(require_react());
var ThumbIcon = (props) => {
  return withNativeProps(props, import_react124.default.createElement("svg", {
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, import_react124.default.createElement("g", {
    fill: "currentColor",
    fillRule: "evenodd"
  }, import_react124.default.createElement("rect", {
    x: 10,
    width: 4,
    height: 24,
    rx: 2
  }), import_react124.default.createElement("rect", {
    y: 4,
    width: 4,
    height: 16,
    rx: 2
  }), import_react124.default.createElement("rect", {
    x: 20,
    y: 4,
    width: 4,
    height: 16,
    rx: 2
  }))));
};

// node_modules/antd-mobile/es/components/slider/thumb.js
var classPrefix64 = `adm-slider`;
var Thumb = (props) => {
  const {
    value,
    min: min3,
    max: max3,
    disabled,
    onDrag,
    icon
  } = props;
  const prevValue = (0, import_react125.useRef)(value);
  const currentPosition = () => {
    return {
      left: `${(value - min3) / (max3 - min3) * 100}%`,
      right: "auto"
    };
  };
  const [dragging, setDragging] = (0, import_react125.useState)(false);
  const bind = useDrag((state) => {
    var _a;
    if (disabled)
      return;
    if (state.first) {
      prevValue.current = value;
    }
    const x = state.xy[0] - state.initial[0];
    const sliderOffsetWith = (_a = props.trackRef.current) === null || _a === void 0 ? void 0 : _a.offsetWidth;
    if (!sliderOffsetWith)
      return;
    const diff = x / Math.ceil(sliderOffsetWith) * (max3 - min3);
    onDrag(prevValue.current + diff, state.first, state.last);
    setDragging(!state.last);
  }, {
    axis: "x",
    pointer: {
      touch: true
    }
  });
  const renderPopoverContent = typeof props.popover === "function" ? props.popover : props.popover ? (value2) => value2.toString() : null;
  const thumbElement = import_react125.default.createElement("div", {
    className: `${classPrefix64}-thumb`
  }, icon ? icon : import_react125.default.createElement(ThumbIcon, {
    className: `${classPrefix64}-thumb-icon`
  }));
  return import_react125.default.createElement("div", Object.assign({
    className: `${classPrefix64}-thumb-container`,
    style: currentPosition()
  }, bind()), renderPopoverContent ? import_react125.default.createElement(Popover, {
    content: renderPopoverContent(value),
    placement: "top",
    visible: dragging,
    getContainer: null,
    mode: "dark"
  }, thumbElement) : thumbElement);
};
var thumb_default = Thumb;

// node_modules/antd-mobile/es/components/slider/slider.js
var classPrefix65 = `adm-slider`;
var defaultProps48 = {
  min: 0,
  max: 100,
  step: 1,
  ticks: false,
  range: false,
  disabled: false,
  popover: false
};
var Slider = (p) => {
  var _a;
  const props = mergeProps(defaultProps48, p);
  const {
    min: min3,
    max: max3,
    disabled,
    marks,
    ticks,
    step,
    icon
  } = props;
  function sortValue(val) {
    return val.sort((a, b) => a - b);
  }
  function convertValue(value) {
    return props.range ? value : [props.min, value];
  }
  function reverseValue(value) {
    return props.range ? value : value[1];
  }
  function onAfterChange(value) {
    var _a2;
    (_a2 = props.onAfterChange) === null || _a2 === void 0 ? void 0 : _a2.call(props, reverseValue(value));
  }
  const [rawValue, setRawValue] = usePropsValue({
    value: props.value,
    defaultValue: (_a = props.defaultValue) !== null && _a !== void 0 ? _a : props.range ? [min3, min3] : min3,
    onChange: props.onChange
  });
  const sliderValue = sortValue(convertValue(rawValue));
  function setSliderValue(value) {
    const next = sortValue(value);
    const current = sliderValue;
    if (next[0] === current[0] && next[1] === current[1])
      return;
    setRawValue(reverseValue(next));
  }
  const trackRef = (0, import_react127.useRef)(null);
  const fillSize = `${100 * (sliderValue[1] - sliderValue[0]) / (max3 - min3)}%`;
  const fillStart = `${100 * (sliderValue[0] - min3) / (max3 - min3)}%`;
  const pointList = (0, import_react127.useMemo)(() => {
    if (marks) {
      return Object.keys(marks).map(parseFloat).sort((a, b) => a - b);
    } else {
      const points = [];
      for (let i = min3; i <= max3; i += step) {
        points.push(i);
      }
      return points;
    }
  }, [marks, ticks, step, min3, max3]);
  function getValueByPosition(position) {
    const newPosition = position < min3 ? min3 : position > max3 ? max3 : position;
    let value = min3;
    if (pointList.length) {
      value = nearest(pointList, newPosition);
    } else {
      const lengthPerStep = 100 / ((max3 - min3) / step);
      const steps = Math.round(newPosition / lengthPerStep);
      value = steps * lengthPerStep * (max3 - min3) * 0.01 + min3;
    }
    return value;
  }
  const dragLockRef = (0, import_react127.useRef)(0);
  const onTrackClick = (event) => {
    if (dragLockRef.current > 0)
      return;
    event.stopPropagation();
    if (disabled)
      return;
    const track = trackRef.current;
    if (!track)
      return;
    const sliderOffsetLeft = track.getBoundingClientRect().left;
    const position = (event.clientX - sliderOffsetLeft) / Math.ceil(track.offsetWidth) * (max3 - min3) + min3;
    const targetValue = getValueByPosition(position);
    let nextSliderValue;
    if (props.range) {
      if (Math.abs(targetValue - sliderValue[0]) > Math.abs(targetValue - sliderValue[1])) {
        nextSliderValue = [sliderValue[0], targetValue];
      } else {
        nextSliderValue = [targetValue, sliderValue[1]];
      }
    } else {
      nextSliderValue = [props.min, targetValue];
    }
    setSliderValue(nextSliderValue);
    onAfterChange(nextSliderValue);
  };
  const valueBeforeDragRef = (0, import_react127.useRef)();
  const renderThumb = (index) => {
    return import_react127.default.createElement(thumb_default, {
      key: index,
      value: sliderValue[index],
      min: min3,
      max: max3,
      disabled,
      trackRef,
      icon,
      popover: props.popover,
      onDrag: (position, first, last) => {
        if (first) {
          dragLockRef.current += 1;
          valueBeforeDragRef.current = sliderValue;
        }
        const val = getValueByPosition(position);
        const valueBeforeDrag = valueBeforeDragRef.current;
        if (!valueBeforeDrag)
          return;
        const next = [...valueBeforeDrag];
        next[index] = val;
        setSliderValue(next);
        if (last) {
          onAfterChange(next);
          window.setTimeout(() => {
            dragLockRef.current -= 1;
          }, 100);
        }
      }
    });
  };
  return withNativeProps(props, import_react127.default.createElement("div", {
    className: (0, import_classnames50.default)(classPrefix65, {
      [`${classPrefix65}-disabled`]: disabled
    })
  }, import_react127.default.createElement("div", {
    className: `${classPrefix65}-track-container`,
    onClick: onTrackClick
  }, import_react127.default.createElement("div", {
    className: `${classPrefix65}-track`,
    onClick: onTrackClick,
    ref: trackRef
  }, import_react127.default.createElement("div", {
    className: `${classPrefix65}-fill`,
    style: {
      width: fillSize,
      left: fillStart
    }
  }), props.ticks && import_react127.default.createElement(ticks_default, {
    points: pointList,
    min: min3,
    max: max3,
    lowerBound: sliderValue[0],
    upperBound: sliderValue[1]
  }), props.range && renderThumb(0), renderThumb(1))), marks && import_react127.default.createElement(marks_default, {
    min: min3,
    max: max3,
    marks,
    lowerBound: sliderValue[0],
    upperBound: sliderValue[1]
  })));
};

// node_modules/antd-mobile/es/components/slider/index.js
var slider_default = Slider;

// node_modules/antd-mobile/es/components/stepper/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/stepper/stepper.css";

// node_modules/antd-mobile/es/components/stepper/stepper.js
var import_classnames51 = __toESM(require_classnames());
var import_react128 = __toESM(require_react());

// node_modules/big.js/big.mjs
var DP = 20;
var RM = 1;
var MAX_DP = 1e6;
var MAX_POWER = 1e6;
var NE = -7;
var PE = 21;
var STRICT = false;
var NAME = "[big.js] ";
var INVALID = NAME + "Invalid ";
var INVALID_DP = INVALID + "decimal places";
var INVALID_RM = INVALID + "rounding mode";
var DIV_BY_ZERO = NAME + "Division by zero";
var P = {};
var UNDEFINED = void 0;
var NUMERIC = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
function _Big_() {
  function Big2(n) {
    var x = this;
    if (!(x instanceof Big2))
      return n === UNDEFINED ? _Big_() : new Big2(n);
    if (n instanceof Big2) {
      x.s = n.s;
      x.e = n.e;
      x.c = n.c.slice();
    } else {
      if (typeof n !== "string") {
        if (Big2.strict === true && typeof n !== "bigint") {
          throw TypeError(INVALID + "value");
        }
        n = n === 0 && 1 / n < 0 ? "-0" : String(n);
      }
      parse2(x, n);
    }
    x.constructor = Big2;
  }
  Big2.prototype = P;
  Big2.DP = DP;
  Big2.RM = RM;
  Big2.NE = NE;
  Big2.PE = PE;
  Big2.strict = STRICT;
  Big2.roundDown = 0;
  Big2.roundHalfUp = 1;
  Big2.roundHalfEven = 2;
  Big2.roundUp = 3;
  return Big2;
}
function parse2(x, n) {
  var e, i, nl;
  if (!NUMERIC.test(n)) {
    throw Error(INVALID + "number");
  }
  x.s = n.charAt(0) == "-" ? (n = n.slice(1), -1) : 1;
  if ((e = n.indexOf(".")) > -1)
    n = n.replace(".", "");
  if ((i = n.search(/e/i)) > 0) {
    if (e < 0)
      e = i;
    e += +n.slice(i + 1);
    n = n.substring(0, i);
  } else if (e < 0) {
    e = n.length;
  }
  nl = n.length;
  for (i = 0; i < nl && n.charAt(i) == "0"; )
    ++i;
  if (i == nl) {
    x.c = [x.e = 0];
  } else {
    for (; nl > 0 && n.charAt(--nl) == "0"; )
      ;
    x.e = e - i - 1;
    x.c = [];
    for (e = 0; i <= nl; )
      x.c[e++] = +n.charAt(i++);
  }
  return x;
}
function round2(x, sd, rm, more) {
  var xc = x.c;
  if (rm === UNDEFINED)
    rm = x.constructor.RM;
  if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {
    throw Error(INVALID_RM);
  }
  if (sd < 1) {
    more = rm === 3 && (more || !!xc[0]) || sd === 0 && (rm === 1 && xc[0] >= 5 || rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED)));
    xc.length = 1;
    if (more) {
      x.e = x.e - sd + 1;
      xc[0] = 1;
    } else {
      xc[0] = x.e = 0;
    }
  } else if (sd < xc.length) {
    more = rm === 1 && xc[sd] >= 5 || rm === 2 && (xc[sd] > 5 || xc[sd] === 5 && (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) || rm === 3 && (more || !!xc[0]);
    xc.length = sd--;
    if (more) {
      for (; ++xc[sd] > 9; ) {
        xc[sd] = 0;
        if (!sd--) {
          ++x.e;
          xc.unshift(1);
        }
      }
    }
    for (sd = xc.length; !xc[--sd]; )
      xc.pop();
  }
  return x;
}
function stringify2(x, doExponential, isNonzero) {
  var e = x.e, s = x.c.join(""), n = s.length;
  if (doExponential) {
    s = s.charAt(0) + (n > 1 ? "." + s.slice(1) : "") + (e < 0 ? "e" : "e+") + e;
  } else if (e < 0) {
    for (; ++e; )
      s = "0" + s;
    s = "0." + s;
  } else if (e > 0) {
    if (++e > n) {
      for (e -= n; e--; )
        s += "0";
    } else if (e < n) {
      s = s.slice(0, e) + "." + s.slice(e);
    }
  } else if (n > 1) {
    s = s.charAt(0) + "." + s.slice(1);
  }
  return x.s < 0 && isNonzero ? "-" + s : s;
}
P.abs = function() {
  var x = new this.constructor(this);
  x.s = 1;
  return x;
};
P.cmp = function(y) {
  var isneg, x = this, xc = x.c, yc = (y = new x.constructor(y)).c, i = x.s, j = y.s, k = x.e, l = y.e;
  if (!xc[0] || !yc[0])
    return !xc[0] ? !yc[0] ? 0 : -j : i;
  if (i != j)
    return i;
  isneg = i < 0;
  if (k != l)
    return k > l ^ isneg ? 1 : -1;
  j = (k = xc.length) < (l = yc.length) ? k : l;
  for (i = -1; ++i < j; ) {
    if (xc[i] != yc[i])
      return xc[i] > yc[i] ^ isneg ? 1 : -1;
  }
  return k == l ? 0 : k > l ^ isneg ? 1 : -1;
};
P.div = function(y) {
  var x = this, Big2 = x.constructor, a = x.c, b = (y = new Big2(y)).c, k = x.s == y.s ? 1 : -1, dp = Big2.DP;
  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
    throw Error(INVALID_DP);
  }
  if (!b[0]) {
    throw Error(DIV_BY_ZERO);
  }
  if (!a[0]) {
    y.s = k;
    y.c = [y.e = 0];
    return y;
  }
  var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), rl = r.length, q = y, qc = q.c = [], qi = 0, p = dp + (q.e = x.e - y.e) + 1;
  q.s = k;
  k = p < 0 ? 0 : p;
  bz.unshift(0);
  for (; rl++ < bl; )
    r.push(0);
  do {
    for (n = 0; n < 10; n++) {
      if (bl != (rl = r.length)) {
        cmp = bl > rl ? 1 : -1;
      } else {
        for (ri = -1, cmp = 0; ++ri < bl; ) {
          if (b[ri] != r[ri]) {
            cmp = b[ri] > r[ri] ? 1 : -1;
            break;
          }
        }
      }
      if (cmp < 0) {
        for (bt = rl == bl ? b : bz; rl; ) {
          if (r[--rl] < bt[rl]) {
            ri = rl;
            for (; ri && !r[--ri]; )
              r[ri] = 9;
            --r[ri];
            r[rl] += 10;
          }
          r[rl] -= bt[rl];
        }
        for (; !r[0]; )
          r.shift();
      } else {
        break;
      }
    }
    qc[qi++] = cmp ? n : ++n;
    if (r[0] && cmp)
      r[rl] = a[ai] || 0;
    else
      r = [a[ai]];
  } while ((ai++ < al || r[0] !== UNDEFINED) && k--);
  if (!qc[0] && qi != 1) {
    qc.shift();
    q.e--;
    p--;
  }
  if (qi > p)
    round2(q, p, Big2.RM, r[0] !== UNDEFINED);
  return q;
};
P.eq = function(y) {
  return this.cmp(y) === 0;
};
P.gt = function(y) {
  return this.cmp(y) > 0;
};
P.gte = function(y) {
  return this.cmp(y) > -1;
};
P.lt = function(y) {
  return this.cmp(y) < 0;
};
P.lte = function(y) {
  return this.cmp(y) < 1;
};
P.minus = P.sub = function(y) {
  var i, j, t, xlty, x = this, Big2 = x.constructor, a = x.s, b = (y = new Big2(y)).s;
  if (a != b) {
    y.s = -b;
    return x.plus(y);
  }
  var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;
  if (!xc[0] || !yc[0]) {
    if (yc[0]) {
      y.s = -b;
    } else if (xc[0]) {
      y = new Big2(x);
    } else {
      y.s = 1;
    }
    return y;
  }
  if (a = xe - ye) {
    if (xlty = a < 0) {
      a = -a;
      t = xc;
    } else {
      ye = xe;
      t = yc;
    }
    t.reverse();
    for (b = a; b--; )
      t.push(0);
    t.reverse();
  } else {
    j = ((xlty = xc.length < yc.length) ? xc : yc).length;
    for (a = b = 0; b < j; b++) {
      if (xc[b] != yc[b]) {
        xlty = xc[b] < yc[b];
        break;
      }
    }
  }
  if (xlty) {
    t = xc;
    xc = yc;
    yc = t;
    y.s = -y.s;
  }
  if ((b = (j = yc.length) - (i = xc.length)) > 0)
    for (; b--; )
      xc[i++] = 0;
  for (b = i; j > a; ) {
    if (xc[--j] < yc[j]) {
      for (i = j; i && !xc[--i]; )
        xc[i] = 9;
      --xc[i];
      xc[j] += 10;
    }
    xc[j] -= yc[j];
  }
  for (; xc[--b] === 0; )
    xc.pop();
  for (; xc[0] === 0; ) {
    xc.shift();
    --ye;
  }
  if (!xc[0]) {
    y.s = 1;
    xc = [ye = 0];
  }
  y.c = xc;
  y.e = ye;
  return y;
};
P.mod = function(y) {
  var ygtx, x = this, Big2 = x.constructor, a = x.s, b = (y = new Big2(y)).s;
  if (!y.c[0]) {
    throw Error(DIV_BY_ZERO);
  }
  x.s = y.s = 1;
  ygtx = y.cmp(x) == 1;
  x.s = a;
  y.s = b;
  if (ygtx)
    return new Big2(x);
  a = Big2.DP;
  b = Big2.RM;
  Big2.DP = Big2.RM = 0;
  x = x.div(y);
  Big2.DP = a;
  Big2.RM = b;
  return this.minus(x.times(y));
};
P.neg = function() {
  var x = new this.constructor(this);
  x.s = -x.s;
  return x;
};
P.plus = P.add = function(y) {
  var e, k, t, x = this, Big2 = x.constructor;
  y = new Big2(y);
  if (x.s != y.s) {
    y.s = -y.s;
    return x.minus(y);
  }
  var xe = x.e, xc = x.c, ye = y.e, yc = y.c;
  if (!xc[0] || !yc[0]) {
    if (!yc[0]) {
      if (xc[0]) {
        y = new Big2(x);
      } else {
        y.s = x.s;
      }
    }
    return y;
  }
  xc = xc.slice();
  if (e = xe - ye) {
    if (e > 0) {
      ye = xe;
      t = yc;
    } else {
      e = -e;
      t = xc;
    }
    t.reverse();
    for (; e--; )
      t.push(0);
    t.reverse();
  }
  if (xc.length - yc.length < 0) {
    t = yc;
    yc = xc;
    xc = t;
  }
  e = yc.length;
  for (k = 0; e; xc[e] %= 10)
    k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;
  if (k) {
    xc.unshift(k);
    ++ye;
  }
  for (e = xc.length; xc[--e] === 0; )
    xc.pop();
  y.c = xc;
  y.e = ye;
  return y;
};
P.pow = function(n) {
  var x = this, one = new x.constructor("1"), y = one, isneg = n < 0;
  if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {
    throw Error(INVALID + "exponent");
  }
  if (isneg)
    n = -n;
  for (; ; ) {
    if (n & 1)
      y = y.times(x);
    n >>= 1;
    if (!n)
      break;
    x = x.times(x);
  }
  return isneg ? one.div(y) : y;
};
P.prec = function(sd, rm) {
  if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {
    throw Error(INVALID + "precision");
  }
  return round2(new this.constructor(this), sd, rm);
};
P.round = function(dp, rm) {
  if (dp === UNDEFINED)
    dp = 0;
  else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {
    throw Error(INVALID_DP);
  }
  return round2(new this.constructor(this), dp + this.e + 1, rm);
};
P.sqrt = function() {
  var r, c, t, x = this, Big2 = x.constructor, s = x.s, e = x.e, half = new Big2("0.5");
  if (!x.c[0])
    return new Big2(x);
  if (s < 0) {
    throw Error(NAME + "No square root");
  }
  s = Math.sqrt(x + "");
  if (s === 0 || s === 1 / 0) {
    c = x.c.join("");
    if (!(c.length + e & 1))
      c += "0";
    s = Math.sqrt(c);
    e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);
    r = new Big2((s == 1 / 0 ? "5e" : (s = s.toExponential()).slice(0, s.indexOf("e") + 1)) + e);
  } else {
    r = new Big2(s + "");
  }
  e = r.e + (Big2.DP += 4);
  do {
    t = r;
    r = half.times(t.plus(x.div(t)));
  } while (t.c.slice(0, e).join("") !== r.c.slice(0, e).join(""));
  return round2(r, (Big2.DP -= 4) + r.e + 1, Big2.RM);
};
P.times = P.mul = function(y) {
  var c, x = this, Big2 = x.constructor, xc = x.c, yc = (y = new Big2(y)).c, a = xc.length, b = yc.length, i = x.e, j = y.e;
  y.s = x.s == y.s ? 1 : -1;
  if (!xc[0] || !yc[0]) {
    y.c = [y.e = 0];
    return y;
  }
  y.e = i + j;
  if (a < b) {
    c = xc;
    xc = yc;
    yc = c;
    j = a;
    a = b;
    b = j;
  }
  for (c = new Array(j = a + b); j--; )
    c[j] = 0;
  for (i = b; i--; ) {
    b = 0;
    for (j = a + i; j > i; ) {
      b = c[j] + yc[i] * xc[j - i - 1] + b;
      c[j--] = b % 10;
      b = b / 10 | 0;
    }
    c[j] = b;
  }
  if (b)
    ++y.e;
  else
    c.shift();
  for (i = c.length; !c[--i]; )
    c.pop();
  y.c = c;
  return y;
};
P.toExponential = function(dp, rm) {
  var x = this, n = x.c[0];
  if (dp !== UNDEFINED) {
    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
      throw Error(INVALID_DP);
    }
    x = round2(new x.constructor(x), ++dp, rm);
    for (; x.c.length < dp; )
      x.c.push(0);
  }
  return stringify2(x, true, !!n);
};
P.toFixed = function(dp, rm) {
  var x = this, n = x.c[0];
  if (dp !== UNDEFINED) {
    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {
      throw Error(INVALID_DP);
    }
    x = round2(new x.constructor(x), dp + x.e + 1, rm);
    for (dp = dp + x.e + 1; x.c.length < dp; )
      x.c.push(0);
  }
  return stringify2(x, false, !!n);
};
P[Symbol.for("nodejs.util.inspect.custom")] = P.toJSON = P.toString = function() {
  var x = this, Big2 = x.constructor;
  return stringify2(x, x.e <= Big2.NE || x.e >= Big2.PE, !!x.c[0]);
};
P.toNumber = function() {
  var n = Number(stringify2(this, true, true));
  if (this.constructor.strict === true && !this.eq(n.toString())) {
    throw Error(NAME + "Imprecise conversion");
  }
  return n;
};
P.toPrecision = function(sd, rm) {
  var x = this, Big2 = x.constructor, n = x.c[0];
  if (sd !== UNDEFINED) {
    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {
      throw Error(INVALID + "precision");
    }
    x = round2(new Big2(x), sd, rm);
    for (; x.c.length < sd; )
      x.c.push(0);
  }
  return stringify2(x, sd <= x.e || x.e <= Big2.NE || x.e >= Big2.PE, !!n);
};
P.valueOf = function() {
  var x = this, Big2 = x.constructor;
  if (Big2.strict === true) {
    throw Error(NAME + "valueOf disallowed");
  }
  return stringify2(x, x.e <= Big2.NE || x.e >= Big2.PE, true);
};
var Big = _Big_();
var big_default = Big;

// node_modules/antd-mobile/es/components/stepper/stepper.js
var classPrefix66 = `adm-stepper`;
var defaultProps49 = {
  defaultValue: 0,
  step: 1,
  disabled: false,
  allowEmpty: false
};
var Stepper = (p) => {
  const props = mergeProps(defaultProps49, p);
  const {
    disabled,
    step,
    max: max3,
    min: min3,
    inputReadOnly
  } = props;
  const [value, setValue2] = usePropsValue(props);
  const [inputValue, setInputValue] = (0, import_react128.useState)(() => convertValueToText(value, props.digits));
  function setValueWithCheck(v) {
    if (isNaN(v))
      return;
    let target = bound(v, props.min, props.max);
    if (props.digits !== void 0) {
      target = parseFloat(target.toFixed(props.digits));
    }
    setValue2(target);
  }
  const [hasFocus, setHasFocus] = (0, import_react128.useState)(false);
  (0, import_react128.useEffect)(() => {
    if (!hasFocus) {
      setInputValue(convertValueToText(value, props.digits));
    }
  }, [hasFocus]);
  (0, import_react128.useEffect)(() => {
    if (!hasFocus) {
      setInputValue(convertValueToText(value, props.digits));
    }
  }, [value, props.digits]);
  const handleInputChange = (v) => {
    setInputValue(v);
    const value2 = convertTextToValue(v);
    if (value2 === null) {
      if (props.allowEmpty) {
        setValue2(null);
      } else {
        setValue2(props.defaultValue);
      }
    } else {
      setValueWithCheck(value2);
    }
  };
  const handleMinus = () => {
    setValueWithCheck(big_default(value !== null && value !== void 0 ? value : 0).minus(step).toNumber());
  };
  const handlePlus = () => {
    setValueWithCheck(big_default(value !== null && value !== void 0 ? value : 0).add(step).toNumber());
  };
  const minusDisabled = () => {
    if (disabled)
      return true;
    if (value === null)
      return false;
    if (min3 !== void 0) {
      return value <= min3;
    }
    return false;
  };
  const plusDisabled = () => {
    if (disabled)
      return true;
    if (value === null)
      return false;
    if (max3 !== void 0) {
      return value >= max3;
    }
    return false;
  };
  return withNativeProps(props, import_react128.default.createElement("div", {
    className: (0, import_classnames51.default)(classPrefix66, {
      [`${classPrefix66}-active`]: hasFocus
    })
  }, import_react128.default.createElement(button_default, {
    className: `${classPrefix66}-minus`,
    onClick: handleMinus,
    disabled: minusDisabled(),
    fill: "none",
    shape: "rectangular",
    color: "primary"
  }, import_react128.default.createElement(MinusOutline_default, null)), import_react128.default.createElement("div", {
    className: `${classPrefix66}-middle`
  }, import_react128.default.createElement(input_default, {
    className: `${classPrefix66}-input`,
    onFocus: (e) => {
      var _a;
      setHasFocus(true);
      (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, e);
    },
    value: inputValue,
    onChange: (val) => {
      disabled || handleInputChange(val);
    },
    disabled,
    onBlur: (e) => {
      var _a;
      setHasFocus(false);
      (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, e);
    },
    readOnly: inputReadOnly
  })), import_react128.default.createElement(button_default, {
    className: `${classPrefix66}-plus`,
    onClick: handlePlus,
    disabled: plusDisabled(),
    fill: "none",
    shape: "rectangular",
    color: "primary"
  }, import_react128.default.createElement(AddOutline_default, null))));
};
function convertValueToText(value, digits) {
  if (value === null)
    return "";
  if (digits !== void 0) {
    return value.toFixed(digits);
  } else {
    return value.toString();
  }
}
function convertTextToValue(text) {
  if (text === "")
    return null;
  return parseFloat(text);
}

// node_modules/antd-mobile/es/components/stepper/index.js
var stepper_default = Stepper;

// node_modules/antd-mobile/es/components/steps/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/steps/steps.css";

// node_modules/antd-mobile/es/components/steps/step.js
var import_react129 = __toESM(require_react());
var import_classnames52 = __toESM(require_classnames());
var classPrefix67 = `adm-step`;
var Step = (props) => {
  const {
    title,
    description,
    icon,
    status = "wait"
  } = props;
  return withNativeProps(props, import_react129.default.createElement("div", {
    className: (0, import_classnames52.default)(`${classPrefix67}`, `${classPrefix67}-status-${status}`)
  }, import_react129.default.createElement("div", {
    className: `${classPrefix67}-indicator`
  }, import_react129.default.createElement("div", {
    className: `${classPrefix67}-icon-container`
  }, icon)), import_react129.default.createElement("div", {
    className: `${classPrefix67}-content`
  }, import_react129.default.createElement("div", {
    className: `${classPrefix67}-title`
  }, title), !!description && import_react129.default.createElement("div", {
    className: `${classPrefix67}-description`
  }, description))));
};

// node_modules/antd-mobile/es/components/steps/steps.js
var import_react130 = __toESM(require_react());
var import_classnames53 = __toESM(require_classnames());
var classPrefix68 = `adm-steps`;
var stepClassPrefix = `adm-step`;
var defaultIcon = import_react130.default.createElement("span", {
  className: `${stepClassPrefix}-icon-dot`
});
var defaultProps50 = {
  current: 0,
  direction: "horizontal"
};
var Steps = (p) => {
  const props = mergeProps(defaultProps50, p);
  const {
    direction,
    current
  } = props;
  const classString = (0, import_classnames53.default)(classPrefix68, `${classPrefix68}-${direction}`);
  return withNativeProps(props, import_react130.default.createElement("div", {
    className: classString
  }, import_react130.default.Children.map(props.children, (child, index) => {
    var _a;
    if (!import_react130.default.isValidElement(child)) {
      return child;
    }
    const props2 = child.props;
    let status = props2.status || "wait";
    if (index < current) {
      status = props2.status || "finish";
    } else if (index === current) {
      status = props2.status || "process";
    }
    const icon = (_a = props2.icon) !== null && _a !== void 0 ? _a : defaultIcon;
    return import_react130.default.cloneElement(child, {
      status,
      icon
    });
  })));
};

// node_modules/antd-mobile/es/components/steps/index.js
var steps_default = attachPropertiesToComponent(Steps, {
  Step
});

// node_modules/antd-mobile/es/components/swipe-action/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/swipe-action/swipe-action.css";

// node_modules/antd-mobile/es/components/swipe-action/swipe-action.js
var import_react131 = __toESM(require_react());
var classPrefix69 = `adm-swipe-action`;
var defaultProps51 = {
  rightActions: [],
  leftActions: [],
  closeOnTouchOutside: true,
  closeOnAction: true,
  stopPropagation: []
};
var SwipeAction = (0, import_react131.forwardRef)((p, ref) => {
  const props = mergeProps(defaultProps51, p);
  const rootRef = (0, import_react131.useRef)(null);
  const leftRef = (0, import_react131.useRef)(null);
  const rightRef = (0, import_react131.useRef)(null);
  function getWidth(ref2) {
    const element = ref2.current;
    if (!element)
      return 0;
    return element.offsetWidth;
  }
  function getLeftWidth() {
    return getWidth(leftRef);
  }
  function getRightWidth() {
    return getWidth(rightRef);
  }
  const [{
    x
  }, api] = useSpring(() => ({
    x: 0,
    config: {
      tension: 200,
      friction: 30
    }
  }), []);
  const draggingRef = (0, import_react131.useRef)(false);
  const bind = useDrag((state) => {
    draggingRef.current = true;
    const [offsetX] = state.offset;
    if (state.last) {
      const leftWidth = getLeftWidth();
      const rightWidth = getRightWidth();
      let position = offsetX + state.velocity[0] * state.direction[0] * 50;
      if (offsetX > 0) {
        position = Math.max(0, position);
      } else if (offsetX < 0) {
        position = Math.min(0, position);
      } else {
        position = 0;
      }
      api.start({
        x: nearest([-rightWidth, 0, leftWidth], position)
      });
      window.setTimeout(() => {
        draggingRef.current = false;
      });
    } else {
      api.start({
        x: offsetX,
        immediate: true
      });
    }
  }, {
    from: () => [x.get(), 0],
    bounds: () => {
      const leftWidth = getLeftWidth();
      const rightWidth = getRightWidth();
      return {
        left: -rightWidth,
        right: leftWidth
      };
    },
    axis: "x",
    preventScroll: true,
    pointer: {
      touch: true
    }
  });
  function close() {
    api.start({
      x: 0
    });
  }
  (0, import_react131.useImperativeHandle)(ref, () => ({
    show: (side = "right") => {
      if (side === "right") {
        api.start({
          x: -getRightWidth()
        });
      } else if (side === "left") {
        api.start({
          x: getLeftWidth()
        });
      }
    },
    close
  }));
  (0, import_react131.useEffect)(() => {
    if (!props.closeOnTouchOutside)
      return;
    function handle(e) {
      if (x.get() === 0) {
        return;
      }
      const root = rootRef.current;
      if (root && !root.contains(e.target)) {
        close();
      }
    }
    document.addEventListener("touchstart", handle);
    return () => {
      document.removeEventListener("touchstart", handle);
    };
  }, [props.closeOnTouchOutside]);
  function renderAction(action) {
    var _a, _b;
    const color = (_a = action.color) !== null && _a !== void 0 ? _a : "light";
    return import_react131.default.createElement(button_default, {
      key: action.key,
      className: `${classPrefix69}-action-button`,
      style: {
        "--background-color": (_b = colorRecord3[color]) !== null && _b !== void 0 ? _b : color
      },
      onClick: (e) => {
        var _a2, _b2;
        if (props.closeOnAction) {
          close();
        }
        (_a2 = action.onClick) === null || _a2 === void 0 ? void 0 : _a2.call(action, e);
        (_b2 = props.onAction) === null || _b2 === void 0 ? void 0 : _b2.call(props, action, e);
      }
    }, action.text);
  }
  return withNativeProps(props, import_react131.default.createElement("div", Object.assign({
    className: classPrefix69
  }, bind(), {
    ref: rootRef,
    onClickCapture: (e) => {
      if (draggingRef.current) {
        e.stopPropagation();
        e.preventDefault();
      }
    }
  }), import_react131.default.createElement(animated.div, {
    className: `${classPrefix69}-track`,
    style: {
      x
    }
  }, withStopPropagation(props.stopPropagation, import_react131.default.createElement("div", {
    className: `${classPrefix69}-actions ${classPrefix69}-actions-left`,
    ref: leftRef
  }, props.leftActions.map(renderAction))), import_react131.default.createElement("div", {
    className: `${classPrefix69}-content`,
    onClickCapture: (e) => {
      if (x.goal !== 0) {
        e.preventDefault();
        e.stopPropagation();
        api.start({
          x: 0
        });
      }
    }
  }, import_react131.default.createElement(animated.div, {
    style: {
      pointerEvents: x.to((v) => v !== 0 && x.goal !== 0 ? "none" : "auto")
    }
  }, props.children)), withStopPropagation(props.stopPropagation, import_react131.default.createElement("div", {
    className: `${classPrefix69}-actions ${classPrefix69}-actions-right`,
    ref: rightRef
  }, props.rightActions.map(renderAction))))));
});
var colorRecord3 = {
  light: "var(--adm-color-light)",
  weak: "var(--adm-color-weak)",
  primary: "var(--adm-color-primary)",
  success: "var(--adm-color-success)",
  warning: "var(--adm-color-warning)",
  danger: "var(--adm-color-danger)"
};

// node_modules/antd-mobile/es/components/swipe-action/index.js
var swipe_action_default = SwipeAction;

// node_modules/antd-mobile/es/components/swiper/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/swiper/swiper.css";

// node_modules/antd-mobile/es/components/swiper/swiper.js
var import_react135 = __toESM(require_react());
var import_classnames54 = __toESM(require_classnames());

// node_modules/antd-mobile/es/components/swiper/swiper-item.js
var import_react133 = __toESM(require_react());
var SwiperItem = (props) => {
  return withNativeProps(props, import_react133.default.createElement("div", {
    className: "adm-swiper-item",
    onClick: props.onClick
  }, props.children));
};

// node_modules/antd-mobile/es/components/swiper/swiper.js
var import_staged_components2 = __toESM(require_staged_components());

// node_modules/antd-mobile/es/utils/use-ref-state.js
var import_react134 = __toESM(require_react());
function useRefState(initialState) {
  const [state, setState] = (0, import_react134.useState)(initialState);
  const ref = (0, import_react134.useRef)(state);
  (0, import_react134.useEffect)(() => {
    ref.current = state;
  }, [state]);
  return [state, setState, ref];
}

// node_modules/antd-mobile/es/components/swiper/swiper.js
var classPrefix70 = `adm-swiper`;
var defaultProps52 = {
  defaultIndex: 0,
  allowTouchMove: true,
  autoplay: false,
  autoplayInterval: 3e3,
  loop: false,
  direction: "horizontal",
  slideSize: 100,
  trackOffset: 0,
  stuckAtBoundary: true,
  rubberband: true
};
var Swiper = (0, import_react135.forwardRef)((0, import_staged_components2.staged)((p, ref) => {
  const props = mergeProps(defaultProps52, p);
  const isVertical = props.direction === "vertical";
  const slideRatio = props.slideSize / 100;
  const offsetRatio = props.trackOffset / 100;
  const {
    validChildren,
    count
  } = (0, import_react135.useMemo)(() => {
    let count2 = 0;
    const validChildren2 = import_react135.default.Children.map(props.children, (child) => {
      if (!import_react135.default.isValidElement(child))
        return null;
      if (child.type !== SwiperItem) {
        devWarning("Swiper", "The children of `Swiper` must be `Swiper.Item` components.");
        return null;
      }
      count2++;
      return child;
    });
    return {
      validChildren: validChildren2,
      count: count2
    };
  }, [props.children]);
  if (count === 0 || !validChildren) {
    devWarning("Swiper", "`Swiper` needs at least one child.");
    return null;
  }
  return () => {
    let loop = props.loop;
    if (slideRatio * (count - 1) < 1) {
      loop = false;
    }
    const trackRef = (0, import_react135.useRef)(null);
    function getSlidePixels() {
      const track = trackRef.current;
      if (!track)
        return 0;
      const trackPixels = isVertical ? track.offsetHeight : track.offsetWidth;
      return trackPixels * props.slideSize / 100;
    }
    const [current, setCurrent] = (0, import_react135.useState)(props.defaultIndex);
    useUpdateEffect_default(() => {
      var _a;
      (_a = props.onIndexChange) === null || _a === void 0 ? void 0 : _a.call(props, current);
    }, [current]);
    const [dragging, setDragging, draggingRef] = useRefState(false);
    function boundIndex(current2) {
      let min3 = 0;
      let max3 = count - 1;
      if (props.stuckAtBoundary) {
        min3 += offsetRatio / slideRatio;
        max3 -= (1 - slideRatio - offsetRatio) / slideRatio;
      }
      return bound(current2, min3, max3);
    }
    const [{
      position
    }, api] = useSpring(() => ({
      position: boundIndex(current) * 100,
      config: {
        tension: 200,
        friction: 30
      },
      onRest: () => {
        if (draggingRef.current)
          return;
        if (!loop)
          return;
        const rawX = position.get();
        const totalWidth = 100 * count;
        const standardPosition = modulus(rawX, totalWidth);
        if (standardPosition === rawX)
          return;
        api.start({
          position: standardPosition,
          immediate: true
        });
      }
    }), [count]);
    const bind = useDrag((state) => {
      const slidePixels = getSlidePixels();
      if (!slidePixels)
        return;
      const paramIndex = isVertical ? 1 : 0;
      const offset2 = state.offset[paramIndex];
      const direction = state.direction[paramIndex];
      const velocity = state.velocity[paramIndex];
      setDragging(true);
      if (!state.last) {
        api.start({
          position: offset2 * 100 / slidePixels,
          immediate: true
        });
      } else {
        const minIndex = Math.floor(offset2 / slidePixels);
        const maxIndex = minIndex + 1;
        const index = Math.round((offset2 + velocity * 2e3 * direction) / slidePixels);
        swipeTo(bound(index, minIndex, maxIndex));
        window.setTimeout(() => {
          setDragging(false);
        });
      }
    }, {
      transform: ([x, y]) => [-x, -y],
      from: () => {
        const slidePixels = getSlidePixels();
        return [position.get() / 100 * slidePixels, position.get() / 100 * slidePixels];
      },
      bounds: () => {
        if (loop)
          return {};
        const slidePixels = getSlidePixels();
        const lowerBound = boundIndex(0) * slidePixels;
        const upperBound = boundIndex(count - 1) * slidePixels;
        return isVertical ? {
          top: lowerBound,
          bottom: upperBound
        } : {
          left: lowerBound,
          right: upperBound
        };
      },
      rubberband: props.rubberband,
      axis: isVertical ? "y" : "x",
      preventScroll: !isVertical,
      pointer: {
        touch: true
      }
    });
    function swipeTo(index, immediate = false) {
      const roundedIndex = Math.round(index);
      const targetIndex = loop ? modulus(roundedIndex, count) : bound(roundedIndex, 0, count - 1);
      setCurrent(targetIndex);
      api.start({
        position: (loop ? roundedIndex : boundIndex(roundedIndex)) * 100,
        immediate
      });
    }
    function swipeNext() {
      swipeTo(Math.round(position.get() / 100) + 1);
    }
    function swipePrev() {
      swipeTo(Math.round(position.get() / 100) - 1);
    }
    (0, import_react135.useImperativeHandle)(ref, () => ({
      swipeTo,
      swipeNext,
      swipePrev
    }));
    useIsomorphicLayoutEffect_default(() => {
      const maxIndex = validChildren.length - 1;
      if (current > maxIndex) {
        swipeTo(maxIndex, true);
      }
    });
    const {
      autoplay,
      autoplayInterval
    } = props;
    (0, import_react135.useEffect)(() => {
      if (!autoplay || dragging)
        return;
      const interval = window.setInterval(() => {
        swipeNext();
      }, autoplayInterval);
      return () => {
        window.clearInterval(interval);
      };
    }, [autoplay, autoplayInterval, dragging]);
    function renderTrackInner() {
      if (loop) {
        return import_react135.default.createElement("div", {
          className: `${classPrefix70}-track-inner`
        }, import_react135.default.Children.map(validChildren, (child, index) => {
          return import_react135.default.createElement(animated.div, {
            className: `${classPrefix70}-slide`,
            style: {
              [isVertical ? "y" : "x"]: position.to((position2) => {
                let finalPosition = -position2 + index * 100;
                const totalWidth = count * 100;
                const flagWidth = totalWidth / 2;
                finalPosition = modulus(finalPosition + flagWidth, totalWidth) - flagWidth;
                return `${finalPosition}%`;
              }),
              [isVertical ? "top" : "left"]: `-${index * 100}%`
            }
          }, child);
        }));
      } else {
        return import_react135.default.createElement(animated.div, {
          className: `${classPrefix70}-track-inner`,
          style: {
            [isVertical ? "y" : "x"]: position.to((position2) => `${-position2}%`)
          }
        }, import_react135.default.Children.map(validChildren, (child) => {
          return import_react135.default.createElement("div", {
            className: `${classPrefix70}-slide`
          }, child);
        }));
      }
    }
    const style = {
      "--slide-size": `${props.slideSize}%`,
      "--track-offset": `${props.trackOffset}%`
    };
    return withNativeProps(props, import_react135.default.createElement("div", {
      className: (0, import_classnames54.default)(classPrefix70, `${classPrefix70}-${props.direction}`),
      style
    }, import_react135.default.createElement("div", Object.assign({
      ref: trackRef,
      className: (0, import_classnames54.default)(`${classPrefix70}-track`, {
        [`${classPrefix70}-track-allow-touch-move`]: props.allowTouchMove
      }),
      onClickCapture: (e) => {
        if (draggingRef.current) {
          e.stopPropagation();
        }
      }
    }, props.allowTouchMove ? bind() : {}), renderTrackInner()), props.indicator === void 0 ? import_react135.default.createElement("div", {
      className: `${classPrefix70}-indicator`
    }, import_react135.default.createElement(page_indicator_default, Object.assign({}, props.indicatorProps, {
      total: count,
      current,
      direction: props.direction
    }))) : props.indicator(count, current)));
  };
}));
function modulus(value, division) {
  const remainder = value % division;
  return remainder < 0 ? remainder + division : remainder;
}

// node_modules/antd-mobile/es/components/swiper/index.js
var swiper_default = attachPropertiesToComponent(Swiper, {
  Item: SwiperItem
});

// node_modules/antd-mobile/es/components/switch/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/switch/switch.css";

// node_modules/antd-mobile/es/components/switch/switch.js
var import_classnames55 = __toESM(require_classnames());
var import_react138 = __toESM(require_react());

// node_modules/antd-mobile/es/components/switch/spin-icon.js
var import_react137 = __toESM(require_react());
var SpinIcon = (0, import_react137.memo)((props) => {
  return withNativeProps(props, import_react137.default.createElement("svg", {
    width: "28px",
    height: "28px",
    viewBox: "0 0 28 28"
  }, import_react137.default.createElement("g", {
    stroke: "none",
    strokeWidth: "1",
    fill: "none",
    fillRule: "evenodd"
  }, import_react137.default.createElement("g", {
    transform: "translate(-137.000000, -840.000000)",
    fill: "#1576FE"
  }, import_react137.default.createElement("g", {
    transform: "translate(80.000000, 823.000000)"
  }, import_react137.default.createElement("g", {
    transform: "translate(53.000000, 13.000000)"
  }, import_react137.default.createElement("path", {
    d: "M17.9996753,31.5 C10.5556724,31.5 4.5,25.4443275 4.5,18.0003247 C4.5,10.5563219 10.5556724,4.5 17.9996753,4.5 C18.5355492,4.5 18.9702974,4.93474816 18.9702974,5.47062208 C18.9702974,6.006496 18.5355492,6.44124416 17.9996753,6.44124416 C11.6261524,6.44124416 6.44124416,11.6267709 6.44124416,18.0002938 C6.44124416,24.3738167 11.6261524,29.5587249 17.9996753,29.5587249 C24.3731982,29.5587249 29.5587249,24.3738167 29.5587249,18.0002938 C29.5587249,14.7964616 28.2778291,11.8169616 25.9523687,9.61220279 C25.5637302,9.24317094 25.5473089,8.62893223 25.9157222,8.23967523 C26.2841356,7.84976878 26.8989928,7.83461537 27.2882498,8.20302872 C30.0042351,10.7787368 31.5,14.2580826 31.5,18.0002938 C31.5,25.4443275 25.4436781,31.5 17.9996753,31.5 Z"
  })))))));
});

// node_modules/antd-mobile/es/components/switch/switch.js
var classPrefix71 = `adm-switch`;
var defaultProps53 = {
  defaultChecked: false
};
var Switch = (p) => {
  const props = mergeProps(defaultProps53, p);
  const disabled = props.disabled || props.loading || false;
  const [changing, setChanging] = (0, import_react138.useState)(false);
  const {
    locale
  } = useConfig();
  const [checked, setChecked] = usePropsValue({
    value: props.checked,
    defaultValue: props.defaultChecked,
    onChange: props.onChange
  });
  function onClick() {
    return __awaiter(this, void 0, void 0, function* () {
      if (disabled || props.loading || changing) {
        return;
      }
      const nextChecked = !checked;
      if (props.beforeChange) {
        setChanging(true);
        try {
          yield props.beforeChange(nextChecked);
          setChecked(nextChecked);
          setChanging(false);
        } catch (e) {
          setChanging(false);
          throw e;
        }
      } else {
        setChecked(nextChecked);
      }
    });
  }
  return withNativeProps(props, import_react138.default.createElement("div", {
    onClick,
    className: (0, import_classnames55.default)(classPrefix71, {
      [`${classPrefix71}-checked`]: checked,
      [`${classPrefix71}-disabled`]: disabled || changing
    }),
    role: "switch",
    "aria-label": locale.Switch.name,
    "aria-checked": checked,
    "aria-disabled": disabled
  }, import_react138.default.createElement("div", {
    className: `${classPrefix71}-checkbox`
  }, import_react138.default.createElement("div", {
    className: `${classPrefix71}-handle`
  }, (props.loading || changing) && import_react138.default.createElement(SpinIcon, {
    className: `${classPrefix71}-spin-icon`
  })), import_react138.default.createElement("div", {
    className: `${classPrefix71}-inner`
  }, checked ? props.checkedText : props.uncheckedText))));
};

// node_modules/antd-mobile/es/components/switch/index.js
var switch_default = Switch;

// node_modules/antd-mobile/es/components/tab-bar/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/tab-bar/tab-bar.css";

// node_modules/antd-mobile/es/components/tab-bar/tab-bar.js
var import_react139 = __toESM(require_react());
var import_classnames56 = __toESM(require_classnames());
var TabBarItem = () => {
  return null;
};
var classPrefix72 = `adm-tab-bar`;
var defaultProps54 = {
  safeArea: false
};
var TabBar = (p) => {
  var _a;
  const props = mergeProps(defaultProps54, p);
  let firstActiveKey = null;
  const items = [];
  traverseReactNode(props.children, (child, index) => {
    if (!import_react139.default.isValidElement(child))
      return;
    const key = child.key;
    if (typeof key !== "string")
      return;
    if (index === 0) {
      firstActiveKey = key;
    }
    items.push(child);
  });
  const [activeKey, setActiveKey] = usePropsValue({
    value: props.activeKey,
    defaultValue: (_a = props.defaultActiveKey) !== null && _a !== void 0 ? _a : firstActiveKey,
    onChange: (v) => {
      var _a2;
      if (v === null)
        return;
      (_a2 = props.onChange) === null || _a2 === void 0 ? void 0 : _a2.call(props, v);
    }
  });
  return withNativeProps(props, import_react139.default.createElement("div", {
    className: classPrefix72
  }, import_react139.default.createElement("div", {
    className: `${classPrefix72}-wrap`
  }, items.map((item) => {
    const active = item.key === activeKey;
    function renderContent() {
      const iconElement = item.props.icon && import_react139.default.createElement("div", {
        className: `${classPrefix72}-item-icon`
      }, typeof item.props.icon === "function" ? item.props.icon(active) : item.props.icon);
      const titleElement = item.props.title && import_react139.default.createElement("div", {
        className: (0, import_classnames56.default)(`${classPrefix72}-item-title`, Boolean(iconElement) && `${classPrefix72}-item-title-with-icon`)
      }, typeof item.props.title === "function" ? item.props.title(active) : item.props.title);
      if (iconElement) {
        return import_react139.default.createElement(import_react139.default.Fragment, null, import_react139.default.createElement(badge_default, {
          content: item.props.badge,
          className: `${classPrefix72}-icon-badge`
        }, iconElement), titleElement);
      } else if (titleElement) {
        return import_react139.default.createElement(badge_default, {
          content: item.props.badge,
          className: `${classPrefix72}-title-badge`
        }, titleElement);
      }
      return null;
    }
    return withNativeProps(item.props, import_react139.default.createElement("div", {
      key: item.key,
      onClick: () => {
        const {
          key
        } = item;
        if (key === void 0 || key === null)
          return;
        setActiveKey(key.toString());
      },
      className: (0, import_classnames56.default)(`${classPrefix72}-item`, {
        [`${classPrefix72}-item-active`]: active
      })
    }, renderContent()));
  })), props.safeArea && import_react139.default.createElement(safe_area_default, {
    position: "bottom"
  })));
};

// node_modules/antd-mobile/es/components/tab-bar/index.js
var tab_bar_default = attachPropertiesToComponent(TabBar, {
  Item: TabBarItem
});

// node_modules/antd-mobile/es/components/tag/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/tag/tag.css";

// node_modules/antd-mobile/es/components/tag/tag.js
var import_react140 = __toESM(require_react());
var import_classnames57 = __toESM(require_classnames());
var classPrefix73 = `adm-tag`;
var colorRecord4 = {
  default: "#666666",
  primary: "var(--adm-color-primary, #1677ff)",
  success: "var(--adm-color-success, #00b578)",
  warning: "var(--adm-color-warning, #ff8f1f)",
  danger: "var(--adm-color-danger, #ff3141)"
};
var defaultProps55 = {
  color: "default",
  fill: "solid",
  round: false
};
var Tag = (p) => {
  var _a;
  const props = mergeProps(defaultProps55, p);
  const color = (_a = colorRecord4[props.color]) !== null && _a !== void 0 ? _a : props.color;
  const style = {
    "--border-color": color,
    "--text-color": props.fill === "outline" ? color : "#ffffff",
    "--background-color": props.fill === "outline" ? "transparent" : color
  };
  return withNativeProps(props, import_react140.default.createElement("span", {
    style,
    onClick: props.onClick,
    className: (0, import_classnames57.default)(classPrefix73, {
      [`${classPrefix73}-round`]: props.round
    })
  }, props.children));
};

// node_modules/antd-mobile/es/components/tag/index.js
var tag_default = Tag;

// node_modules/antd-mobile/es/components/text-area/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/text-area/text-area.css";

// node_modules/antd-mobile/es/components/text-area/text-area.js
var import_react141 = __toESM(require_react());
var classPrefix74 = "adm-text-area";
var defaultProps56 = {
  rows: 2,
  showCount: false,
  autoSize: false,
  defaultValue: ""
};
var TextArea = (0, import_react141.forwardRef)((p, ref) => {
  const props = mergeProps(defaultProps56, p);
  const {
    autoSize,
    showCount,
    maxLength
  } = props;
  const [value, setValue2] = usePropsValue(Object.assign(Object.assign({}, props), {
    value: props.value === null ? "" : props.value
  }));
  if (props.value === null) {
    devError("TextArea", "`value` prop on `TextArea` should not be `null`. Consider using an empty string to clear the component.");
  }
  const nativeTextAreaRef = (0, import_react141.useRef)(null);
  (0, import_react141.useImperativeHandle)(ref, () => ({
    clear: () => {
      setValue2("");
    },
    focus: () => {
      var _a;
      (_a = nativeTextAreaRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    },
    blur: () => {
      var _a;
      (_a = nativeTextAreaRef.current) === null || _a === void 0 ? void 0 : _a.blur();
    },
    get nativeElement() {
      return nativeTextAreaRef.current;
    }
  }));
  useIsomorphicLayoutEffect_default(() => {
    if (!autoSize)
      return;
    const textArea = nativeTextAreaRef.current;
    if (!textArea)
      return;
    textArea.style.height = "auto";
    let height = textArea.scrollHeight;
    if (typeof autoSize === "object") {
      const computedStyle = window.getComputedStyle(textArea);
      const lineHeight = parseFloat(computedStyle.lineHeight);
      if (autoSize.minRows) {
        height = Math.max(height, autoSize.minRows * lineHeight);
      }
      if (autoSize.maxRows) {
        height = Math.min(height, autoSize.maxRows * lineHeight);
      }
    }
    textArea.style.height = `${height}px`;
  }, [value, autoSize]);
  const compositingRef = (0, import_react141.useRef)(false);
  let count;
  const valueLength = [...value].length;
  if (typeof showCount === "function") {
    count = showCount(valueLength, maxLength);
  } else if (showCount) {
    count = import_react141.default.createElement("div", {
      className: `${classPrefix74}-count`
    }, maxLength === void 0 ? valueLength : valueLength + "/" + maxLength);
  }
  return withNativeProps(props, import_react141.default.createElement("div", {
    className: classPrefix74
  }, import_react141.default.createElement("textarea", {
    ref: nativeTextAreaRef,
    className: `${classPrefix74}-element`,
    rows: props.rows,
    value,
    placeholder: props.placeholder,
    onChange: (e) => {
      let v = e.target.value;
      if (maxLength && !compositingRef.current) {
        v = [...v].slice(0, maxLength).join("");
      }
      setValue2(v);
    },
    id: props.id,
    onCompositionStart: (e) => {
      var _a;
      compositingRef.current = true;
      (_a = props.onCompositionStart) === null || _a === void 0 ? void 0 : _a.call(props, e);
    },
    onCompositionEnd: (e) => {
      var _a;
      compositingRef.current = false;
      if (maxLength) {
        const v = e.target.value;
        setValue2([...v].slice(0, maxLength).join(""));
      }
      (_a = props.onCompositionEnd) === null || _a === void 0 ? void 0 : _a.call(props, e);
    },
    autoComplete: props.autoComplete,
    autoFocus: props.autoFocus,
    disabled: props.disabled,
    readOnly: props.readOnly,
    name: props.name,
    onFocus: props.onFocus,
    onBlur: props.onBlur,
    onClick: props.onClick
  }), count));
});
TextArea.defaultProps = defaultProps56;

// node_modules/antd-mobile/es/components/text-area/index.js
var text_area_default = TextArea;

// node_modules/antd-mobile/es/components/toast/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/toast/toast.css";

// node_modules/antd-mobile/es/components/toast/methods.js
var import_react143 = __toESM(require_react());

// node_modules/antd-mobile/es/components/toast/toast.js
var import_react142 = __toESM(require_react());
var import_classnames58 = __toESM(require_classnames());
var classPrefix75 = `adm-toast`;
var defaultProps57 = {
  maskClickable: true,
  stopPropagation: ["click"]
};
var InternalToast = (p) => {
  const props = mergeProps(defaultProps57, p);
  const {
    maskClickable,
    content,
    icon,
    position
  } = props;
  const iconElement = (0, import_react142.useMemo)(() => {
    if (icon === null || icon === void 0)
      return null;
    switch (icon) {
      case "success":
        return import_react142.default.createElement(CheckOutline_default, {
          className: `${classPrefix75}-icon-success`
        });
      case "fail":
        return import_react142.default.createElement(CloseOutline_default, {
          className: `${classPrefix75}-icon-fail`
        });
      case "loading":
        return import_react142.default.createElement(spin_loading_default, {
          color: "white",
          className: `${classPrefix75}-loading`
        });
      default:
        return icon;
    }
  }, [icon]);
  const top = (0, import_react142.useMemo)(() => {
    switch (position) {
      case "top":
        return "20%";
      case "bottom":
        return "80%";
      default:
        return "50%";
    }
  }, [position]);
  return import_react142.default.createElement(mask_default, {
    visible: props.visible,
    destroyOnClose: true,
    opacity: 0,
    disableBodyScroll: !maskClickable,
    getContainer: props.getContainer,
    afterClose: props.afterClose,
    style: Object.assign({
      pointerEvents: maskClickable ? "none" : "auto"
    }, props.maskStyle),
    className: (0, import_classnames58.default)(`${classPrefix75}-mask`, props.maskClassName),
    stopPropagation: props.stopPropagation
  }, import_react142.default.createElement("div", {
    className: (0, import_classnames58.default)(`${classPrefix75}-wrap`)
  }, import_react142.default.createElement("div", {
    style: {
      top
    },
    className: (0, import_classnames58.default)(`${classPrefix75}-main`, icon ? `${classPrefix75}-main-icon` : `${classPrefix75}-main-text`)
  }, iconElement && import_react142.default.createElement("div", {
    className: `${classPrefix75}-icon`
  }, iconElement), import_react142.default.createElement(auto_center_default, null, content))));
};

// node_modules/antd-mobile/es/components/toast/methods.js
var currentHandler = null;
var currentTimeout = null;
var defaultProps58 = {
  duration: 2e3,
  position: "center",
  maskClickable: true
};
var ToastInner = (props) => import_react143.default.createElement(InternalToast, Object.assign({}, props));
function show3(p) {
  const props = mergeProps(defaultProps58, typeof p === "string" ? {
    content: p
  } : p);
  const element = import_react143.default.createElement(ToastInner, Object.assign({}, props, {
    onClose: () => {
      currentHandler = null;
    }
  }));
  if (currentHandler) {
    currentHandler.replace(element);
  } else {
    currentHandler = renderImperatively(element);
  }
  if (currentTimeout) {
    window.clearTimeout(currentTimeout);
  }
  if (props.duration !== 0) {
    currentTimeout = window.setTimeout(() => {
      clear3();
    }, props.duration);
  }
  return currentHandler;
}
function clear3() {
  currentHandler === null || currentHandler === void 0 ? void 0 : currentHandler.close();
  currentHandler = null;
}
function config(val) {
  if (val.duration !== void 0) {
    defaultProps58.duration = val.duration;
  }
  if (val.position !== void 0) {
    defaultProps58.position = val.position;
  }
  if (val.maskClickable !== void 0) {
    defaultProps58.maskClickable = val.maskClickable;
  }
}

// node_modules/antd-mobile/es/components/toast/index.js
var Toast = {
  show: show3,
  clear: clear3,
  config
};
var toast_default = Toast;

// node_modules/antd-mobile/es/components/tree-select/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/tree-select/tree-select.css";

// node_modules/antd-mobile/es/components/tree-select/tree-select.js
var import_classnames59 = __toESM(require_classnames());
var import_react144 = __toESM(require_react());

// node_modules/antd-mobile/es/utils/tree.js
function getTreeDeep(treeData, childrenName = "children") {
  const walker = (tree) => {
    let deep = 0;
    tree.forEach((item) => {
      if (item[childrenName]) {
        deep = Math.max(deep, walker(item[childrenName]) + 1);
      } else {
        deep = Math.max(deep, 1);
      }
    });
    return deep;
  };
  return walker(treeData);
}

// node_modules/antd-mobile/es/components/tree-select/tree-select.js
var classPrefix76 = `adm-tree-select`;
var defaultProps59 = {
  options: [],
  fieldNames: {},
  defaultValue: []
};
var TreeSelect = (p) => {
  const props = mergeProps(defaultProps59, p);
  const labelName = props.fieldNames.label || "label";
  const valueName = props.fieldNames.value || "value";
  const childrenName = props.fieldNames.children || "children";
  const [value, setValue2] = usePropsValue({
    value: props.value,
    defaultValue: props.defaultValue
  });
  const [deep, optionsMap, optionsParentMap] = (0, import_react144.useMemo)(() => {
    const deep2 = getTreeDeep(props.options, childrenName);
    const optionsMap2 = /* @__PURE__ */ new Map();
    const optionsParentMap2 = /* @__PURE__ */ new Map();
    function traverse(current, children) {
      children.forEach((item) => {
        optionsParentMap2.set(item[valueName], current);
        optionsMap2.set(item[valueName], item);
        if (item[childrenName]) {
          traverse(item, item[childrenName]);
        }
      });
    }
    traverse(void 0, props.options);
    return [deep2, optionsMap2, optionsParentMap2];
  }, [props.options]);
  const onItemSelect = (node) => {
    var _a;
    const parentNodes = [];
    let current = node;
    while (current) {
      parentNodes.push(current);
      const next = optionsParentMap.get(current[valueName]);
      current = next;
    }
    const values = parentNodes.reverse().map((i) => i[valueName]);
    setValue2(values);
    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, values, {
      options: parentNodes
    });
  };
  const renderItems = (columnOptions = [], index) => {
    return columnOptions.map((item) => {
      const isActive = item[valueName] === value[index];
      return import_react144.default.createElement("div", {
        key: item[valueName],
        className: (0, import_classnames59.default)(`${classPrefix76}-item`, {
          [`${classPrefix76}-item-active`]: isActive
        }),
        onClick: () => {
          if (!isActive) {
            onItemSelect(item);
          }
        }
      }, item[labelName]);
    });
  };
  const renderColumns = () => {
    var _a;
    const columns = [];
    for (let i = 0; i < deep; i++) {
      let width = `${100 / deep}%`;
      if (deep === 2 && i === 0) {
        width = `33.33%`;
      }
      if (deep === 2 && i === 1) {
        width = `66.67%`;
      }
      const column = import_react144.default.createElement("div", {
        key: i,
        className: (0, import_classnames59.default)(`${classPrefix76}-column`),
        style: {
          width
        }
      }, renderItems(i === 0 ? props.options : (_a = optionsMap.get(value[i - 1])) === null || _a === void 0 ? void 0 : _a[childrenName], i));
      columns.push(column);
    }
    return columns;
  };
  return withNativeProps(props, import_react144.default.createElement("div", {
    className: classPrefix76
  }, renderColumns()));
};

// node_modules/antd-mobile/es/components/tree-select/multiple.js
var import_classnames60 = __toESM(require_classnames());
var import_react145 = __toESM(require_react());
var classPrefix77 = `adm-tree-select-multiple`;
var Multiple = (p) => {
  const props = mergeProps({
    options: [],
    fieldNames: {},
    allSelectText: [],
    defaultExpandKeys: [],
    defaultValue: []
  }, p);
  (0, import_react145.useEffect)(() => {
    devWarning("TreeSelect", "TreeSelect.Multiple has been deprecated.");
  }, []);
  const labelName = props.fieldNames.label || "label";
  const valueName = props.fieldNames.value || "value";
  const childrenName = props.fieldNames.children || "children";
  const [expandKeys, setExpandKeys] = usePropsValue({
    value: props.expandKeys,
    defaultValue: props.defaultExpandKeys
  });
  const [value, setValue2] = usePropsValue({
    value: props.value,
    defaultValue: props.defaultValue
  });
  const getLeafKeys = (option) => {
    const keys = [];
    const walker = (op) => {
      var _a;
      if (!op) {
        return;
      }
      if ((_a = op[childrenName]) === null || _a === void 0 ? void 0 : _a.length) {
        op[childrenName].forEach((i) => walker(i));
      } else {
        keys.push(op[valueName]);
      }
    };
    walker(option);
    return keys;
  };
  const [deep, optionsMap, optionsParentMap] = (0, import_react145.useMemo)(() => {
    const deep2 = getTreeDeep(props.options, childrenName);
    const optionsMap2 = /* @__PURE__ */ new Map();
    const optionsParentMap2 = /* @__PURE__ */ new Map();
    function traverse(current, children) {
      children.forEach((item) => {
        optionsParentMap2.set(item[valueName], current);
        optionsMap2.set(item[valueName], item);
        if (item[childrenName]) {
          traverse(item, item[childrenName]);
        }
      });
    }
    traverse(void 0, props.options);
    return [deep2, optionsMap2, optionsParentMap2];
  }, [props.options]);
  const allSelectedLeafKeys = (0, import_react145.useMemo)(() => {
    let leafKeys = [];
    value.forEach((v) => {
      const option = optionsMap.get(v);
      leafKeys = leafKeys.concat(getLeafKeys(option));
    });
    return leafKeys;
  }, [value, optionsMap]);
  const dotMap = (0, import_react145.useMemo)(() => {
    const map = /* @__PURE__ */ new Map();
    const walker = (key) => {
      const parentOption = optionsParentMap.get(key);
      if (!parentOption) {
        return;
      }
      map.set(parentOption[valueName], true);
      walker(parentOption[valueName]);
    };
    allSelectedLeafKeys.forEach((key) => {
      map.set(key, true);
      walker(key);
    });
    return map;
  }, [optionsParentMap, value]);
  const onChange = (targetKeys) => {
    var _a;
    let groupKeys = [...targetKeys];
    let unusedKeys = [];
    const walker = (keys) => {
      keys.forEach((key) => {
        var _a2;
        if (unusedKeys.includes(key)) {
          return;
        }
        const parent = optionsParentMap.get(key);
        if (!parent) {
          return;
        }
        const childrenKeys = ((_a2 = parent[childrenName]) === null || _a2 === void 0 ? void 0 : _a2.map((i) => i[valueName])) || [];
        if (childrenKeys.every((i) => groupKeys.includes(i))) {
          groupKeys.push(parent[valueName]);
          unusedKeys = unusedKeys.concat(childrenKeys);
        }
      });
    };
    for (let i = 0; i < deep; i++) {
      walker(groupKeys);
    }
    groupKeys = groupKeys.filter((i) => !unusedKeys.includes(i));
    const groupOptions = groupKeys.map((i) => optionsMap.get(i));
    setValue2(groupKeys);
    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, groupKeys, groupOptions);
  };
  const onItemSelect = (option) => {
    var _a;
    const parentNodes = [];
    let current = option;
    while (current) {
      parentNodes.unshift(current);
      const next = optionsParentMap.get(current[valueName]);
      current = next;
    }
    const keys = parentNodes.map((i) => i[valueName]);
    setExpandKeys(keys);
    (_a = props.onExpand) === null || _a === void 0 ? void 0 : _a.call(props, keys, parentNodes);
  };
  const renderSelectAllItem = (columnOptions, index) => {
    var _a;
    const text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];
    if (!text) {
      return;
    }
    let currentLeafKeys = [];
    columnOptions.forEach((option) => {
      currentLeafKeys = currentLeafKeys.concat(getLeafKeys(option));
    });
    const allSelected = currentLeafKeys.every((i) => allSelectedLeafKeys.includes(i));
    return import_react145.default.createElement("div", {
      onClick: () => {
        if (allSelected) {
          onChange(allSelectedLeafKeys.filter((i) => !currentLeafKeys.includes(i)));
        } else {
          onChange(allSelectedLeafKeys.concat(currentLeafKeys));
        }
      },
      className: `${classPrefix77}-item`
    }, text);
  };
  const renderSelectAllLeafItem = (columnOptions, index) => {
    var _a;
    const text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];
    if (!text) {
      return;
    }
    const currentLeafKeys = columnOptions.map((i) => i[valueName]);
    const allSelected = currentLeafKeys.every((i) => allSelectedLeafKeys.includes(i));
    const halfSelected = allSelected ? false : currentLeafKeys.some((i) => allSelectedLeafKeys.includes(i));
    return import_react145.default.createElement("div", {
      onClick: () => {
        if (allSelected) {
          onChange(allSelectedLeafKeys.filter((i) => !currentLeafKeys.includes(i)));
        } else {
          onChange(allSelectedLeafKeys.concat(currentLeafKeys));
        }
      },
      className: (0, import_classnames60.default)(`${classPrefix77}-item`, `${classPrefix77}-item-leaf`)
    }, import_react145.default.createElement(checkbox_default, {
      className: `${classPrefix77}-item-checkbox`,
      checked: allSelected,
      indeterminate: halfSelected
    }), text);
  };
  const renderItem = (option) => {
    const isExpand = expandKeys.includes(option[valueName]);
    return import_react145.default.createElement("div", {
      key: option[valueName],
      onClick: () => {
        if (!isExpand) {
          onItemSelect(option);
        }
      },
      className: (0, import_classnames60.default)(`${classPrefix77}-item`, {
        [`${classPrefix77}-item-expand`]: isExpand
      })
    }, option[labelName], !!dotMap.get(option[valueName]) && import_react145.default.createElement("div", {
      className: `${classPrefix77}-dot`
    }));
  };
  const renderLeafItem = (option) => {
    const isSelected = allSelectedLeafKeys.includes(option[valueName]);
    return import_react145.default.createElement("div", {
      key: option[valueName],
      onClick: () => {
        if (isSelected) {
          onChange(allSelectedLeafKeys.filter((val) => val !== option[valueName]));
        } else {
          onChange([...allSelectedLeafKeys, option[valueName]]);
        }
      },
      className: (0, import_classnames60.default)(`${classPrefix77}-item`, `${classPrefix77}-item-leaf`)
    }, import_react145.default.createElement(checkbox_default, {
      className: `${classPrefix77}-item-checkbox`,
      checked: isSelected
    }), option[labelName]);
  };
  const renderItems = (columnOptions = [], index) => {
    if (columnOptions.length === 0) {
      return;
    }
    const isLeaf = deep === index + 1;
    if (isLeaf) {
      return import_react145.default.createElement(import_react145.default.Fragment, null, renderSelectAllLeafItem(columnOptions, index), columnOptions.map((option) => {
        return renderLeafItem(option);
      }));
    }
    return import_react145.default.createElement(import_react145.default.Fragment, null, renderSelectAllItem(columnOptions, index), columnOptions.map((option) => {
      return renderItem(option);
    }));
  };
  const renderColumns = () => {
    var _a;
    const columns = [];
    for (let i = 0; i < deep; i++) {
      let width = `${100 / deep}%`;
      if (deep === 2 && i === 0) {
        width = `33.33%`;
      }
      if (deep === 2 && i === 1) {
        width = `66.67%`;
      }
      const column = import_react145.default.createElement("div", {
        key: i,
        className: (0, import_classnames60.default)(`${classPrefix77}-column`),
        style: {
          width
        }
      }, renderItems(i === 0 ? props.options : (_a = optionsMap.get(expandKeys[i - 1])) === null || _a === void 0 ? void 0 : _a[childrenName], i));
      columns.push(column);
    }
    return columns;
  };
  return withNativeProps(props, import_react145.default.createElement("div", {
    className: classPrefix77
  }, renderColumns()));
};

// node_modules/antd-mobile/es/components/tree-select/index.js
var tree_select_default = attachPropertiesToComponent(TreeSelect, {
  Multiple
});

// node_modules/antd-mobile/es/components/virtual-input/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/virtual-input/virtual-input.css";

// node_modules/antd-mobile/es/components/virtual-input/virtual-input.js
var import_react146 = __toESM(require_react());
var import_classnames61 = __toESM(require_classnames());
var classPrefix78 = "adm-virtual-input";
var defaultProps60 = {
  defaultValue: ""
};
var VirtualInput = (0, import_react146.forwardRef)((p, ref) => {
  const props = mergeProps(defaultProps60, p);
  const [value, setValue2] = usePropsValue(props);
  const rootRef = (0, import_react146.useRef)(null);
  const contentRef = (0, import_react146.useRef)(null);
  const [hasFocus, setHasFocus] = (0, import_react146.useState)(false);
  function scrollToEnd() {
    const root = rootRef.current;
    if (!root)
      return;
    if (document.activeElement !== root) {
      return;
    }
    const content = contentRef.current;
    if (!content)
      return;
    content.scrollLeft = content.clientWidth;
  }
  useIsomorphicLayoutEffect_default(() => {
    scrollToEnd();
  }, [value]);
  (0, import_react146.useEffect)(() => {
    if (hasFocus) {
      scrollToEnd();
    }
  }, [hasFocus]);
  (0, import_react146.useImperativeHandle)(ref, () => ({
    focus: () => {
      var _a;
      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    },
    blur: () => {
      var _a;
      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.blur();
    }
  }));
  function onFocus() {
    var _a;
    setHasFocus(true);
    (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props);
  }
  function onBlur() {
    var _a;
    setHasFocus(false);
    (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props);
  }
  const keyboard = props.keyboard;
  const keyboardElement = keyboard && import_react146.default.cloneElement(keyboard, {
    onInput: (v) => {
      var _a, _b;
      setValue2(value + v);
      (_b = (_a = keyboard.props).onInput) === null || _b === void 0 ? void 0 : _b.call(_a, v);
    },
    onDelete: () => {
      var _a, _b;
      setValue2(value.slice(0, -1));
      (_b = (_a = keyboard.props).onDelete) === null || _b === void 0 ? void 0 : _b.call(_a);
    },
    visible: hasFocus,
    onClose: () => {
      var _a, _b, _c;
      (_a = rootRef.current) === null || _a === void 0 ? void 0 : _a.blur();
      (_c = (_b = keyboard.props).onClose) === null || _c === void 0 ? void 0 : _c.call(_b);
    },
    getContainer: null
  });
  return withNativeProps(props, import_react146.default.createElement("div", {
    ref: rootRef,
    className: (0, import_classnames61.default)(classPrefix78, {
      [`${classPrefix78}-disabled`]: props.disabled
    }),
    tabIndex: props.disabled ? void 0 : 0,
    onFocus,
    onBlur,
    onClick: props.onClick
  }, import_react146.default.createElement("div", {
    className: `${classPrefix78}-content`,
    ref: contentRef
  }, value, import_react146.default.createElement("div", {
    className: `${classPrefix78}-caret-container`
  }, hasFocus && import_react146.default.createElement("div", {
    className: `${classPrefix78}-caret`
  }))), props.clearable && !!value && hasFocus && import_react146.default.createElement("div", {
    className: `${classPrefix78}-clear`,
    onClick: (e) => {
      var _a;
      e.stopPropagation();
      setValue2("");
      (_a = props.onClear) === null || _a === void 0 ? void 0 : _a.call(props);
    }
  }, import_react146.default.createElement(CloseCircleFill_default, null)), !value && import_react146.default.createElement("div", {
    className: `${classPrefix78}-placeholder`
  }, props.placeholder), keyboardElement));
});

// node_modules/antd-mobile/es/components/virtual-input/index.js
var virtual_input_default = VirtualInput;

// node_modules/antd-mobile/es/components/water-mark/index.js
import "C:/Users/15231/Desktop/Learn/webLearning/cavans_-jswarehouse1/project_Developing/bilibiliLike/node_modules/antd-mobile/es/components/water-mark/water-mark.css";

// node_modules/antd-mobile/es/components/water-mark/water-mark.js
var import_classnames62 = __toESM(require_classnames());
var import_react147 = __toESM(require_react());
var classPrefix79 = `adm-water-mark`;
var defaultProps61 = {
  fullPage: true
};
var WaterMark = (p) => {
  const props = mergeProps(defaultProps61, p);
  const {
    zIndex = 2e3,
    gapX = 24,
    gapY = 48,
    width = 120,
    height = 64,
    rotate = -22,
    image,
    imageWidth = 120,
    imageHeight = 64,
    content,
    fontStyle = "normal",
    fontWeight = "normal",
    fontColor = "rgba(0,0,0,.15)",
    fontSize = 14,
    fontFamily = "sans-serif"
  } = props;
  const [base64Url, setBase64Url] = (0, import_react147.useState)("");
  (0, import_react147.useEffect)(() => {
    const canvas = document.createElement("canvas");
    const ratio = window.devicePixelRatio;
    const ctx = canvas.getContext("2d");
    const canvasWidth = `${(gapX + width) * ratio}px`;
    const canvasHeight = `${(gapY + height) * ratio}px`;
    const markWidth = width * ratio;
    const markHeight = height * ratio;
    canvas.setAttribute("width", canvasWidth);
    canvas.setAttribute("height", canvasHeight);
    if (ctx) {
      if (image) {
        ctx.translate(markWidth / 2, markHeight / 2);
        ctx.rotate(Math.PI / 180 * Number(rotate));
        const img = new Image();
        img.crossOrigin = "anonymous";
        img.referrerPolicy = "no-referrer";
        img.onload = () => {
          ctx.drawImage(img, -imageWidth * ratio / 2, -imageHeight * ratio / 2, imageWidth * ratio, imageHeight * ratio);
          ctx.restore();
          setBase64Url(canvas.toDataURL());
        };
        img.src = image;
      } else if (content) {
        ctx.textBaseline = "middle";
        ctx.textAlign = "center";
        ctx.translate(markWidth / 2, markHeight / 2);
        ctx.rotate(Math.PI / 180 * Number(rotate));
        const markSize = Number(fontSize) * ratio;
        ctx.font = `${fontStyle} normal ${fontWeight} ${markSize}px/${markHeight}px ${fontFamily}`;
        ctx.fillStyle = fontColor;
        ctx.fillText(content, 0, 0);
        ctx.restore();
        setBase64Url(canvas.toDataURL());
      }
    } else {
      throw new Error("Canvas is not supported in the current environment");
    }
  }, [gapX, gapY, rotate, fontStyle, fontWeight, width, height, fontFamily, fontColor, image, content, fontSize]);
  return withNativeProps(props, import_react147.default.createElement("div", {
    className: (0, import_classnames62.default)(classPrefix79, {
      [`${classPrefix79}-full-page`]: props.fullPage
    }),
    style: {
      zIndex,
      backgroundSize: `${gapX + width}px`,
      backgroundImage: `url('${base64Url}')`
    }
  }));
};

// node_modules/antd-mobile/es/components/water-mark/index.js
var water_mark_default = WaterMark;
export {
  action_sheet_default as ActionSheet,
  auto_center_default as AutoCenter,
  avatar_default as Avatar,
  badge_default as Badge,
  button_default as Button,
  calendar_default as Calendar,
  capsule_tabs_default as CapsuleTabs,
  card_default as Card,
  cascade_picker_default as CascadePicker,
  cascade_picker_view_default as CascadePickerView,
  cascader_default as Cascader,
  cascader_view_default as CascaderView,
  center_popup_default as CenterPopup,
  check_list_default as CheckList,
  checkbox_default as Checkbox,
  collapse_default as Collapse,
  config_provider_default as ConfigProvider,
  date_picker_default as DatePicker,
  date_picker_view_default as DatePickerView,
  dialog_default as Dialog,
  divider_default as Divider,
  dot_loading_default as DotLoading,
  dropdown_default as Dropdown,
  ellipsis_default as Ellipsis,
  empty_default as Empty,
  error_block_default as ErrorBlock,
  floating_bubble_default as FloatingBubble,
  floating_panel_default as FloatingPanel,
  form_default as Form,
  grid_default as Grid,
  image_default as Image,
  image_uploader_default as ImageUploader,
  image_viewer_default as ImageViewer,
  index_bar_default as IndexBar,
  infinite_scroll_default as InfiniteScroll,
  input_default as Input,
  jumbo_tabs_default as JumboTabs,
  list_default as List,
  loading_default as Loading,
  mask_default as Mask,
  modal_default as Modal,
  nav_bar_default as NavBar,
  notice_bar_default as NoticeBar,
  number_keyboard_default as NumberKeyboard,
  page_indicator_default as PageIndicator,
  passcode_input_default as PasscodeInput,
  picker_default as Picker,
  picker_view_default as PickerView,
  popover_default as Popover,
  popup_default as Popup,
  progress_bar_default as ProgressBar,
  progress_circle_default as ProgressCircle,
  pull_to_refresh_default as PullToRefresh,
  radio_default as Radio,
  rate_default as Rate,
  result_default as Result,
  safe_area_default as SafeArea,
  scroll_mask_default as ScrollMask,
  search_bar_default as SearchBar,
  selector_default as Selector,
  side_bar_default as SideBar,
  skeleton_default as Skeleton,
  slider_default as Slider,
  space_default as Space,
  spin_loading_default as SpinLoading,
  stepper_default as Stepper,
  steps_default as Steps,
  swipe_action_default as SwipeAction,
  swiper_default as Swiper,
  switch_default as Switch,
  tab_bar_default as TabBar,
  tabs_default as Tabs,
  tag_default as Tag,
  text_area_default as TextArea,
  toast_default as Toast,
  tree_select_default as TreeSelect,
  virtual_input_default as VirtualInput,
  water_mark_default as WaterMark,
  createErrorBlock,
  reduceMotion,
  restoreMotion,
  setDefaultConfig
};
/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=antd-mobile.js.map
